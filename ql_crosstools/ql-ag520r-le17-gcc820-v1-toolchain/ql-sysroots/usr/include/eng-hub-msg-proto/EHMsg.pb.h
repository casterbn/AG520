// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EHMsg.proto

#ifndef PROTOBUF_EHMsg_2eproto__INCLUDED
#define PROTOBUF_EHMsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "LocationDataTypes.pb.h"
// @@protoc_insertion_point(includes)
class EHEngineConnectionInfo;
class EHEngineConnectionInfoDefaultTypeInternal;
extern EHEngineConnectionInfoDefaultTypeInternal _EHEngineConnectionInfo_default_instance_;
class EHEngineConnectionIpAddrInfo;
class EHEngineConnectionIpAddrInfoDefaultTypeInternal;
extern EHEngineConnectionIpAddrInfoDefaultTypeInternal _EHEngineConnectionIpAddrInfo_default_instance_;
class EHMessageProtocolRoutingTableUpdate;
class EHMessageProtocolRoutingTableUpdateDefaultTypeInternal;
extern EHMessageProtocolRoutingTableUpdateDefaultTypeInternal _EHMessageProtocolRoutingTableUpdate_default_instance_;
class EHMessageReportCdfwQDgnssObservation;
class EHMessageReportCdfwQDgnssObservationDefaultTypeInternal;
extern EHMessageReportCdfwQDgnssObservationDefaultTypeInternal _EHMessageReportCdfwQDgnssObservation_default_instance_;
class EHMessageReportCdfwQDgnssReferenceStation;
class EHMessageReportCdfwQDgnssReferenceStationDefaultTypeInternal;
extern EHMessageReportCdfwQDgnssReferenceStationDefaultTypeInternal _EHMessageReportCdfwQDgnssReferenceStation_default_instance_;
class EHMessageReportGlonassAdditionalParams;
class EHMessageReportGlonassAdditionalParamsDefaultTypeInternal;
extern EHMessageReportGlonassAdditionalParamsDefaultTypeInternal _EHMessageReportGlonassAdditionalParams_default_instance_;
class EHMessageReportKlobucharIonoModel;
class EHMessageReportKlobucharIonoModelDefaultTypeInternal;
extern EHMessageReportKlobucharIonoModelDefaultTypeInternal _EHMessageReportKlobucharIonoModel_default_instance_;
class EHMessageReportPosition;
class EHMessageReportPositionDefaultTypeInternal;
extern EHMessageReportPositionDefaultTypeInternal _EHMessageReportPosition_default_instance_;
class EHMessageReportSv;
class EHMessageReportSvDefaultTypeInternal;
extern EHMessageReportSvDefaultTypeInternal _EHMessageReportSv_default_instance_;
class EHMessageReportSvEphemeris;
class EHMessageReportSvEphemerisDefaultTypeInternal;
extern EHMessageReportSvEphemerisDefaultTypeInternal _EHMessageReportSvEphemeris_default_instance_;
class EHMessageReportSvMeas;
class EHMessageReportSvMeasDefaultTypeInternal;
extern EHMessageReportSvMeasDefaultTypeInternal _EHMessageReportSvMeas_default_instance_;
class EHMessageReportSvPolynomial;
class EHMessageReportSvPolynomialDefaultTypeInternal;
extern EHMessageReportSvPolynomialDefaultTypeInternal _EHMessageReportSvPolynomial_default_instance_;
class EHMessageSessionDeleteAidingData;
class EHMessageSessionDeleteAidingDataDefaultTypeInternal;
extern EHMessageSessionDeleteAidingDataDefaultTypeInternal _EHMessageSessionDeleteAidingData_default_instance_;
class EHMessageSessionSetFixMode;
class EHMessageSessionSetFixModeDefaultTypeInternal;
extern EHMessageSessionSetFixModeDefaultTypeInternal _EHMessageSessionSetFixMode_default_instance_;
class EHMessageStatusB2sMountParams;
class EHMessageStatusB2sMountParamsDefaultTypeInternal;
extern EHMessageStatusB2sMountParamsDefaultTypeInternal _EHMessageStatusB2sMountParams_default_instance_;
class EHMessageStatusConnectivity;
class EHMessageStatusConnectivityDefaultTypeInternal;
extern EHMessageStatusConnectivityDefaultTypeInternal _EHMessageStatusConnectivity_default_instance_;
class EHMessageStatusLeverArmConfig;
class EHMessageStatusLeverArmConfigDefaultTypeInternal;
extern EHMessageStatusLeverArmConfigDefaultTypeInternal _EHMessageStatusLeverArmConfig_default_instance_;
class EHRoutingTableEntry;
class EHRoutingTableEntryDefaultTypeInternal;
extern EHRoutingTableEntryDefaultTypeInternal _EHRoutingTableEntry_default_instance_;
class EHSubModifiers;
class EHSubModifiersDefaultTypeInternal;
extern EHSubModifiersDefaultTypeInternal _EHSubModifiers_default_instance_;
class EHSubscriptionModifier;
class EHSubscriptionModifierDefaultTypeInternal;
extern EHSubscriptionModifierDefaultTypeInternal _EHSubscriptionModifier_default_instance_;
class EngineHubMessage;
class EngineHubMessageDefaultTypeInternal;
extern EngineHubMessageDefaultTypeInternal _EngineHubMessage_default_instance_;
class EngineHubMessageWithMsgCounter;
class EngineHubMessageWithMsgCounterDefaultTypeInternal;
extern EngineHubMessageWithMsgCounterDefaultTypeInternal _EngineHubMessageWithMsgCounter_default_instance_;
class PBApTimeStampStructType;
class PBApTimeStampStructTypeDefaultTypeInternal;
extern PBApTimeStampStructTypeDefaultTypeInternal _PBApTimeStampStructType_default_instance_;
class PBBdsEphemeris;
class PBBdsEphemerisDefaultTypeInternal;
extern PBBdsEphemerisDefaultTypeInternal _PBBdsEphemeris_default_instance_;
class PBBdsEphemerisResponse;
class PBBdsEphemerisResponseDefaultTypeInternal;
extern PBBdsEphemerisResponseDefaultTypeInternal _PBBdsEphemerisResponse_default_instance_;
class PBBodyToSensorMountParams;
class PBBodyToSensorMountParamsDefaultTypeInternal;
extern PBBodyToSensorMountParamsDefaultTypeInternal _PBBodyToSensorMountParams_default_instance_;
class PBDGnssMeasurement;
class PBDGnssMeasurementDefaultTypeInternal;
extern PBDGnssMeasurementDefaultTypeInternal _PBDGnssMeasurement_default_instance_;
class PBDGnssObservation;
class PBDGnssObservationDefaultTypeInternal;
extern PBDGnssObservationDefaultTypeInternal _PBDGnssObservation_default_instance_;
class PBDGnssObservationStatusFlags;
class PBDGnssObservationStatusFlagsDefaultTypeInternal;
extern PBDGnssObservationStatusFlagsDefaultTypeInternal _PBDGnssObservationStatusFlags_default_instance_;
class PBGPSTimeStruct;
class PBGPSTimeStructDefaultTypeInternal;
extern PBGPSTimeStructDefaultTypeInternal _PBGPSTimeStruct_default_instance_;
class PBGalileoEphemeris;
class PBGalileoEphemerisDefaultTypeInternal;
extern PBGalileoEphemerisDefaultTypeInternal _PBGalileoEphemeris_default_instance_;
class PBGalileoEphemerisResponse;
class PBGalileoEphemerisResponseDefaultTypeInternal;
extern PBGalileoEphemerisResponseDefaultTypeInternal _PBGalileoEphemerisResponse_default_instance_;
class PBGlonassEphemeris;
class PBGlonassEphemerisDefaultTypeInternal;
extern PBGlonassEphemerisDefaultTypeInternal _PBGlonassEphemeris_default_instance_;
class PBGlonassEphemerisResponse;
class PBGlonassEphemerisResponseDefaultTypeInternal;
extern PBGlonassEphemerisResponseDefaultTypeInternal _PBGlonassEphemerisResponse_default_instance_;
class PBGnssAdditionalSystemInfo;
class PBGnssAdditionalSystemInfoDefaultTypeInternal;
extern PBGnssAdditionalSystemInfoDefaultTypeInternal _PBGnssAdditionalSystemInfo_default_instance_;
class PBGnssAidingData;
class PBGnssAidingDataDefaultTypeInternal;
extern PBGnssAidingDataDefaultTypeInternal _PBGnssAidingData_default_instance_;
class PBGnssAidingDataCommon;
class PBGnssAidingDataCommonDefaultTypeInternal;
extern PBGnssAidingDataCommonDefaultTypeInternal _PBGnssAidingDataCommon_default_instance_;
class PBGnssAidingDataSv;
class PBGnssAidingDataSvDefaultTypeInternal;
extern PBGnssAidingDataSvDefaultTypeInternal _PBGnssAidingDataSv_default_instance_;
class PBGnssEphCommon;
class PBGnssEphCommonDefaultTypeInternal;
extern PBGnssEphCommonDefaultTypeInternal _PBGnssEphCommon_default_instance_;
class PBGnssEpochTime;
class PBGnssEpochTimeDefaultTypeInternal;
extern PBGnssEpochTimeDefaultTypeInternal _PBGnssEpochTime_default_instance_;
class PBGnssEpochTime_glonassEpochTime;
class PBGnssEpochTime_glonassEpochTimeDefaultTypeInternal;
extern PBGnssEpochTime_glonassEpochTimeDefaultTypeInternal _PBGnssEpochTime_glonassEpochTime_default_instance_;
class PBGnssGloTimeStructType;
class PBGnssGloTimeStructTypeDefaultTypeInternal;
extern PBGnssGloTimeStructTypeDefaultTypeInternal _PBGnssGloTimeStructType_default_instance_;
class PBGnssInterSystemBias;
class PBGnssInterSystemBiasDefaultTypeInternal;
extern PBGnssInterSystemBiasDefaultTypeInternal _PBGnssInterSystemBias_default_instance_;
class PBGnssKlobucharIonoModel;
class PBGnssKlobucharIonoModelDefaultTypeInternal;
extern PBGnssKlobucharIonoModelDefaultTypeInternal _PBGnssKlobucharIonoModel_default_instance_;
class PBGnssLocDgnssSVMeasurement;
class PBGnssLocDgnssSVMeasurementDefaultTypeInternal;
extern PBGnssLocDgnssSVMeasurementDefaultTypeInternal _PBGnssLocDgnssSVMeasurement_default_instance_;
class PBGnssLocationPositionDynamics;
class PBGnssLocationPositionDynamicsDefaultTypeInternal;
extern PBGnssLocationPositionDynamicsDefaultTypeInternal _PBGnssLocationPositionDynamics_default_instance_;
class PBGnssSv;
class PBGnssSvDefaultTypeInternal;
extern PBGnssSvDefaultTypeInternal _PBGnssSv_default_instance_;
class PBGnssSvEphemerisReport;
class PBGnssSvEphemerisReportDefaultTypeInternal;
extern PBGnssSvEphemerisReportDefaultTypeInternal _PBGnssSvEphemerisReport_default_instance_;
class PBGnssSvMbUsedInPosition;
class PBGnssSvMbUsedInPositionDefaultTypeInternal;
extern PBGnssSvMbUsedInPositionDefaultTypeInternal _PBGnssSvMbUsedInPosition_default_instance_;
class PBGnssSvMeasurementHeader;
class PBGnssSvMeasurementHeaderDefaultTypeInternal;
extern PBGnssSvMeasurementHeaderDefaultTypeInternal _PBGnssSvMeasurementHeader_default_instance_;
class PBGnssSvMeasurementSet;
class PBGnssSvMeasurementSetDefaultTypeInternal;
extern PBGnssSvMeasurementSetDefaultTypeInternal _PBGnssSvMeasurementSet_default_instance_;
class PBGnssSvNotification;
class PBGnssSvNotificationDefaultTypeInternal;
extern PBGnssSvNotificationDefaultTypeInternal _PBGnssSvNotification_default_instance_;
class PBGnssSvPolynomial;
class PBGnssSvPolynomialDefaultTypeInternal;
extern PBGnssSvPolynomialDefaultTypeInternal _PBGnssSvPolynomial_default_instance_;
class PBGnssSvUsedInPosition;
class PBGnssSvUsedInPositionDefaultTypeInternal;
extern PBGnssSvUsedInPositionDefaultTypeInternal _PBGnssSvUsedInPosition_default_instance_;
class PBGnssSystemTime;
class PBGnssSystemTimeDefaultTypeInternal;
extern PBGnssSystemTimeDefaultTypeInternal _PBGnssSystemTime_default_instance_;
class PBGnssSystemTimeStructType;
class PBGnssSystemTimeStructTypeDefaultTypeInternal;
extern PBGnssSystemTimeStructTypeDefaultTypeInternal _PBGnssSystemTimeStructType_default_instance_;
class PBGpsEphemeris;
class PBGpsEphemerisDefaultTypeInternal;
extern PBGpsEphemerisDefaultTypeInternal _PBGpsEphemeris_default_instance_;
class PBGpsEphemerisResponse;
class PBGpsEphemerisResponseDefaultTypeInternal;
extern PBGpsEphemerisResponseDefaultTypeInternal _PBGpsEphemerisResponse_default_instance_;
class PBGpsLocationExtended;
class PBGpsLocationExtendedDefaultTypeInternal;
extern PBGpsLocationExtendedDefaultTypeInternal _PBGpsLocationExtended_default_instance_;
class PBGpsMeasUsageInfo;
class PBGpsMeasUsageInfoDefaultTypeInternal;
extern PBGpsMeasUsageInfoDefaultTypeInternal _PBGpsMeasUsageInfo_default_instance_;
class PBLeapSecondInfo;
class PBLeapSecondInfoDefaultTypeInternal;
extern PBLeapSecondInfoDefaultTypeInternal _PBLeapSecondInfo_default_instance_;
class PBLeverArmConfigInfo;
class PBLeverArmConfigInfoDefaultTypeInternal;
extern PBLeverArmConfigInfoDefaultTypeInternal _PBLeverArmConfigInfo_default_instance_;
class PBLeverArmParams;
class PBLeverArmParamsDefaultTypeInternal;
extern PBLeverArmParamsDefaultTypeInternal _PBLeverArmParams_default_instance_;
class PBLocExtDOP;
class PBLocExtDOPDefaultTypeInternal;
extern PBLocExtDOPDefaultTypeInternal _PBLocExtDOP_default_instance_;
class PBLocGnssTimeExtInfo;
class PBLocGnssTimeExtInfoDefaultTypeInternal;
extern PBLocGnssTimeExtInfoDefaultTypeInternal _PBLocGnssTimeExtInfo_default_instance_;
class PBLocGpsLocation;
class PBLocGpsLocationDefaultTypeInternal;
extern PBLocGpsLocationDefaultTypeInternal _PBLocGpsLocation_default_instance_;
class PBLocPosMode;
class PBLocPosModeDefaultTypeInternal;
extern PBLocPosModeDefaultTypeInternal _PBLocPosMode_default_instance_;
class PBLocRcvrClockFreqInfo;
class PBLocRcvrClockFreqInfoDefaultTypeInternal;
extern PBLocRcvrClockFreqInfoDefaultTypeInternal _PBLocRcvrClockFreqInfo_default_instance_;
class PBQzssEphemerisResponse;
class PBQzssEphemerisResponseDefaultTypeInternal;
extern PBQzssEphemerisResponseDefaultTypeInternal _PBQzssEphemerisResponse_default_instance_;
class PBReferenceStation;
class PBReferenceStationDefaultTypeInternal;
extern PBReferenceStationDefaultTypeInternal _PBReferenceStation_default_instance_;
class PBSVMeasurementStructType;
class PBSVMeasurementStructTypeDefaultTypeInternal;
extern PBSVMeasurementStructTypeDefaultTypeInternal _PBSVMeasurementStructType_default_instance_;
class PBSVTimeSpeedInfo;
class PBSVTimeSpeedInfoDefaultTypeInternal;
extern PBSVTimeSpeedInfoDefaultTypeInternal _PBSVTimeSpeedInfo_default_instance_;
class PBStationStatusIndicatorMask;
class PBStationStatusIndicatorMaskDefaultTypeInternal;
extern PBStationStatusIndicatorMaskDefaultTypeInternal _PBStationStatusIndicatorMask_default_instance_;
class PBSystemTimeStructUnion;
class PBSystemTimeStructUnionDefaultTypeInternal;
extern PBSystemTimeStructUnionDefaultTypeInternal _PBSystemTimeStructUnion_default_instance_;
class PBTimespec;
class PBTimespecDefaultTypeInternal;
extern PBTimespecDefaultTypeInternal _PBTimespec_default_instance_;
class PBUlpLocation;
class PBUlpLocationDefaultTypeInternal;
extern PBUlpLocationDefaultTypeInternal _PBUlpLocation_default_instance_;

namespace protobuf_EHMsg_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_EHMsg_2eproto

enum EHMsgId {
  EH_MSG_ID_PROTOCOL_UNKNOWN = 0,
  EH_MSG_ID_PROTOCOL_ENGINE_HUB_UP = 1,
  EH_MSG_ID_PROTOCOL_REGISTRATION_REQ = 2,
  EH_MSG_ID_PROTOCOL_ROUTING_TABLE_UPDATE = 3,
  EH_MSG_ID_PROTOCOL_MAX = 99,
  EH_MSG_ID_SESSION_START = 100,
  EH_MSG_ID_SESSION_STOP = 101,
  EH_MSG_ID_SESSION_SET_FIX_MODE = 102,
  EH_MSG_ID_SESSION_DELETE_AIDING_DATA = 103,
  EH_MSG_ID_SESSION_MAX = 199,
  EH_MSG_ID_REPORT_POSITION = 200,
  EH_MSG_ID_REPORT_SV = 201,
  EH_MSG_ID_REPORT_SV_POLYNOMIAL = 202,
  EH_MSG_ID_REPORT_SV_MEAS = 203,
  EH_MSG_ID_REPORT_SV_EPHEMERIS = 204,
  EH_MSG_ID_REPORT_KLOBUCHAR_IONO_MODEL = 205,
  EH_MSG_ID_REPORT_GLONASS_ADDITIONAL_PARAMS = 206,
  EH_MSG_ID_STATUS_CONNECTIVITY = 300,
  EH_MSG_ID_STATUS_LEVER_ARM_CONFIG = 301,
  EH_MSG_ID_STATUS_BODY_TO_SENSOR_MOUNT_PARAMS = 302,
  EH_MSG_ID_REPORT_CDFW_QDGNSS_REF_STATION = 400,
  EH_MSG_ID_REPORT_CDFW_QDGNSS_OBSERVATION = 401,
  EHMsgId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EHMsgId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EHMsgId_IsValid(int value);
const EHMsgId EHMsgId_MIN = EH_MSG_ID_PROTOCOL_UNKNOWN;
const EHMsgId EHMsgId_MAX = EH_MSG_ID_REPORT_CDFW_QDGNSS_OBSERVATION;
const int EHMsgId_ARRAYSIZE = EHMsgId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EHMsgId_descriptor();
inline const ::std::string& EHMsgId_Name(EHMsgId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EHMsgId_descriptor(), value);
}
inline bool EHMsgId_Parse(
    const ::std::string& name, EHMsgId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EHMsgId>(
    EHMsgId_descriptor(), name, value);
}
enum EHMsgCommon {
  EH_MSG_COMMON = 0,
  EH_ENGINE_HUB_MSG_VERSION = 1,
  EH_MAX_E_HUB_ENTITY_COUNT = 3,
  EH_ENGINE_HUB_MAX_IP_ADDRESS_LENGTH = 40,
  EH_ENGINE_HUB_MAX_SOCKET_PATHNAME_LENGTH = 128,
  EHMsgCommon_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EHMsgCommon_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EHMsgCommon_IsValid(int value);
const EHMsgCommon EHMsgCommon_MIN = EH_MSG_COMMON;
const EHMsgCommon EHMsgCommon_MAX = EH_ENGINE_HUB_MAX_SOCKET_PATHNAME_LENGTH;
const int EHMsgCommon_ARRAYSIZE = EHMsgCommon_MAX + 1;

const ::google::protobuf::EnumDescriptor* EHMsgCommon_descriptor();
inline const ::std::string& EHMsgCommon_Name(EHMsgCommon value) {
  return ::google::protobuf::internal::NameOfEnum(
    EHMsgCommon_descriptor(), value);
}
inline bool EHMsgCommon_Parse(
    const ::std::string& name, EHMsgCommon* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EHMsgCommon>(
    EHMsgCommon_descriptor(), name, value);
}
enum EHTechId {
  EH_NODE_GNSS = 0,
  EH_NODE_PPE = 1,
  EH_NODE_DR = 2,
  EH_NODE_VPE = 3,
  EH_NODE_COUNT = 4,
  EHTechId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EHTechId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EHTechId_IsValid(int value);
const EHTechId EHTechId_MIN = EH_NODE_GNSS;
const EHTechId EHTechId_MAX = EH_NODE_COUNT;
const int EHTechId_ARRAYSIZE = EHTechId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EHTechId_descriptor();
inline const ::std::string& EHTechId_Name(EHTechId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EHTechId_descriptor(), value);
}
inline bool EHTechId_Parse(
    const ::std::string& name, EHTechId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EHTechId>(
    EHTechId_descriptor(), name, value);
}
enum EHConnectionType {
  EH_ENGINE_CONNECT_TYPE_LOCAL = 0,
  EH_ENGINE_CONNECT_TYPE_INET = 1,
  EHConnectionType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EHConnectionType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EHConnectionType_IsValid(int value);
const EHConnectionType EHConnectionType_MIN = EH_ENGINE_CONNECT_TYPE_LOCAL;
const EHConnectionType EHConnectionType_MAX = EH_ENGINE_CONNECT_TYPE_INET;
const int EHConnectionType_ARRAYSIZE = EHConnectionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EHConnectionType_descriptor();
inline const ::std::string& EHConnectionType_Name(EHConnectionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EHConnectionType_descriptor(), value);
}
inline bool EHConnectionType_Parse(
    const ::std::string& name, EHConnectionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EHConnectionType>(
    EHConnectionType_descriptor(), name, value);
}
enum EHRegReportMask {
  EH_REG_REPORT_MASK_UNKNOWN = 0,
  EH_REG_REPORT_MASK_POSITION = 1,
  EH_REG_REPORT_MASK_NHZ_POSITION = 2,
  EH_REG_REPORT_MASK_UNPROPAGATED_POSITION = 4,
  EH_REG_REPORT_MASK_SV = 8,
  EH_REG_REPORT_MASK_SV_POLYNOMIAL = 16,
  EH_REG_REPORT_MASK_SV_MEAS = 32,
  EH_REG_REPORT_MASK_SV_EPHEMERIS = 64,
  EH_REG_REPORT_MASK_NHZ_SV_MEAS = 128,
  EH_REG_REPORT_MASK_KLOBUCHARIONO_MODEL = 256,
  EH_REG_REPORT_MASK_GLONASS_ADDITIONAL_PARAMS = 512,
  EHRegReportMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EHRegReportMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EHRegReportMask_IsValid(int value);
const EHRegReportMask EHRegReportMask_MIN = EH_REG_REPORT_MASK_UNKNOWN;
const EHRegReportMask EHRegReportMask_MAX = EH_REG_REPORT_MASK_GLONASS_ADDITIONAL_PARAMS;
const int EHRegReportMask_ARRAYSIZE = EHRegReportMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* EHRegReportMask_descriptor();
inline const ::std::string& EHRegReportMask_Name(EHRegReportMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    EHRegReportMask_descriptor(), value);
}
inline bool EHRegReportMask_Parse(
    const ::std::string& name, EHRegReportMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EHRegReportMask>(
    EHRegReportMask_descriptor(), name, value);
}
enum EHRegStatusMask {
  EH_REG_STATUS_MASK_UNKNOWN = 0,
  EH_REG_STATUS_MASK_CONNECTIVITY = 1,
  EH_REG_STATUS_MASK_LEVER_ARM_CONFIG = 2,
  EH_REG_STATUS_MASK_BODY_TO_SENSOR_MOUNT_PARAMS = 3,
  EHRegStatusMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EHRegStatusMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EHRegStatusMask_IsValid(int value);
const EHRegStatusMask EHRegStatusMask_MIN = EH_REG_STATUS_MASK_UNKNOWN;
const EHRegStatusMask EHRegStatusMask_MAX = EH_REG_STATUS_MASK_BODY_TO_SENSOR_MOUNT_PARAMS;
const int EHRegStatusMask_ARRAYSIZE = EHRegStatusMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* EHRegStatusMask_descriptor();
inline const ::std::string& EHRegStatusMask_Name(EHRegStatusMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    EHRegStatusMask_descriptor(), value);
}
inline bool EHRegStatusMask_Parse(
    const ::std::string& name, EHRegStatusMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EHRegStatusMask>(
    EHRegStatusMask_descriptor(), name, value);
}
enum EHRegReportCorrectionMask {
  EH_REG_REPORT_MASK_CDFW_QDGNSS_UNKNOWN = 0,
  EH_REG_REPORT_MASK_CDFW_QDGNSS_REF_STATION = 1,
  EH_REG_REPORT_MASK_CDFW_QDGNSS_OBSERVATION = 2,
  EHRegReportCorrectionMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EHRegReportCorrectionMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EHRegReportCorrectionMask_IsValid(int value);
const EHRegReportCorrectionMask EHRegReportCorrectionMask_MIN = EH_REG_REPORT_MASK_CDFW_QDGNSS_UNKNOWN;
const EHRegReportCorrectionMask EHRegReportCorrectionMask_MAX = EH_REG_REPORT_MASK_CDFW_QDGNSS_OBSERVATION;
const int EHRegReportCorrectionMask_ARRAYSIZE = EHRegReportCorrectionMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* EHRegReportCorrectionMask_descriptor();
inline const ::std::string& EHRegReportCorrectionMask_Name(EHRegReportCorrectionMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    EHRegReportCorrectionMask_descriptor(), value);
}
inline bool EHRegReportCorrectionMask_Parse(
    const ::std::string& name, EHRegReportCorrectionMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EHRegReportCorrectionMask>(
    EHRegReportCorrectionMask_descriptor(), name, value);
}
// ===================================================================

class EHEngineConnectionIpAddrInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EHEngineConnectionIpAddrInfo) */ {
 public:
  EHEngineConnectionIpAddrInfo();
  virtual ~EHEngineConnectionIpAddrInfo();

  EHEngineConnectionIpAddrInfo(const EHEngineConnectionIpAddrInfo& from);

  inline EHEngineConnectionIpAddrInfo& operator=(const EHEngineConnectionIpAddrInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EHEngineConnectionIpAddrInfo& default_instance();

  static inline const EHEngineConnectionIpAddrInfo* internal_default_instance() {
    return reinterpret_cast<const EHEngineConnectionIpAddrInfo*>(
               &_EHEngineConnectionIpAddrInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(EHEngineConnectionIpAddrInfo* other);

  // implements Message ----------------------------------------------

  inline EHEngineConnectionIpAddrInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EHEngineConnectionIpAddrInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EHEngineConnectionIpAddrInfo& from);
  void MergeFrom(const EHEngineConnectionIpAddrInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EHEngineConnectionIpAddrInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string pluginIpAddress = 1;
  void clear_pluginipaddress();
  static const int kPluginIpAddressFieldNumber = 1;
  const ::std::string& pluginipaddress() const;
  void set_pluginipaddress(const ::std::string& value);
  #if LANG_CXX11
  void set_pluginipaddress(::std::string&& value);
  #endif
  void set_pluginipaddress(const char* value);
  void set_pluginipaddress(const char* value, size_t size);
  ::std::string* mutable_pluginipaddress();
  ::std::string* release_pluginipaddress();
  void set_allocated_pluginipaddress(::std::string* pluginipaddress);

  // uint32 pluginPort = 2;
  void clear_pluginport();
  static const int kPluginPortFieldNumber = 2;
  ::google::protobuf::uint32 pluginport() const;
  void set_pluginport(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:EHEngineConnectionIpAddrInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr pluginipaddress_;
  ::google::protobuf::uint32 pluginport_;
  mutable int _cached_size_;
  friend struct protobuf_EHMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EHEngineConnectionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EHEngineConnectionInfo) */ {
 public:
  EHEngineConnectionInfo();
  virtual ~EHEngineConnectionInfo();

  EHEngineConnectionInfo(const EHEngineConnectionInfo& from);

  inline EHEngineConnectionInfo& operator=(const EHEngineConnectionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EHEngineConnectionInfo& default_instance();

  enum ValuesCase {
    kSocketName = 1,
    kPluginIpAddrInfo = 2,
    VALUES_NOT_SET = 0,
  };

  static inline const EHEngineConnectionInfo* internal_default_instance() {
    return reinterpret_cast<const EHEngineConnectionInfo*>(
               &_EHEngineConnectionInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(EHEngineConnectionInfo* other);

  // implements Message ----------------------------------------------

  inline EHEngineConnectionInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EHEngineConnectionInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EHEngineConnectionInfo& from);
  void MergeFrom(const EHEngineConnectionInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EHEngineConnectionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string socketName = 1;
  private:
  bool has_socketname() const;
  public:
  void clear_socketname();
  static const int kSocketNameFieldNumber = 1;
  const ::std::string& socketname() const;
  void set_socketname(const ::std::string& value);
  #if LANG_CXX11
  void set_socketname(::std::string&& value);
  #endif
  void set_socketname(const char* value);
  void set_socketname(const char* value, size_t size);
  ::std::string* mutable_socketname();
  ::std::string* release_socketname();
  void set_allocated_socketname(::std::string* socketname);

  // .EHEngineConnectionIpAddrInfo pluginIpAddrInfo = 2;
  bool has_pluginipaddrinfo() const;
  void clear_pluginipaddrinfo();
  static const int kPluginIpAddrInfoFieldNumber = 2;
  const ::EHEngineConnectionIpAddrInfo& pluginipaddrinfo() const;
  ::EHEngineConnectionIpAddrInfo* mutable_pluginipaddrinfo();
  ::EHEngineConnectionIpAddrInfo* release_pluginipaddrinfo();
  void set_allocated_pluginipaddrinfo(::EHEngineConnectionIpAddrInfo* pluginipaddrinfo);

  ValuesCase values_case() const;
  // @@protoc_insertion_point(class_scope:EHEngineConnectionInfo)
 private:
  void set_has_socketname();
  void set_has_pluginipaddrinfo();

  inline bool has_values() const;
  void clear_values();
  inline void clear_has_values();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ValuesUnion {
    ValuesUnion() {}
    ::google::protobuf::internal::ArenaStringPtr socketname_;
    ::EHEngineConnectionIpAddrInfo* pluginipaddrinfo_;
  } values_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_EHMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EHSubscriptionModifier : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EHSubscriptionModifier) */ {
 public:
  EHSubscriptionModifier();
  virtual ~EHSubscriptionModifier();

  EHSubscriptionModifier(const EHSubscriptionModifier& from);

  inline EHSubscriptionModifier& operator=(const EHSubscriptionModifier& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EHSubscriptionModifier& default_instance();

  static inline const EHSubscriptionModifier* internal_default_instance() {
    return reinterpret_cast<const EHSubscriptionModifier*>(
               &_EHSubscriptionModifier_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(EHSubscriptionModifier* other);

  // implements Message ----------------------------------------------

  inline EHSubscriptionModifier* New() const PROTOBUF_FINAL { return New(NULL); }

  EHSubscriptionModifier* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EHSubscriptionModifier& from);
  void MergeFrom(const EHSubscriptionModifier& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EHSubscriptionModifier* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 constellationMask = 1;
  void clear_constellationmask();
  static const int kConstellationMaskFieldNumber = 1;
  ::google::protobuf::uint32 constellationmask() const;
  void set_constellationmask(::google::protobuf::uint32 value);

  // uint32 gnssSignalMask = 2;
  void clear_gnsssignalmask();
  static const int kGnssSignalMaskFieldNumber = 2;
  ::google::protobuf::uint32 gnsssignalmask() const;
  void set_gnsssignalmask(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:EHSubscriptionModifier)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 constellationmask_;
  ::google::protobuf::uint32 gnsssignalmask_;
  mutable int _cached_size_;
  friend struct protobuf_EHMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EHSubModifiers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EHSubModifiers) */ {
 public:
  EHSubModifiers();
  virtual ~EHSubModifiers();

  EHSubModifiers(const EHSubModifiers& from);

  inline EHSubModifiers& operator=(const EHSubModifiers& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EHSubModifiers& default_instance();

  static inline const EHSubModifiers* internal_default_instance() {
    return reinterpret_cast<const EHSubModifiers*>(
               &_EHSubModifiers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(EHSubModifiers* other);

  // implements Message ----------------------------------------------

  inline EHSubModifiers* New() const PROTOBUF_FINAL { return New(NULL); }

  EHSubModifiers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EHSubModifiers& from);
  void MergeFrom(const EHSubModifiers& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EHSubModifiers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .EHSubscriptionModifier svMeasSubModifier = 1;
  bool has_svmeassubmodifier() const;
  void clear_svmeassubmodifier();
  static const int kSvMeasSubModifierFieldNumber = 1;
  const ::EHSubscriptionModifier& svmeassubmodifier() const;
  ::EHSubscriptionModifier* mutable_svmeassubmodifier();
  ::EHSubscriptionModifier* release_svmeassubmodifier();
  void set_allocated_svmeassubmodifier(::EHSubscriptionModifier* svmeassubmodifier);

  // .EHSubscriptionModifier nHzSvMeasSubModifier = 2;
  bool has_nhzsvmeassubmodifier() const;
  void clear_nhzsvmeassubmodifier();
  static const int kNHzSvMeasSubModifierFieldNumber = 2;
  const ::EHSubscriptionModifier& nhzsvmeassubmodifier() const;
  ::EHSubscriptionModifier* mutable_nhzsvmeassubmodifier();
  ::EHSubscriptionModifier* release_nhzsvmeassubmodifier();
  void set_allocated_nhzsvmeassubmodifier(::EHSubscriptionModifier* nhzsvmeassubmodifier);

  // .EHSubscriptionModifier svPolySubModifier = 3;
  bool has_svpolysubmodifier() const;
  void clear_svpolysubmodifier();
  static const int kSvPolySubModifierFieldNumber = 3;
  const ::EHSubscriptionModifier& svpolysubmodifier() const;
  ::EHSubscriptionModifier* mutable_svpolysubmodifier();
  ::EHSubscriptionModifier* release_svpolysubmodifier();
  void set_allocated_svpolysubmodifier(::EHSubscriptionModifier* svpolysubmodifier);

  // .EHSubscriptionModifier svEphSubModifier = 4;
  bool has_svephsubmodifier() const;
  void clear_svephsubmodifier();
  static const int kSvEphSubModifierFieldNumber = 4;
  const ::EHSubscriptionModifier& svephsubmodifier() const;
  ::EHSubscriptionModifier* mutable_svephsubmodifier();
  ::EHSubscriptionModifier* release_svephsubmodifier();
  void set_allocated_svephsubmodifier(::EHSubscriptionModifier* svephsubmodifier);

  // .EHSubscriptionModifier ionoModelSubModifier = 5;
  bool has_ionomodelsubmodifier() const;
  void clear_ionomodelsubmodifier();
  static const int kIonoModelSubModifierFieldNumber = 5;
  const ::EHSubscriptionModifier& ionomodelsubmodifier() const;
  ::EHSubscriptionModifier* mutable_ionomodelsubmodifier();
  ::EHSubscriptionModifier* release_ionomodelsubmodifier();
  void set_allocated_ionomodelsubmodifier(::EHSubscriptionModifier* ionomodelsubmodifier);

  // @@protoc_insertion_point(class_scope:EHSubModifiers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::EHSubscriptionModifier* svmeassubmodifier_;
  ::EHSubscriptionModifier* nhzsvmeassubmodifier_;
  ::EHSubscriptionModifier* svpolysubmodifier_;
  ::EHSubscriptionModifier* svephsubmodifier_;
  ::EHSubscriptionModifier* ionomodelsubmodifier_;
  mutable int _cached_size_;
  friend struct protobuf_EHMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EHRoutingTableEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EHRoutingTableEntry) */ {
 public:
  EHRoutingTableEntry();
  virtual ~EHRoutingTableEntry();

  EHRoutingTableEntry(const EHRoutingTableEntry& from);

  inline EHRoutingTableEntry& operator=(const EHRoutingTableEntry& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EHRoutingTableEntry& default_instance();

  static inline const EHRoutingTableEntry* internal_default_instance() {
    return reinterpret_cast<const EHRoutingTableEntry*>(
               &_EHRoutingTableEntry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(EHRoutingTableEntry* other);

  // implements Message ----------------------------------------------

  inline EHRoutingTableEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  EHRoutingTableEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EHRoutingTableEntry& from);
  void MergeFrom(const EHRoutingTableEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EHRoutingTableEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 regReportMask = 3;
  int regreportmask_size() const;
  void clear_regreportmask();
  static const int kRegReportMaskFieldNumber = 3;
  ::google::protobuf::uint32 regreportmask(int index) const;
  void set_regreportmask(int index, ::google::protobuf::uint32 value);
  void add_regreportmask(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      regreportmask() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_regreportmask();

  // .EHEngineConnectionInfo engConnectInfo = 2;
  bool has_engconnectinfo() const;
  void clear_engconnectinfo();
  static const int kEngConnectInfoFieldNumber = 2;
  const ::EHEngineConnectionInfo& engconnectinfo() const;
  ::EHEngineConnectionInfo* mutable_engconnectinfo();
  ::EHEngineConnectionInfo* release_engconnectinfo();
  void set_allocated_engconnectinfo(::EHEngineConnectionInfo* engconnectinfo);

  // .EHSubModifiers subModifiers = 5;
  bool has_submodifiers() const;
  void clear_submodifiers();
  static const int kSubModifiersFieldNumber = 5;
  const ::EHSubModifiers& submodifiers() const;
  ::EHSubModifiers* mutable_submodifiers();
  ::EHSubModifiers* release_submodifiers();
  void set_allocated_submodifiers(::EHSubModifiers* submodifiers);

  // .EHConnectionType engConnectionType = 1;
  void clear_engconnectiontype();
  static const int kEngConnectionTypeFieldNumber = 1;
  ::EHConnectionType engconnectiontype() const;
  void set_engconnectiontype(::EHConnectionType value);

  // uint32 regStatusMask = 4;
  void clear_regstatusmask();
  static const int kRegStatusMaskFieldNumber = 4;
  ::google::protobuf::uint32 regstatusmask() const;
  void set_regstatusmask(::google::protobuf::uint32 value);

  // uint32 regCdfwCorrnMask = 6;
  void clear_regcdfwcorrnmask();
  static const int kRegCdfwCorrnMaskFieldNumber = 6;
  ::google::protobuf::uint32 regcdfwcorrnmask() const;
  void set_regcdfwcorrnmask(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:EHRoutingTableEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > regreportmask_;
  mutable int _regreportmask_cached_byte_size_;
  ::EHEngineConnectionInfo* engconnectinfo_;
  ::EHSubModifiers* submodifiers_;
  int engconnectiontype_;
  ::google::protobuf::uint32 regstatusmask_;
  ::google::protobuf::uint32 regcdfwcorrnmask_;
  mutable int _cached_size_;
  friend struct protobuf_EHMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EHMessageProtocolRoutingTableUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EHMessageProtocolRoutingTableUpdate) */ {
 public:
  EHMessageProtocolRoutingTableUpdate();
  virtual ~EHMessageProtocolRoutingTableUpdate();

  EHMessageProtocolRoutingTableUpdate(const EHMessageProtocolRoutingTableUpdate& from);

  inline EHMessageProtocolRoutingTableUpdate& operator=(const EHMessageProtocolRoutingTableUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EHMessageProtocolRoutingTableUpdate& default_instance();

  static inline const EHMessageProtocolRoutingTableUpdate* internal_default_instance() {
    return reinterpret_cast<const EHMessageProtocolRoutingTableUpdate*>(
               &_EHMessageProtocolRoutingTableUpdate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(EHMessageProtocolRoutingTableUpdate* other);

  // implements Message ----------------------------------------------

  inline EHMessageProtocolRoutingTableUpdate* New() const PROTOBUF_FINAL { return New(NULL); }

  EHMessageProtocolRoutingTableUpdate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EHMessageProtocolRoutingTableUpdate& from);
  void MergeFrom(const EHMessageProtocolRoutingTableUpdate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EHMessageProtocolRoutingTableUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .EHRoutingTableEntry eHubRoutingTable = 2;
  int ehubroutingtable_size() const;
  void clear_ehubroutingtable();
  static const int kEHubRoutingTableFieldNumber = 2;
  const ::EHRoutingTableEntry& ehubroutingtable(int index) const;
  ::EHRoutingTableEntry* mutable_ehubroutingtable(int index);
  ::EHRoutingTableEntry* add_ehubroutingtable();
  ::google::protobuf::RepeatedPtrField< ::EHRoutingTableEntry >*
      mutable_ehubroutingtable();
  const ::google::protobuf::RepeatedPtrField< ::EHRoutingTableEntry >&
      ehubroutingtable() const;

  // uint32 eHubNumEntries = 1;
  void clear_ehubnumentries();
  static const int kEHubNumEntriesFieldNumber = 1;
  ::google::protobuf::uint32 ehubnumentries() const;
  void set_ehubnumentries(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:EHMessageProtocolRoutingTableUpdate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::EHRoutingTableEntry > ehubroutingtable_;
  ::google::protobuf::uint32 ehubnumentries_;
  mutable int _cached_size_;
  friend struct protobuf_EHMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EHMessageSessionSetFixMode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EHMessageSessionSetFixMode) */ {
 public:
  EHMessageSessionSetFixMode();
  virtual ~EHMessageSessionSetFixMode();

  EHMessageSessionSetFixMode(const EHMessageSessionSetFixMode& from);

  inline EHMessageSessionSetFixMode& operator=(const EHMessageSessionSetFixMode& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EHMessageSessionSetFixMode& default_instance();

  static inline const EHMessageSessionSetFixMode* internal_default_instance() {
    return reinterpret_cast<const EHMessageSessionSetFixMode*>(
               &_EHMessageSessionSetFixMode_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(EHMessageSessionSetFixMode* other);

  // implements Message ----------------------------------------------

  inline EHMessageSessionSetFixMode* New() const PROTOBUF_FINAL { return New(NULL); }

  EHMessageSessionSetFixMode* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EHMessageSessionSetFixMode& from);
  void MergeFrom(const EHMessageSessionSetFixMode& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EHMessageSessionSetFixMode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBLocPosMode fixMode = 1;
  bool has_fixmode() const;
  void clear_fixmode();
  static const int kFixModeFieldNumber = 1;
  const ::PBLocPosMode& fixmode() const;
  ::PBLocPosMode* mutable_fixmode();
  ::PBLocPosMode* release_fixmode();
  void set_allocated_fixmode(::PBLocPosMode* fixmode);

  // @@protoc_insertion_point(class_scope:EHMessageSessionSetFixMode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBLocPosMode* fixmode_;
  mutable int _cached_size_;
  friend struct protobuf_EHMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EHMessageSessionDeleteAidingData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EHMessageSessionDeleteAidingData) */ {
 public:
  EHMessageSessionDeleteAidingData();
  virtual ~EHMessageSessionDeleteAidingData();

  EHMessageSessionDeleteAidingData(const EHMessageSessionDeleteAidingData& from);

  inline EHMessageSessionDeleteAidingData& operator=(const EHMessageSessionDeleteAidingData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EHMessageSessionDeleteAidingData& default_instance();

  static inline const EHMessageSessionDeleteAidingData* internal_default_instance() {
    return reinterpret_cast<const EHMessageSessionDeleteAidingData*>(
               &_EHMessageSessionDeleteAidingData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(EHMessageSessionDeleteAidingData* other);

  // implements Message ----------------------------------------------

  inline EHMessageSessionDeleteAidingData* New() const PROTOBUF_FINAL { return New(NULL); }

  EHMessageSessionDeleteAidingData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EHMessageSessionDeleteAidingData& from);
  void MergeFrom(const EHMessageSessionDeleteAidingData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EHMessageSessionDeleteAidingData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBGnssAidingData gpsAidingData = 1;
  bool has_gpsaidingdata() const;
  void clear_gpsaidingdata();
  static const int kGpsAidingDataFieldNumber = 1;
  const ::PBGnssAidingData& gpsaidingdata() const;
  ::PBGnssAidingData* mutable_gpsaidingdata();
  ::PBGnssAidingData* release_gpsaidingdata();
  void set_allocated_gpsaidingdata(::PBGnssAidingData* gpsaidingdata);

  // @@protoc_insertion_point(class_scope:EHMessageSessionDeleteAidingData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBGnssAidingData* gpsaidingdata_;
  mutable int _cached_size_;
  friend struct protobuf_EHMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EHMessageReportPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EHMessageReportPosition) */ {
 public:
  EHMessageReportPosition();
  virtual ~EHMessageReportPosition();

  EHMessageReportPosition(const EHMessageReportPosition& from);

  inline EHMessageReportPosition& operator=(const EHMessageReportPosition& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EHMessageReportPosition& default_instance();

  static inline const EHMessageReportPosition* internal_default_instance() {
    return reinterpret_cast<const EHMessageReportPosition*>(
               &_EHMessageReportPosition_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(EHMessageReportPosition* other);

  // implements Message ----------------------------------------------

  inline EHMessageReportPosition* New() const PROTOBUF_FINAL { return New(NULL); }

  EHMessageReportPosition* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EHMessageReportPosition& from);
  void MergeFrom(const EHMessageReportPosition& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EHMessageReportPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBUlpLocation location = 2;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 2;
  const ::PBUlpLocation& location() const;
  ::PBUlpLocation* mutable_location();
  ::PBUlpLocation* release_location();
  void set_allocated_location(::PBUlpLocation* location);

  // .PBGpsLocationExtended locationExtended = 3;
  bool has_locationextended() const;
  void clear_locationextended();
  static const int kLocationExtendedFieldNumber = 3;
  const ::PBGpsLocationExtended& locationextended() const;
  ::PBGpsLocationExtended* mutable_locationextended();
  ::PBGpsLocationExtended* release_locationextended();
  void set_allocated_locationextended(::PBGpsLocationExtended* locationextended);

  // .EHTechId sourceTechId = 1;
  void clear_sourcetechid();
  static const int kSourceTechIdFieldNumber = 1;
  ::EHTechId sourcetechid() const;
  void set_sourcetechid(::EHTechId value);

  // .PBLocSessionStatus status = 4;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  ::PBLocSessionStatus status() const;
  void set_status(::PBLocSessionStatus value);

  // @@protoc_insertion_point(class_scope:EHMessageReportPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBUlpLocation* location_;
  ::PBGpsLocationExtended* locationextended_;
  int sourcetechid_;
  int status_;
  mutable int _cached_size_;
  friend struct protobuf_EHMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EHMessageReportSv : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EHMessageReportSv) */ {
 public:
  EHMessageReportSv();
  virtual ~EHMessageReportSv();

  EHMessageReportSv(const EHMessageReportSv& from);

  inline EHMessageReportSv& operator=(const EHMessageReportSv& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EHMessageReportSv& default_instance();

  static inline const EHMessageReportSv* internal_default_instance() {
    return reinterpret_cast<const EHMessageReportSv*>(
               &_EHMessageReportSv_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(EHMessageReportSv* other);

  // implements Message ----------------------------------------------

  inline EHMessageReportSv* New() const PROTOBUF_FINAL { return New(NULL); }

  EHMessageReportSv* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EHMessageReportSv& from);
  void MergeFrom(const EHMessageReportSv& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EHMessageReportSv* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBGnssSvNotification svNotification = 2;
  bool has_svnotification() const;
  void clear_svnotification();
  static const int kSvNotificationFieldNumber = 2;
  const ::PBGnssSvNotification& svnotification() const;
  ::PBGnssSvNotification* mutable_svnotification();
  ::PBGnssSvNotification* release_svnotification();
  void set_allocated_svnotification(::PBGnssSvNotification* svnotification);

  // .EHTechId sourceTechId = 1;
  void clear_sourcetechid();
  static const int kSourceTechIdFieldNumber = 1;
  ::EHTechId sourcetechid() const;
  void set_sourcetechid(::EHTechId value);

  // @@protoc_insertion_point(class_scope:EHMessageReportSv)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBGnssSvNotification* svnotification_;
  int sourcetechid_;
  mutable int _cached_size_;
  friend struct protobuf_EHMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EHMessageReportSvPolynomial : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EHMessageReportSvPolynomial) */ {
 public:
  EHMessageReportSvPolynomial();
  virtual ~EHMessageReportSvPolynomial();

  EHMessageReportSvPolynomial(const EHMessageReportSvPolynomial& from);

  inline EHMessageReportSvPolynomial& operator=(const EHMessageReportSvPolynomial& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EHMessageReportSvPolynomial& default_instance();

  static inline const EHMessageReportSvPolynomial* internal_default_instance() {
    return reinterpret_cast<const EHMessageReportSvPolynomial*>(
               &_EHMessageReportSvPolynomial_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(EHMessageReportSvPolynomial* other);

  // implements Message ----------------------------------------------

  inline EHMessageReportSvPolynomial* New() const PROTOBUF_FINAL { return New(NULL); }

  EHMessageReportSvPolynomial* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EHMessageReportSvPolynomial& from);
  void MergeFrom(const EHMessageReportSvPolynomial& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EHMessageReportSvPolynomial* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBGnssSvPolynomial svPolynomial = 2;
  bool has_svpolynomial() const;
  void clear_svpolynomial();
  static const int kSvPolynomialFieldNumber = 2;
  const ::PBGnssSvPolynomial& svpolynomial() const;
  ::PBGnssSvPolynomial* mutable_svpolynomial();
  ::PBGnssSvPolynomial* release_svpolynomial();
  void set_allocated_svpolynomial(::PBGnssSvPolynomial* svpolynomial);

  // .EHTechId sourceTechId = 1;
  void clear_sourcetechid();
  static const int kSourceTechIdFieldNumber = 1;
  ::EHTechId sourcetechid() const;
  void set_sourcetechid(::EHTechId value);

  // @@protoc_insertion_point(class_scope:EHMessageReportSvPolynomial)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBGnssSvPolynomial* svpolynomial_;
  int sourcetechid_;
  mutable int _cached_size_;
  friend struct protobuf_EHMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EHMessageReportSvEphemeris : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EHMessageReportSvEphemeris) */ {
 public:
  EHMessageReportSvEphemeris();
  virtual ~EHMessageReportSvEphemeris();

  EHMessageReportSvEphemeris(const EHMessageReportSvEphemeris& from);

  inline EHMessageReportSvEphemeris& operator=(const EHMessageReportSvEphemeris& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EHMessageReportSvEphemeris& default_instance();

  static inline const EHMessageReportSvEphemeris* internal_default_instance() {
    return reinterpret_cast<const EHMessageReportSvEphemeris*>(
               &_EHMessageReportSvEphemeris_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(EHMessageReportSvEphemeris* other);

  // implements Message ----------------------------------------------

  inline EHMessageReportSvEphemeris* New() const PROTOBUF_FINAL { return New(NULL); }

  EHMessageReportSvEphemeris* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EHMessageReportSvEphemeris& from);
  void MergeFrom(const EHMessageReportSvEphemeris& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EHMessageReportSvEphemeris* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBGnssSvEphemerisReport svEphemeris = 2;
  bool has_svephemeris() const;
  void clear_svephemeris();
  static const int kSvEphemerisFieldNumber = 2;
  const ::PBGnssSvEphemerisReport& svephemeris() const;
  ::PBGnssSvEphemerisReport* mutable_svephemeris();
  ::PBGnssSvEphemerisReport* release_svephemeris();
  void set_allocated_svephemeris(::PBGnssSvEphemerisReport* svephemeris);

  // .EHTechId sourceTechId = 1;
  void clear_sourcetechid();
  static const int kSourceTechIdFieldNumber = 1;
  ::EHTechId sourcetechid() const;
  void set_sourcetechid(::EHTechId value);

  // @@protoc_insertion_point(class_scope:EHMessageReportSvEphemeris)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBGnssSvEphemerisReport* svephemeris_;
  int sourcetechid_;
  mutable int _cached_size_;
  friend struct protobuf_EHMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EHMessageReportSvMeas : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EHMessageReportSvMeas) */ {
 public:
  EHMessageReportSvMeas();
  virtual ~EHMessageReportSvMeas();

  EHMessageReportSvMeas(const EHMessageReportSvMeas& from);

  inline EHMessageReportSvMeas& operator=(const EHMessageReportSvMeas& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EHMessageReportSvMeas& default_instance();

  static inline const EHMessageReportSvMeas* internal_default_instance() {
    return reinterpret_cast<const EHMessageReportSvMeas*>(
               &_EHMessageReportSvMeas_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(EHMessageReportSvMeas* other);

  // implements Message ----------------------------------------------

  inline EHMessageReportSvMeas* New() const PROTOBUF_FINAL { return New(NULL); }

  EHMessageReportSvMeas* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EHMessageReportSvMeas& from);
  void MergeFrom(const EHMessageReportSvMeas& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EHMessageReportSvMeas* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBGnssSvMeasurementSet svMeasSet = 2;
  bool has_svmeasset() const;
  void clear_svmeasset();
  static const int kSvMeasSetFieldNumber = 2;
  const ::PBGnssSvMeasurementSet& svmeasset() const;
  ::PBGnssSvMeasurementSet* mutable_svmeasset();
  ::PBGnssSvMeasurementSet* release_svmeasset();
  void set_allocated_svmeasset(::PBGnssSvMeasurementSet* svmeasset);

  // .EHTechId sourceTechId = 1;
  void clear_sourcetechid();
  static const int kSourceTechIdFieldNumber = 1;
  ::EHTechId sourcetechid() const;
  void set_sourcetechid(::EHTechId value);

  // @@protoc_insertion_point(class_scope:EHMessageReportSvMeas)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBGnssSvMeasurementSet* svmeasset_;
  int sourcetechid_;
  mutable int _cached_size_;
  friend struct protobuf_EHMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EHMessageStatusConnectivity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EHMessageStatusConnectivity) */ {
 public:
  EHMessageStatusConnectivity();
  virtual ~EHMessageStatusConnectivity();

  EHMessageStatusConnectivity(const EHMessageStatusConnectivity& from);

  inline EHMessageStatusConnectivity& operator=(const EHMessageStatusConnectivity& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EHMessageStatusConnectivity& default_instance();

  static inline const EHMessageStatusConnectivity* internal_default_instance() {
    return reinterpret_cast<const EHMessageStatusConnectivity*>(
               &_EHMessageStatusConnectivity_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(EHMessageStatusConnectivity* other);

  // implements Message ----------------------------------------------

  inline EHMessageStatusConnectivity* New() const PROTOBUF_FINAL { return New(NULL); }

  EHMessageStatusConnectivity* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EHMessageStatusConnectivity& from);
  void MergeFrom(const EHMessageStatusConnectivity& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EHMessageStatusConnectivity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool isConnected = 1;
  void clear_isconnected();
  static const int kIsConnectedFieldNumber = 1;
  bool isconnected() const;
  void set_isconnected(bool value);

  // @@protoc_insertion_point(class_scope:EHMessageStatusConnectivity)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool isconnected_;
  mutable int _cached_size_;
  friend struct protobuf_EHMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EHMessageReportKlobucharIonoModel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EHMessageReportKlobucharIonoModel) */ {
 public:
  EHMessageReportKlobucharIonoModel();
  virtual ~EHMessageReportKlobucharIonoModel();

  EHMessageReportKlobucharIonoModel(const EHMessageReportKlobucharIonoModel& from);

  inline EHMessageReportKlobucharIonoModel& operator=(const EHMessageReportKlobucharIonoModel& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EHMessageReportKlobucharIonoModel& default_instance();

  static inline const EHMessageReportKlobucharIonoModel* internal_default_instance() {
    return reinterpret_cast<const EHMessageReportKlobucharIonoModel*>(
               &_EHMessageReportKlobucharIonoModel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(EHMessageReportKlobucharIonoModel* other);

  // implements Message ----------------------------------------------

  inline EHMessageReportKlobucharIonoModel* New() const PROTOBUF_FINAL { return New(NULL); }

  EHMessageReportKlobucharIonoModel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EHMessageReportKlobucharIonoModel& from);
  void MergeFrom(const EHMessageReportKlobucharIonoModel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EHMessageReportKlobucharIonoModel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBGnssKlobucharIonoModel klobucharIonoModel = 2;
  bool has_klobucharionomodel() const;
  void clear_klobucharionomodel();
  static const int kKlobucharIonoModelFieldNumber = 2;
  const ::PBGnssKlobucharIonoModel& klobucharionomodel() const;
  ::PBGnssKlobucharIonoModel* mutable_klobucharionomodel();
  ::PBGnssKlobucharIonoModel* release_klobucharionomodel();
  void set_allocated_klobucharionomodel(::PBGnssKlobucharIonoModel* klobucharionomodel);

  // .EHTechId sourceTechId = 1;
  void clear_sourcetechid();
  static const int kSourceTechIdFieldNumber = 1;
  ::EHTechId sourcetechid() const;
  void set_sourcetechid(::EHTechId value);

  // @@protoc_insertion_point(class_scope:EHMessageReportKlobucharIonoModel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBGnssKlobucharIonoModel* klobucharionomodel_;
  int sourcetechid_;
  mutable int _cached_size_;
  friend struct protobuf_EHMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EHMessageReportGlonassAdditionalParams : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EHMessageReportGlonassAdditionalParams) */ {
 public:
  EHMessageReportGlonassAdditionalParams();
  virtual ~EHMessageReportGlonassAdditionalParams();

  EHMessageReportGlonassAdditionalParams(const EHMessageReportGlonassAdditionalParams& from);

  inline EHMessageReportGlonassAdditionalParams& operator=(const EHMessageReportGlonassAdditionalParams& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EHMessageReportGlonassAdditionalParams& default_instance();

  static inline const EHMessageReportGlonassAdditionalParams* internal_default_instance() {
    return reinterpret_cast<const EHMessageReportGlonassAdditionalParams*>(
               &_EHMessageReportGlonassAdditionalParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(EHMessageReportGlonassAdditionalParams* other);

  // implements Message ----------------------------------------------

  inline EHMessageReportGlonassAdditionalParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EHMessageReportGlonassAdditionalParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EHMessageReportGlonassAdditionalParams& from);
  void MergeFrom(const EHMessageReportGlonassAdditionalParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EHMessageReportGlonassAdditionalParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBGnssAdditionalSystemInfo additionalSystemInfo = 2;
  bool has_additionalsysteminfo() const;
  void clear_additionalsysteminfo();
  static const int kAdditionalSystemInfoFieldNumber = 2;
  const ::PBGnssAdditionalSystemInfo& additionalsysteminfo() const;
  ::PBGnssAdditionalSystemInfo* mutable_additionalsysteminfo();
  ::PBGnssAdditionalSystemInfo* release_additionalsysteminfo();
  void set_allocated_additionalsysteminfo(::PBGnssAdditionalSystemInfo* additionalsysteminfo);

  // .EHTechId sourceTechId = 1;
  void clear_sourcetechid();
  static const int kSourceTechIdFieldNumber = 1;
  ::EHTechId sourcetechid() const;
  void set_sourcetechid(::EHTechId value);

  // @@protoc_insertion_point(class_scope:EHMessageReportGlonassAdditionalParams)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBGnssAdditionalSystemInfo* additionalsysteminfo_;
  int sourcetechid_;
  mutable int _cached_size_;
  friend struct protobuf_EHMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EHMessageReportCdfwQDgnssReferenceStation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EHMessageReportCdfwQDgnssReferenceStation) */ {
 public:
  EHMessageReportCdfwQDgnssReferenceStation();
  virtual ~EHMessageReportCdfwQDgnssReferenceStation();

  EHMessageReportCdfwQDgnssReferenceStation(const EHMessageReportCdfwQDgnssReferenceStation& from);

  inline EHMessageReportCdfwQDgnssReferenceStation& operator=(const EHMessageReportCdfwQDgnssReferenceStation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EHMessageReportCdfwQDgnssReferenceStation& default_instance();

  static inline const EHMessageReportCdfwQDgnssReferenceStation* internal_default_instance() {
    return reinterpret_cast<const EHMessageReportCdfwQDgnssReferenceStation*>(
               &_EHMessageReportCdfwQDgnssReferenceStation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(EHMessageReportCdfwQDgnssReferenceStation* other);

  // implements Message ----------------------------------------------

  inline EHMessageReportCdfwQDgnssReferenceStation* New() const PROTOBUF_FINAL { return New(NULL); }

  EHMessageReportCdfwQDgnssReferenceStation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EHMessageReportCdfwQDgnssReferenceStation& from);
  void MergeFrom(const EHMessageReportCdfwQDgnssReferenceStation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EHMessageReportCdfwQDgnssReferenceStation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBReferenceStation qDgnssRefStation = 2;
  bool has_qdgnssrefstation() const;
  void clear_qdgnssrefstation();
  static const int kQDgnssRefStationFieldNumber = 2;
  const ::PBReferenceStation& qdgnssrefstation() const;
  ::PBReferenceStation* mutable_qdgnssrefstation();
  ::PBReferenceStation* release_qdgnssrefstation();
  void set_allocated_qdgnssrefstation(::PBReferenceStation* qdgnssrefstation);

  // .EHTechId sourceTechId = 1;
  void clear_sourcetechid();
  static const int kSourceTechIdFieldNumber = 1;
  ::EHTechId sourcetechid() const;
  void set_sourcetechid(::EHTechId value);

  // @@protoc_insertion_point(class_scope:EHMessageReportCdfwQDgnssReferenceStation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBReferenceStation* qdgnssrefstation_;
  int sourcetechid_;
  mutable int _cached_size_;
  friend struct protobuf_EHMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EHMessageReportCdfwQDgnssObservation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EHMessageReportCdfwQDgnssObservation) */ {
 public:
  EHMessageReportCdfwQDgnssObservation();
  virtual ~EHMessageReportCdfwQDgnssObservation();

  EHMessageReportCdfwQDgnssObservation(const EHMessageReportCdfwQDgnssObservation& from);

  inline EHMessageReportCdfwQDgnssObservation& operator=(const EHMessageReportCdfwQDgnssObservation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EHMessageReportCdfwQDgnssObservation& default_instance();

  static inline const EHMessageReportCdfwQDgnssObservation* internal_default_instance() {
    return reinterpret_cast<const EHMessageReportCdfwQDgnssObservation*>(
               &_EHMessageReportCdfwQDgnssObservation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(EHMessageReportCdfwQDgnssObservation* other);

  // implements Message ----------------------------------------------

  inline EHMessageReportCdfwQDgnssObservation* New() const PROTOBUF_FINAL { return New(NULL); }

  EHMessageReportCdfwQDgnssObservation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EHMessageReportCdfwQDgnssObservation& from);
  void MergeFrom(const EHMessageReportCdfwQDgnssObservation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EHMessageReportCdfwQDgnssObservation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBDGnssObservation qDgnssObserv = 2;
  bool has_qdgnssobserv() const;
  void clear_qdgnssobserv();
  static const int kQDgnssObservFieldNumber = 2;
  const ::PBDGnssObservation& qdgnssobserv() const;
  ::PBDGnssObservation* mutable_qdgnssobserv();
  ::PBDGnssObservation* release_qdgnssobserv();
  void set_allocated_qdgnssobserv(::PBDGnssObservation* qdgnssobserv);

  // .EHTechId sourceTechId = 1;
  void clear_sourcetechid();
  static const int kSourceTechIdFieldNumber = 1;
  ::EHTechId sourcetechid() const;
  void set_sourcetechid(::EHTechId value);

  // @@protoc_insertion_point(class_scope:EHMessageReportCdfwQDgnssObservation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBDGnssObservation* qdgnssobserv_;
  int sourcetechid_;
  mutable int _cached_size_;
  friend struct protobuf_EHMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EHMessageStatusLeverArmConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EHMessageStatusLeverArmConfig) */ {
 public:
  EHMessageStatusLeverArmConfig();
  virtual ~EHMessageStatusLeverArmConfig();

  EHMessageStatusLeverArmConfig(const EHMessageStatusLeverArmConfig& from);

  inline EHMessageStatusLeverArmConfig& operator=(const EHMessageStatusLeverArmConfig& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EHMessageStatusLeverArmConfig& default_instance();

  static inline const EHMessageStatusLeverArmConfig* internal_default_instance() {
    return reinterpret_cast<const EHMessageStatusLeverArmConfig*>(
               &_EHMessageStatusLeverArmConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(EHMessageStatusLeverArmConfig* other);

  // implements Message ----------------------------------------------

  inline EHMessageStatusLeverArmConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  EHMessageStatusLeverArmConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EHMessageStatusLeverArmConfig& from);
  void MergeFrom(const EHMessageStatusLeverArmConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EHMessageStatusLeverArmConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBLeverArmConfigInfo leverArmInfo = 1;
  bool has_leverarminfo() const;
  void clear_leverarminfo();
  static const int kLeverArmInfoFieldNumber = 1;
  const ::PBLeverArmConfigInfo& leverarminfo() const;
  ::PBLeverArmConfigInfo* mutable_leverarminfo();
  ::PBLeverArmConfigInfo* release_leverarminfo();
  void set_allocated_leverarminfo(::PBLeverArmConfigInfo* leverarminfo);

  // @@protoc_insertion_point(class_scope:EHMessageStatusLeverArmConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBLeverArmConfigInfo* leverarminfo_;
  mutable int _cached_size_;
  friend struct protobuf_EHMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EHMessageStatusB2sMountParams : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EHMessageStatusB2sMountParams) */ {
 public:
  EHMessageStatusB2sMountParams();
  virtual ~EHMessageStatusB2sMountParams();

  EHMessageStatusB2sMountParams(const EHMessageStatusB2sMountParams& from);

  inline EHMessageStatusB2sMountParams& operator=(const EHMessageStatusB2sMountParams& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EHMessageStatusB2sMountParams& default_instance();

  static inline const EHMessageStatusB2sMountParams* internal_default_instance() {
    return reinterpret_cast<const EHMessageStatusB2sMountParams*>(
               &_EHMessageStatusB2sMountParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(EHMessageStatusB2sMountParams* other);

  // implements Message ----------------------------------------------

  inline EHMessageStatusB2sMountParams* New() const PROTOBUF_FINAL { return New(NULL); }

  EHMessageStatusB2sMountParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EHMessageStatusB2sMountParams& from);
  void MergeFrom(const EHMessageStatusB2sMountParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EHMessageStatusB2sMountParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBBodyToSensorMountParams b2sMountParams = 1;
  bool has_b2smountparams() const;
  void clear_b2smountparams();
  static const int kB2SMountParamsFieldNumber = 1;
  const ::PBBodyToSensorMountParams& b2smountparams() const;
  ::PBBodyToSensorMountParams* mutable_b2smountparams();
  ::PBBodyToSensorMountParams* release_b2smountparams();
  void set_allocated_b2smountparams(::PBBodyToSensorMountParams* b2smountparams);

  // @@protoc_insertion_point(class_scope:EHMessageStatusB2sMountParams)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBBodyToSensorMountParams* b2smountparams_;
  mutable int _cached_size_;
  friend struct protobuf_EHMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EngineHubMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EngineHubMessage) */ {
 public:
  EngineHubMessage();
  virtual ~EngineHubMessage();

  EngineHubMessage(const EngineHubMessage& from);

  inline EngineHubMessage& operator=(const EngineHubMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EngineHubMessage& default_instance();

  static inline const EngineHubMessage* internal_default_instance() {
    return reinterpret_cast<const EngineHubMessage*>(
               &_EngineHubMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(EngineHubMessage* other);

  // implements Message ----------------------------------------------

  inline EngineHubMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  EngineHubMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EngineHubMessage& from);
  void MergeFrom(const EngineHubMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EngineHubMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes payload = 2;
  void clear_payload();
  static const int kPayloadFieldNumber = 2;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  #if LANG_CXX11
  void set_payload(::std::string&& value);
  #endif
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // .EHMsgId msgId = 1;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 1;
  ::EHMsgId msgid() const;
  void set_msgid(::EHMsgId value);

  // @@protoc_insertion_point(class_scope:EngineHubMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  int msgid_;
  mutable int _cached_size_;
  friend struct protobuf_EHMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EngineHubMessageWithMsgCounter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EngineHubMessageWithMsgCounter) */ {
 public:
  EngineHubMessageWithMsgCounter();
  virtual ~EngineHubMessageWithMsgCounter();

  EngineHubMessageWithMsgCounter(const EngineHubMessageWithMsgCounter& from);

  inline EngineHubMessageWithMsgCounter& operator=(const EngineHubMessageWithMsgCounter& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EngineHubMessageWithMsgCounter& default_instance();

  static inline const EngineHubMessageWithMsgCounter* internal_default_instance() {
    return reinterpret_cast<const EngineHubMessageWithMsgCounter*>(
               &_EngineHubMessageWithMsgCounter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(EngineHubMessageWithMsgCounter* other);

  // implements Message ----------------------------------------------

  inline EngineHubMessageWithMsgCounter* New() const PROTOBUF_FINAL { return New(NULL); }

  EngineHubMessageWithMsgCounter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EngineHubMessageWithMsgCounter& from);
  void MergeFrom(const EngineHubMessageWithMsgCounter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EngineHubMessageWithMsgCounter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msgSenderName = 2;
  void clear_msgsendername();
  static const int kMsgSenderNameFieldNumber = 2;
  const ::std::string& msgsendername() const;
  void set_msgsendername(const ::std::string& value);
  #if LANG_CXX11
  void set_msgsendername(::std::string&& value);
  #endif
  void set_msgsendername(const char* value);
  void set_msgsendername(const char* value, size_t size);
  ::std::string* mutable_msgsendername();
  ::std::string* release_msgsendername();
  void set_allocated_msgsendername(::std::string* msgsendername);

  // bytes ehMsgPayload = 3;
  void clear_ehmsgpayload();
  static const int kEhMsgPayloadFieldNumber = 3;
  const ::std::string& ehmsgpayload() const;
  void set_ehmsgpayload(const ::std::string& value);
  #if LANG_CXX11
  void set_ehmsgpayload(::std::string&& value);
  #endif
  void set_ehmsgpayload(const char* value);
  void set_ehmsgpayload(const void* value, size_t size);
  ::std::string* mutable_ehmsgpayload();
  ::std::string* release_ehmsgpayload();
  void set_allocated_ehmsgpayload(::std::string* ehmsgpayload);

  // uint32 msgCounter = 1;
  void clear_msgcounter();
  static const int kMsgCounterFieldNumber = 1;
  ::google::protobuf::uint32 msgcounter() const;
  void set_msgcounter(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:EngineHubMessageWithMsgCounter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msgsendername_;
  ::google::protobuf::internal::ArenaStringPtr ehmsgpayload_;
  ::google::protobuf::uint32 msgcounter_;
  mutable int _cached_size_;
  friend struct protobuf_EHMsg_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// EHEngineConnectionIpAddrInfo

// string pluginIpAddress = 1;
inline void EHEngineConnectionIpAddrInfo::clear_pluginipaddress() {
  pluginipaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EHEngineConnectionIpAddrInfo::pluginipaddress() const {
  // @@protoc_insertion_point(field_get:EHEngineConnectionIpAddrInfo.pluginIpAddress)
  return pluginipaddress_.GetNoArena();
}
inline void EHEngineConnectionIpAddrInfo::set_pluginipaddress(const ::std::string& value) {
  
  pluginipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:EHEngineConnectionIpAddrInfo.pluginIpAddress)
}
#if LANG_CXX11
inline void EHEngineConnectionIpAddrInfo::set_pluginipaddress(::std::string&& value) {
  
  pluginipaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:EHEngineConnectionIpAddrInfo.pluginIpAddress)
}
#endif
inline void EHEngineConnectionIpAddrInfo::set_pluginipaddress(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pluginipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:EHEngineConnectionIpAddrInfo.pluginIpAddress)
}
inline void EHEngineConnectionIpAddrInfo::set_pluginipaddress(const char* value, size_t size) {
  
  pluginipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:EHEngineConnectionIpAddrInfo.pluginIpAddress)
}
inline ::std::string* EHEngineConnectionIpAddrInfo::mutable_pluginipaddress() {
  
  // @@protoc_insertion_point(field_mutable:EHEngineConnectionIpAddrInfo.pluginIpAddress)
  return pluginipaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EHEngineConnectionIpAddrInfo::release_pluginipaddress() {
  // @@protoc_insertion_point(field_release:EHEngineConnectionIpAddrInfo.pluginIpAddress)
  
  return pluginipaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EHEngineConnectionIpAddrInfo::set_allocated_pluginipaddress(::std::string* pluginipaddress) {
  if (pluginipaddress != NULL) {
    
  } else {
    
  }
  pluginipaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pluginipaddress);
  // @@protoc_insertion_point(field_set_allocated:EHEngineConnectionIpAddrInfo.pluginIpAddress)
}

// uint32 pluginPort = 2;
inline void EHEngineConnectionIpAddrInfo::clear_pluginport() {
  pluginport_ = 0u;
}
inline ::google::protobuf::uint32 EHEngineConnectionIpAddrInfo::pluginport() const {
  // @@protoc_insertion_point(field_get:EHEngineConnectionIpAddrInfo.pluginPort)
  return pluginport_;
}
inline void EHEngineConnectionIpAddrInfo::set_pluginport(::google::protobuf::uint32 value) {
  
  pluginport_ = value;
  // @@protoc_insertion_point(field_set:EHEngineConnectionIpAddrInfo.pluginPort)
}

// -------------------------------------------------------------------

// EHEngineConnectionInfo

// string socketName = 1;
inline bool EHEngineConnectionInfo::has_socketname() const {
  return values_case() == kSocketName;
}
inline void EHEngineConnectionInfo::set_has_socketname() {
  _oneof_case_[0] = kSocketName;
}
inline void EHEngineConnectionInfo::clear_socketname() {
  if (has_socketname()) {
    values_.socketname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_values();
  }
}
inline const ::std::string& EHEngineConnectionInfo::socketname() const {
  // @@protoc_insertion_point(field_get:EHEngineConnectionInfo.socketName)
  if (has_socketname()) {
    return values_.socketname_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void EHEngineConnectionInfo::set_socketname(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:EHEngineConnectionInfo.socketName)
  if (!has_socketname()) {
    clear_values();
    set_has_socketname();
    values_.socketname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  values_.socketname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:EHEngineConnectionInfo.socketName)
}
#if LANG_CXX11
inline void EHEngineConnectionInfo::set_socketname(::std::string&& value) {
  // @@protoc_insertion_point(field_set:EHEngineConnectionInfo.socketName)
  if (!has_socketname()) {
    clear_values();
    set_has_socketname();
    values_.socketname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  values_.socketname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:EHEngineConnectionInfo.socketName)
}
#endif
inline void EHEngineConnectionInfo::set_socketname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_socketname()) {
    clear_values();
    set_has_socketname();
    values_.socketname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  values_.socketname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:EHEngineConnectionInfo.socketName)
}
inline void EHEngineConnectionInfo::set_socketname(const char* value, size_t size) {
  if (!has_socketname()) {
    clear_values();
    set_has_socketname();
    values_.socketname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  values_.socketname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:EHEngineConnectionInfo.socketName)
}
inline ::std::string* EHEngineConnectionInfo::mutable_socketname() {
  if (!has_socketname()) {
    clear_values();
    set_has_socketname();
    values_.socketname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:EHEngineConnectionInfo.socketName)
  return values_.socketname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EHEngineConnectionInfo::release_socketname() {
  // @@protoc_insertion_point(field_release:EHEngineConnectionInfo.socketName)
  if (has_socketname()) {
    clear_has_values();
    return values_.socketname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void EHEngineConnectionInfo::set_allocated_socketname(::std::string* socketname) {
  if (!has_socketname()) {
    values_.socketname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_values();
  if (socketname != NULL) {
    set_has_socketname();
    values_.socketname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        socketname);
  }
  // @@protoc_insertion_point(field_set_allocated:EHEngineConnectionInfo.socketName)
}

// .EHEngineConnectionIpAddrInfo pluginIpAddrInfo = 2;
inline bool EHEngineConnectionInfo::has_pluginipaddrinfo() const {
  return values_case() == kPluginIpAddrInfo;
}
inline void EHEngineConnectionInfo::set_has_pluginipaddrinfo() {
  _oneof_case_[0] = kPluginIpAddrInfo;
}
inline void EHEngineConnectionInfo::clear_pluginipaddrinfo() {
  if (has_pluginipaddrinfo()) {
    delete values_.pluginipaddrinfo_;
    clear_has_values();
  }
}
inline  const ::EHEngineConnectionIpAddrInfo& EHEngineConnectionInfo::pluginipaddrinfo() const {
  // @@protoc_insertion_point(field_get:EHEngineConnectionInfo.pluginIpAddrInfo)
  return has_pluginipaddrinfo()
      ? *values_.pluginipaddrinfo_
      : ::EHEngineConnectionIpAddrInfo::default_instance();
}
inline ::EHEngineConnectionIpAddrInfo* EHEngineConnectionInfo::mutable_pluginipaddrinfo() {
  if (!has_pluginipaddrinfo()) {
    clear_values();
    set_has_pluginipaddrinfo();
    values_.pluginipaddrinfo_ = new ::EHEngineConnectionIpAddrInfo;
  }
  // @@protoc_insertion_point(field_mutable:EHEngineConnectionInfo.pluginIpAddrInfo)
  return values_.pluginipaddrinfo_;
}
inline ::EHEngineConnectionIpAddrInfo* EHEngineConnectionInfo::release_pluginipaddrinfo() {
  // @@protoc_insertion_point(field_release:EHEngineConnectionInfo.pluginIpAddrInfo)
  if (has_pluginipaddrinfo()) {
    clear_has_values();
    ::EHEngineConnectionIpAddrInfo* temp = values_.pluginipaddrinfo_;
    values_.pluginipaddrinfo_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void EHEngineConnectionInfo::set_allocated_pluginipaddrinfo(::EHEngineConnectionIpAddrInfo* pluginipaddrinfo) {
  clear_values();
  if (pluginipaddrinfo) {
    set_has_pluginipaddrinfo();
    values_.pluginipaddrinfo_ = pluginipaddrinfo;
  }
  // @@protoc_insertion_point(field_set_allocated:EHEngineConnectionInfo.pluginIpAddrInfo)
}

inline bool EHEngineConnectionInfo::has_values() const {
  return values_case() != VALUES_NOT_SET;
}
inline void EHEngineConnectionInfo::clear_has_values() {
  _oneof_case_[0] = VALUES_NOT_SET;
}
inline EHEngineConnectionInfo::ValuesCase EHEngineConnectionInfo::values_case() const {
  return EHEngineConnectionInfo::ValuesCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// EHSubscriptionModifier

// uint32 constellationMask = 1;
inline void EHSubscriptionModifier::clear_constellationmask() {
  constellationmask_ = 0u;
}
inline ::google::protobuf::uint32 EHSubscriptionModifier::constellationmask() const {
  // @@protoc_insertion_point(field_get:EHSubscriptionModifier.constellationMask)
  return constellationmask_;
}
inline void EHSubscriptionModifier::set_constellationmask(::google::protobuf::uint32 value) {
  
  constellationmask_ = value;
  // @@protoc_insertion_point(field_set:EHSubscriptionModifier.constellationMask)
}

// uint32 gnssSignalMask = 2;
inline void EHSubscriptionModifier::clear_gnsssignalmask() {
  gnsssignalmask_ = 0u;
}
inline ::google::protobuf::uint32 EHSubscriptionModifier::gnsssignalmask() const {
  // @@protoc_insertion_point(field_get:EHSubscriptionModifier.gnssSignalMask)
  return gnsssignalmask_;
}
inline void EHSubscriptionModifier::set_gnsssignalmask(::google::protobuf::uint32 value) {
  
  gnsssignalmask_ = value;
  // @@protoc_insertion_point(field_set:EHSubscriptionModifier.gnssSignalMask)
}

// -------------------------------------------------------------------

// EHSubModifiers

// .EHSubscriptionModifier svMeasSubModifier = 1;
inline bool EHSubModifiers::has_svmeassubmodifier() const {
  return this != internal_default_instance() && svmeassubmodifier_ != NULL;
}
inline void EHSubModifiers::clear_svmeassubmodifier() {
  if (GetArenaNoVirtual() == NULL && svmeassubmodifier_ != NULL) delete svmeassubmodifier_;
  svmeassubmodifier_ = NULL;
}
inline const ::EHSubscriptionModifier& EHSubModifiers::svmeassubmodifier() const {
  // @@protoc_insertion_point(field_get:EHSubModifiers.svMeasSubModifier)
  return svmeassubmodifier_ != NULL ? *svmeassubmodifier_
                         : *::EHSubscriptionModifier::internal_default_instance();
}
inline ::EHSubscriptionModifier* EHSubModifiers::mutable_svmeassubmodifier() {
  
  if (svmeassubmodifier_ == NULL) {
    svmeassubmodifier_ = new ::EHSubscriptionModifier;
  }
  // @@protoc_insertion_point(field_mutable:EHSubModifiers.svMeasSubModifier)
  return svmeassubmodifier_;
}
inline ::EHSubscriptionModifier* EHSubModifiers::release_svmeassubmodifier() {
  // @@protoc_insertion_point(field_release:EHSubModifiers.svMeasSubModifier)
  
  ::EHSubscriptionModifier* temp = svmeassubmodifier_;
  svmeassubmodifier_ = NULL;
  return temp;
}
inline void EHSubModifiers::set_allocated_svmeassubmodifier(::EHSubscriptionModifier* svmeassubmodifier) {
  delete svmeassubmodifier_;
  svmeassubmodifier_ = svmeassubmodifier;
  if (svmeassubmodifier) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:EHSubModifiers.svMeasSubModifier)
}

// .EHSubscriptionModifier nHzSvMeasSubModifier = 2;
inline bool EHSubModifiers::has_nhzsvmeassubmodifier() const {
  return this != internal_default_instance() && nhzsvmeassubmodifier_ != NULL;
}
inline void EHSubModifiers::clear_nhzsvmeassubmodifier() {
  if (GetArenaNoVirtual() == NULL && nhzsvmeassubmodifier_ != NULL) delete nhzsvmeassubmodifier_;
  nhzsvmeassubmodifier_ = NULL;
}
inline const ::EHSubscriptionModifier& EHSubModifiers::nhzsvmeassubmodifier() const {
  // @@protoc_insertion_point(field_get:EHSubModifiers.nHzSvMeasSubModifier)
  return nhzsvmeassubmodifier_ != NULL ? *nhzsvmeassubmodifier_
                         : *::EHSubscriptionModifier::internal_default_instance();
}
inline ::EHSubscriptionModifier* EHSubModifiers::mutable_nhzsvmeassubmodifier() {
  
  if (nhzsvmeassubmodifier_ == NULL) {
    nhzsvmeassubmodifier_ = new ::EHSubscriptionModifier;
  }
  // @@protoc_insertion_point(field_mutable:EHSubModifiers.nHzSvMeasSubModifier)
  return nhzsvmeassubmodifier_;
}
inline ::EHSubscriptionModifier* EHSubModifiers::release_nhzsvmeassubmodifier() {
  // @@protoc_insertion_point(field_release:EHSubModifiers.nHzSvMeasSubModifier)
  
  ::EHSubscriptionModifier* temp = nhzsvmeassubmodifier_;
  nhzsvmeassubmodifier_ = NULL;
  return temp;
}
inline void EHSubModifiers::set_allocated_nhzsvmeassubmodifier(::EHSubscriptionModifier* nhzsvmeassubmodifier) {
  delete nhzsvmeassubmodifier_;
  nhzsvmeassubmodifier_ = nhzsvmeassubmodifier;
  if (nhzsvmeassubmodifier) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:EHSubModifiers.nHzSvMeasSubModifier)
}

// .EHSubscriptionModifier svPolySubModifier = 3;
inline bool EHSubModifiers::has_svpolysubmodifier() const {
  return this != internal_default_instance() && svpolysubmodifier_ != NULL;
}
inline void EHSubModifiers::clear_svpolysubmodifier() {
  if (GetArenaNoVirtual() == NULL && svpolysubmodifier_ != NULL) delete svpolysubmodifier_;
  svpolysubmodifier_ = NULL;
}
inline const ::EHSubscriptionModifier& EHSubModifiers::svpolysubmodifier() const {
  // @@protoc_insertion_point(field_get:EHSubModifiers.svPolySubModifier)
  return svpolysubmodifier_ != NULL ? *svpolysubmodifier_
                         : *::EHSubscriptionModifier::internal_default_instance();
}
inline ::EHSubscriptionModifier* EHSubModifiers::mutable_svpolysubmodifier() {
  
  if (svpolysubmodifier_ == NULL) {
    svpolysubmodifier_ = new ::EHSubscriptionModifier;
  }
  // @@protoc_insertion_point(field_mutable:EHSubModifiers.svPolySubModifier)
  return svpolysubmodifier_;
}
inline ::EHSubscriptionModifier* EHSubModifiers::release_svpolysubmodifier() {
  // @@protoc_insertion_point(field_release:EHSubModifiers.svPolySubModifier)
  
  ::EHSubscriptionModifier* temp = svpolysubmodifier_;
  svpolysubmodifier_ = NULL;
  return temp;
}
inline void EHSubModifiers::set_allocated_svpolysubmodifier(::EHSubscriptionModifier* svpolysubmodifier) {
  delete svpolysubmodifier_;
  svpolysubmodifier_ = svpolysubmodifier;
  if (svpolysubmodifier) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:EHSubModifiers.svPolySubModifier)
}

// .EHSubscriptionModifier svEphSubModifier = 4;
inline bool EHSubModifiers::has_svephsubmodifier() const {
  return this != internal_default_instance() && svephsubmodifier_ != NULL;
}
inline void EHSubModifiers::clear_svephsubmodifier() {
  if (GetArenaNoVirtual() == NULL && svephsubmodifier_ != NULL) delete svephsubmodifier_;
  svephsubmodifier_ = NULL;
}
inline const ::EHSubscriptionModifier& EHSubModifiers::svephsubmodifier() const {
  // @@protoc_insertion_point(field_get:EHSubModifiers.svEphSubModifier)
  return svephsubmodifier_ != NULL ? *svephsubmodifier_
                         : *::EHSubscriptionModifier::internal_default_instance();
}
inline ::EHSubscriptionModifier* EHSubModifiers::mutable_svephsubmodifier() {
  
  if (svephsubmodifier_ == NULL) {
    svephsubmodifier_ = new ::EHSubscriptionModifier;
  }
  // @@protoc_insertion_point(field_mutable:EHSubModifiers.svEphSubModifier)
  return svephsubmodifier_;
}
inline ::EHSubscriptionModifier* EHSubModifiers::release_svephsubmodifier() {
  // @@protoc_insertion_point(field_release:EHSubModifiers.svEphSubModifier)
  
  ::EHSubscriptionModifier* temp = svephsubmodifier_;
  svephsubmodifier_ = NULL;
  return temp;
}
inline void EHSubModifiers::set_allocated_svephsubmodifier(::EHSubscriptionModifier* svephsubmodifier) {
  delete svephsubmodifier_;
  svephsubmodifier_ = svephsubmodifier;
  if (svephsubmodifier) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:EHSubModifiers.svEphSubModifier)
}

// .EHSubscriptionModifier ionoModelSubModifier = 5;
inline bool EHSubModifiers::has_ionomodelsubmodifier() const {
  return this != internal_default_instance() && ionomodelsubmodifier_ != NULL;
}
inline void EHSubModifiers::clear_ionomodelsubmodifier() {
  if (GetArenaNoVirtual() == NULL && ionomodelsubmodifier_ != NULL) delete ionomodelsubmodifier_;
  ionomodelsubmodifier_ = NULL;
}
inline const ::EHSubscriptionModifier& EHSubModifiers::ionomodelsubmodifier() const {
  // @@protoc_insertion_point(field_get:EHSubModifiers.ionoModelSubModifier)
  return ionomodelsubmodifier_ != NULL ? *ionomodelsubmodifier_
                         : *::EHSubscriptionModifier::internal_default_instance();
}
inline ::EHSubscriptionModifier* EHSubModifiers::mutable_ionomodelsubmodifier() {
  
  if (ionomodelsubmodifier_ == NULL) {
    ionomodelsubmodifier_ = new ::EHSubscriptionModifier;
  }
  // @@protoc_insertion_point(field_mutable:EHSubModifiers.ionoModelSubModifier)
  return ionomodelsubmodifier_;
}
inline ::EHSubscriptionModifier* EHSubModifiers::release_ionomodelsubmodifier() {
  // @@protoc_insertion_point(field_release:EHSubModifiers.ionoModelSubModifier)
  
  ::EHSubscriptionModifier* temp = ionomodelsubmodifier_;
  ionomodelsubmodifier_ = NULL;
  return temp;
}
inline void EHSubModifiers::set_allocated_ionomodelsubmodifier(::EHSubscriptionModifier* ionomodelsubmodifier) {
  delete ionomodelsubmodifier_;
  ionomodelsubmodifier_ = ionomodelsubmodifier;
  if (ionomodelsubmodifier) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:EHSubModifiers.ionoModelSubModifier)
}

// -------------------------------------------------------------------

// EHRoutingTableEntry

// .EHConnectionType engConnectionType = 1;
inline void EHRoutingTableEntry::clear_engconnectiontype() {
  engconnectiontype_ = 0;
}
inline ::EHConnectionType EHRoutingTableEntry::engconnectiontype() const {
  // @@protoc_insertion_point(field_get:EHRoutingTableEntry.engConnectionType)
  return static_cast< ::EHConnectionType >(engconnectiontype_);
}
inline void EHRoutingTableEntry::set_engconnectiontype(::EHConnectionType value) {
  
  engconnectiontype_ = value;
  // @@protoc_insertion_point(field_set:EHRoutingTableEntry.engConnectionType)
}

// .EHEngineConnectionInfo engConnectInfo = 2;
inline bool EHRoutingTableEntry::has_engconnectinfo() const {
  return this != internal_default_instance() && engconnectinfo_ != NULL;
}
inline void EHRoutingTableEntry::clear_engconnectinfo() {
  if (GetArenaNoVirtual() == NULL && engconnectinfo_ != NULL) delete engconnectinfo_;
  engconnectinfo_ = NULL;
}
inline const ::EHEngineConnectionInfo& EHRoutingTableEntry::engconnectinfo() const {
  // @@protoc_insertion_point(field_get:EHRoutingTableEntry.engConnectInfo)
  return engconnectinfo_ != NULL ? *engconnectinfo_
                         : *::EHEngineConnectionInfo::internal_default_instance();
}
inline ::EHEngineConnectionInfo* EHRoutingTableEntry::mutable_engconnectinfo() {
  
  if (engconnectinfo_ == NULL) {
    engconnectinfo_ = new ::EHEngineConnectionInfo;
  }
  // @@protoc_insertion_point(field_mutable:EHRoutingTableEntry.engConnectInfo)
  return engconnectinfo_;
}
inline ::EHEngineConnectionInfo* EHRoutingTableEntry::release_engconnectinfo() {
  // @@protoc_insertion_point(field_release:EHRoutingTableEntry.engConnectInfo)
  
  ::EHEngineConnectionInfo* temp = engconnectinfo_;
  engconnectinfo_ = NULL;
  return temp;
}
inline void EHRoutingTableEntry::set_allocated_engconnectinfo(::EHEngineConnectionInfo* engconnectinfo) {
  delete engconnectinfo_;
  engconnectinfo_ = engconnectinfo;
  if (engconnectinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:EHRoutingTableEntry.engConnectInfo)
}

// repeated uint32 regReportMask = 3;
inline int EHRoutingTableEntry::regreportmask_size() const {
  return regreportmask_.size();
}
inline void EHRoutingTableEntry::clear_regreportmask() {
  regreportmask_.Clear();
}
inline ::google::protobuf::uint32 EHRoutingTableEntry::regreportmask(int index) const {
  // @@protoc_insertion_point(field_get:EHRoutingTableEntry.regReportMask)
  return regreportmask_.Get(index);
}
inline void EHRoutingTableEntry::set_regreportmask(int index, ::google::protobuf::uint32 value) {
  regreportmask_.Set(index, value);
  // @@protoc_insertion_point(field_set:EHRoutingTableEntry.regReportMask)
}
inline void EHRoutingTableEntry::add_regreportmask(::google::protobuf::uint32 value) {
  regreportmask_.Add(value);
  // @@protoc_insertion_point(field_add:EHRoutingTableEntry.regReportMask)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
EHRoutingTableEntry::regreportmask() const {
  // @@protoc_insertion_point(field_list:EHRoutingTableEntry.regReportMask)
  return regreportmask_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
EHRoutingTableEntry::mutable_regreportmask() {
  // @@protoc_insertion_point(field_mutable_list:EHRoutingTableEntry.regReportMask)
  return &regreportmask_;
}

// uint32 regStatusMask = 4;
inline void EHRoutingTableEntry::clear_regstatusmask() {
  regstatusmask_ = 0u;
}
inline ::google::protobuf::uint32 EHRoutingTableEntry::regstatusmask() const {
  // @@protoc_insertion_point(field_get:EHRoutingTableEntry.regStatusMask)
  return regstatusmask_;
}
inline void EHRoutingTableEntry::set_regstatusmask(::google::protobuf::uint32 value) {
  
  regstatusmask_ = value;
  // @@protoc_insertion_point(field_set:EHRoutingTableEntry.regStatusMask)
}

// .EHSubModifiers subModifiers = 5;
inline bool EHRoutingTableEntry::has_submodifiers() const {
  return this != internal_default_instance() && submodifiers_ != NULL;
}
inline void EHRoutingTableEntry::clear_submodifiers() {
  if (GetArenaNoVirtual() == NULL && submodifiers_ != NULL) delete submodifiers_;
  submodifiers_ = NULL;
}
inline const ::EHSubModifiers& EHRoutingTableEntry::submodifiers() const {
  // @@protoc_insertion_point(field_get:EHRoutingTableEntry.subModifiers)
  return submodifiers_ != NULL ? *submodifiers_
                         : *::EHSubModifiers::internal_default_instance();
}
inline ::EHSubModifiers* EHRoutingTableEntry::mutable_submodifiers() {
  
  if (submodifiers_ == NULL) {
    submodifiers_ = new ::EHSubModifiers;
  }
  // @@protoc_insertion_point(field_mutable:EHRoutingTableEntry.subModifiers)
  return submodifiers_;
}
inline ::EHSubModifiers* EHRoutingTableEntry::release_submodifiers() {
  // @@protoc_insertion_point(field_release:EHRoutingTableEntry.subModifiers)
  
  ::EHSubModifiers* temp = submodifiers_;
  submodifiers_ = NULL;
  return temp;
}
inline void EHRoutingTableEntry::set_allocated_submodifiers(::EHSubModifiers* submodifiers) {
  delete submodifiers_;
  submodifiers_ = submodifiers;
  if (submodifiers) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:EHRoutingTableEntry.subModifiers)
}

// uint32 regCdfwCorrnMask = 6;
inline void EHRoutingTableEntry::clear_regcdfwcorrnmask() {
  regcdfwcorrnmask_ = 0u;
}
inline ::google::protobuf::uint32 EHRoutingTableEntry::regcdfwcorrnmask() const {
  // @@protoc_insertion_point(field_get:EHRoutingTableEntry.regCdfwCorrnMask)
  return regcdfwcorrnmask_;
}
inline void EHRoutingTableEntry::set_regcdfwcorrnmask(::google::protobuf::uint32 value) {
  
  regcdfwcorrnmask_ = value;
  // @@protoc_insertion_point(field_set:EHRoutingTableEntry.regCdfwCorrnMask)
}

// -------------------------------------------------------------------

// EHMessageProtocolRoutingTableUpdate

// uint32 eHubNumEntries = 1;
inline void EHMessageProtocolRoutingTableUpdate::clear_ehubnumentries() {
  ehubnumentries_ = 0u;
}
inline ::google::protobuf::uint32 EHMessageProtocolRoutingTableUpdate::ehubnumentries() const {
  // @@protoc_insertion_point(field_get:EHMessageProtocolRoutingTableUpdate.eHubNumEntries)
  return ehubnumentries_;
}
inline void EHMessageProtocolRoutingTableUpdate::set_ehubnumentries(::google::protobuf::uint32 value) {
  
  ehubnumentries_ = value;
  // @@protoc_insertion_point(field_set:EHMessageProtocolRoutingTableUpdate.eHubNumEntries)
}

// repeated .EHRoutingTableEntry eHubRoutingTable = 2;
inline int EHMessageProtocolRoutingTableUpdate::ehubroutingtable_size() const {
  return ehubroutingtable_.size();
}
inline void EHMessageProtocolRoutingTableUpdate::clear_ehubroutingtable() {
  ehubroutingtable_.Clear();
}
inline const ::EHRoutingTableEntry& EHMessageProtocolRoutingTableUpdate::ehubroutingtable(int index) const {
  // @@protoc_insertion_point(field_get:EHMessageProtocolRoutingTableUpdate.eHubRoutingTable)
  return ehubroutingtable_.Get(index);
}
inline ::EHRoutingTableEntry* EHMessageProtocolRoutingTableUpdate::mutable_ehubroutingtable(int index) {
  // @@protoc_insertion_point(field_mutable:EHMessageProtocolRoutingTableUpdate.eHubRoutingTable)
  return ehubroutingtable_.Mutable(index);
}
inline ::EHRoutingTableEntry* EHMessageProtocolRoutingTableUpdate::add_ehubroutingtable() {
  // @@protoc_insertion_point(field_add:EHMessageProtocolRoutingTableUpdate.eHubRoutingTable)
  return ehubroutingtable_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::EHRoutingTableEntry >*
EHMessageProtocolRoutingTableUpdate::mutable_ehubroutingtable() {
  // @@protoc_insertion_point(field_mutable_list:EHMessageProtocolRoutingTableUpdate.eHubRoutingTable)
  return &ehubroutingtable_;
}
inline const ::google::protobuf::RepeatedPtrField< ::EHRoutingTableEntry >&
EHMessageProtocolRoutingTableUpdate::ehubroutingtable() const {
  // @@protoc_insertion_point(field_list:EHMessageProtocolRoutingTableUpdate.eHubRoutingTable)
  return ehubroutingtable_;
}

// -------------------------------------------------------------------

// EHMessageSessionSetFixMode

// .PBLocPosMode fixMode = 1;
inline bool EHMessageSessionSetFixMode::has_fixmode() const {
  return this != internal_default_instance() && fixmode_ != NULL;
}
inline void EHMessageSessionSetFixMode::clear_fixmode() {
  if (GetArenaNoVirtual() == NULL && fixmode_ != NULL) delete fixmode_;
  fixmode_ = NULL;
}
inline const ::PBLocPosMode& EHMessageSessionSetFixMode::fixmode() const {
  // @@protoc_insertion_point(field_get:EHMessageSessionSetFixMode.fixMode)
  return fixmode_ != NULL ? *fixmode_
                         : *::PBLocPosMode::internal_default_instance();
}
inline ::PBLocPosMode* EHMessageSessionSetFixMode::mutable_fixmode() {
  
  if (fixmode_ == NULL) {
    fixmode_ = new ::PBLocPosMode;
  }
  // @@protoc_insertion_point(field_mutable:EHMessageSessionSetFixMode.fixMode)
  return fixmode_;
}
inline ::PBLocPosMode* EHMessageSessionSetFixMode::release_fixmode() {
  // @@protoc_insertion_point(field_release:EHMessageSessionSetFixMode.fixMode)
  
  ::PBLocPosMode* temp = fixmode_;
  fixmode_ = NULL;
  return temp;
}
inline void EHMessageSessionSetFixMode::set_allocated_fixmode(::PBLocPosMode* fixmode) {
  delete fixmode_;
  fixmode_ = fixmode;
  if (fixmode) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:EHMessageSessionSetFixMode.fixMode)
}

// -------------------------------------------------------------------

// EHMessageSessionDeleteAidingData

// .PBGnssAidingData gpsAidingData = 1;
inline bool EHMessageSessionDeleteAidingData::has_gpsaidingdata() const {
  return this != internal_default_instance() && gpsaidingdata_ != NULL;
}
inline void EHMessageSessionDeleteAidingData::clear_gpsaidingdata() {
  if (GetArenaNoVirtual() == NULL && gpsaidingdata_ != NULL) delete gpsaidingdata_;
  gpsaidingdata_ = NULL;
}
inline const ::PBGnssAidingData& EHMessageSessionDeleteAidingData::gpsaidingdata() const {
  // @@protoc_insertion_point(field_get:EHMessageSessionDeleteAidingData.gpsAidingData)
  return gpsaidingdata_ != NULL ? *gpsaidingdata_
                         : *::PBGnssAidingData::internal_default_instance();
}
inline ::PBGnssAidingData* EHMessageSessionDeleteAidingData::mutable_gpsaidingdata() {
  
  if (gpsaidingdata_ == NULL) {
    gpsaidingdata_ = new ::PBGnssAidingData;
  }
  // @@protoc_insertion_point(field_mutable:EHMessageSessionDeleteAidingData.gpsAidingData)
  return gpsaidingdata_;
}
inline ::PBGnssAidingData* EHMessageSessionDeleteAidingData::release_gpsaidingdata() {
  // @@protoc_insertion_point(field_release:EHMessageSessionDeleteAidingData.gpsAidingData)
  
  ::PBGnssAidingData* temp = gpsaidingdata_;
  gpsaidingdata_ = NULL;
  return temp;
}
inline void EHMessageSessionDeleteAidingData::set_allocated_gpsaidingdata(::PBGnssAidingData* gpsaidingdata) {
  delete gpsaidingdata_;
  gpsaidingdata_ = gpsaidingdata;
  if (gpsaidingdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:EHMessageSessionDeleteAidingData.gpsAidingData)
}

// -------------------------------------------------------------------

// EHMessageReportPosition

// .EHTechId sourceTechId = 1;
inline void EHMessageReportPosition::clear_sourcetechid() {
  sourcetechid_ = 0;
}
inline ::EHTechId EHMessageReportPosition::sourcetechid() const {
  // @@protoc_insertion_point(field_get:EHMessageReportPosition.sourceTechId)
  return static_cast< ::EHTechId >(sourcetechid_);
}
inline void EHMessageReportPosition::set_sourcetechid(::EHTechId value) {
  
  sourcetechid_ = value;
  // @@protoc_insertion_point(field_set:EHMessageReportPosition.sourceTechId)
}

// .PBUlpLocation location = 2;
inline bool EHMessageReportPosition::has_location() const {
  return this != internal_default_instance() && location_ != NULL;
}
inline void EHMessageReportPosition::clear_location() {
  if (GetArenaNoVirtual() == NULL && location_ != NULL) delete location_;
  location_ = NULL;
}
inline const ::PBUlpLocation& EHMessageReportPosition::location() const {
  // @@protoc_insertion_point(field_get:EHMessageReportPosition.location)
  return location_ != NULL ? *location_
                         : *::PBUlpLocation::internal_default_instance();
}
inline ::PBUlpLocation* EHMessageReportPosition::mutable_location() {
  
  if (location_ == NULL) {
    location_ = new ::PBUlpLocation;
  }
  // @@protoc_insertion_point(field_mutable:EHMessageReportPosition.location)
  return location_;
}
inline ::PBUlpLocation* EHMessageReportPosition::release_location() {
  // @@protoc_insertion_point(field_release:EHMessageReportPosition.location)
  
  ::PBUlpLocation* temp = location_;
  location_ = NULL;
  return temp;
}
inline void EHMessageReportPosition::set_allocated_location(::PBUlpLocation* location) {
  delete location_;
  location_ = location;
  if (location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:EHMessageReportPosition.location)
}

// .PBGpsLocationExtended locationExtended = 3;
inline bool EHMessageReportPosition::has_locationextended() const {
  return this != internal_default_instance() && locationextended_ != NULL;
}
inline void EHMessageReportPosition::clear_locationextended() {
  if (GetArenaNoVirtual() == NULL && locationextended_ != NULL) delete locationextended_;
  locationextended_ = NULL;
}
inline const ::PBGpsLocationExtended& EHMessageReportPosition::locationextended() const {
  // @@protoc_insertion_point(field_get:EHMessageReportPosition.locationExtended)
  return locationextended_ != NULL ? *locationextended_
                         : *::PBGpsLocationExtended::internal_default_instance();
}
inline ::PBGpsLocationExtended* EHMessageReportPosition::mutable_locationextended() {
  
  if (locationextended_ == NULL) {
    locationextended_ = new ::PBGpsLocationExtended;
  }
  // @@protoc_insertion_point(field_mutable:EHMessageReportPosition.locationExtended)
  return locationextended_;
}
inline ::PBGpsLocationExtended* EHMessageReportPosition::release_locationextended() {
  // @@protoc_insertion_point(field_release:EHMessageReportPosition.locationExtended)
  
  ::PBGpsLocationExtended* temp = locationextended_;
  locationextended_ = NULL;
  return temp;
}
inline void EHMessageReportPosition::set_allocated_locationextended(::PBGpsLocationExtended* locationextended) {
  delete locationextended_;
  locationextended_ = locationextended;
  if (locationextended) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:EHMessageReportPosition.locationExtended)
}

// .PBLocSessionStatus status = 4;
inline void EHMessageReportPosition::clear_status() {
  status_ = 0;
}
inline ::PBLocSessionStatus EHMessageReportPosition::status() const {
  // @@protoc_insertion_point(field_get:EHMessageReportPosition.status)
  return static_cast< ::PBLocSessionStatus >(status_);
}
inline void EHMessageReportPosition::set_status(::PBLocSessionStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:EHMessageReportPosition.status)
}

// -------------------------------------------------------------------

// EHMessageReportSv

// .EHTechId sourceTechId = 1;
inline void EHMessageReportSv::clear_sourcetechid() {
  sourcetechid_ = 0;
}
inline ::EHTechId EHMessageReportSv::sourcetechid() const {
  // @@protoc_insertion_point(field_get:EHMessageReportSv.sourceTechId)
  return static_cast< ::EHTechId >(sourcetechid_);
}
inline void EHMessageReportSv::set_sourcetechid(::EHTechId value) {
  
  sourcetechid_ = value;
  // @@protoc_insertion_point(field_set:EHMessageReportSv.sourceTechId)
}

// .PBGnssSvNotification svNotification = 2;
inline bool EHMessageReportSv::has_svnotification() const {
  return this != internal_default_instance() && svnotification_ != NULL;
}
inline void EHMessageReportSv::clear_svnotification() {
  if (GetArenaNoVirtual() == NULL && svnotification_ != NULL) delete svnotification_;
  svnotification_ = NULL;
}
inline const ::PBGnssSvNotification& EHMessageReportSv::svnotification() const {
  // @@protoc_insertion_point(field_get:EHMessageReportSv.svNotification)
  return svnotification_ != NULL ? *svnotification_
                         : *::PBGnssSvNotification::internal_default_instance();
}
inline ::PBGnssSvNotification* EHMessageReportSv::mutable_svnotification() {
  
  if (svnotification_ == NULL) {
    svnotification_ = new ::PBGnssSvNotification;
  }
  // @@protoc_insertion_point(field_mutable:EHMessageReportSv.svNotification)
  return svnotification_;
}
inline ::PBGnssSvNotification* EHMessageReportSv::release_svnotification() {
  // @@protoc_insertion_point(field_release:EHMessageReportSv.svNotification)
  
  ::PBGnssSvNotification* temp = svnotification_;
  svnotification_ = NULL;
  return temp;
}
inline void EHMessageReportSv::set_allocated_svnotification(::PBGnssSvNotification* svnotification) {
  delete svnotification_;
  svnotification_ = svnotification;
  if (svnotification) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:EHMessageReportSv.svNotification)
}

// -------------------------------------------------------------------

// EHMessageReportSvPolynomial

// .EHTechId sourceTechId = 1;
inline void EHMessageReportSvPolynomial::clear_sourcetechid() {
  sourcetechid_ = 0;
}
inline ::EHTechId EHMessageReportSvPolynomial::sourcetechid() const {
  // @@protoc_insertion_point(field_get:EHMessageReportSvPolynomial.sourceTechId)
  return static_cast< ::EHTechId >(sourcetechid_);
}
inline void EHMessageReportSvPolynomial::set_sourcetechid(::EHTechId value) {
  
  sourcetechid_ = value;
  // @@protoc_insertion_point(field_set:EHMessageReportSvPolynomial.sourceTechId)
}

// .PBGnssSvPolynomial svPolynomial = 2;
inline bool EHMessageReportSvPolynomial::has_svpolynomial() const {
  return this != internal_default_instance() && svpolynomial_ != NULL;
}
inline void EHMessageReportSvPolynomial::clear_svpolynomial() {
  if (GetArenaNoVirtual() == NULL && svpolynomial_ != NULL) delete svpolynomial_;
  svpolynomial_ = NULL;
}
inline const ::PBGnssSvPolynomial& EHMessageReportSvPolynomial::svpolynomial() const {
  // @@protoc_insertion_point(field_get:EHMessageReportSvPolynomial.svPolynomial)
  return svpolynomial_ != NULL ? *svpolynomial_
                         : *::PBGnssSvPolynomial::internal_default_instance();
}
inline ::PBGnssSvPolynomial* EHMessageReportSvPolynomial::mutable_svpolynomial() {
  
  if (svpolynomial_ == NULL) {
    svpolynomial_ = new ::PBGnssSvPolynomial;
  }
  // @@protoc_insertion_point(field_mutable:EHMessageReportSvPolynomial.svPolynomial)
  return svpolynomial_;
}
inline ::PBGnssSvPolynomial* EHMessageReportSvPolynomial::release_svpolynomial() {
  // @@protoc_insertion_point(field_release:EHMessageReportSvPolynomial.svPolynomial)
  
  ::PBGnssSvPolynomial* temp = svpolynomial_;
  svpolynomial_ = NULL;
  return temp;
}
inline void EHMessageReportSvPolynomial::set_allocated_svpolynomial(::PBGnssSvPolynomial* svpolynomial) {
  delete svpolynomial_;
  svpolynomial_ = svpolynomial;
  if (svpolynomial) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:EHMessageReportSvPolynomial.svPolynomial)
}

// -------------------------------------------------------------------

// EHMessageReportSvEphemeris

// .EHTechId sourceTechId = 1;
inline void EHMessageReportSvEphemeris::clear_sourcetechid() {
  sourcetechid_ = 0;
}
inline ::EHTechId EHMessageReportSvEphemeris::sourcetechid() const {
  // @@protoc_insertion_point(field_get:EHMessageReportSvEphemeris.sourceTechId)
  return static_cast< ::EHTechId >(sourcetechid_);
}
inline void EHMessageReportSvEphemeris::set_sourcetechid(::EHTechId value) {
  
  sourcetechid_ = value;
  // @@protoc_insertion_point(field_set:EHMessageReportSvEphemeris.sourceTechId)
}

// .PBGnssSvEphemerisReport svEphemeris = 2;
inline bool EHMessageReportSvEphemeris::has_svephemeris() const {
  return this != internal_default_instance() && svephemeris_ != NULL;
}
inline void EHMessageReportSvEphemeris::clear_svephemeris() {
  if (GetArenaNoVirtual() == NULL && svephemeris_ != NULL) delete svephemeris_;
  svephemeris_ = NULL;
}
inline const ::PBGnssSvEphemerisReport& EHMessageReportSvEphemeris::svephemeris() const {
  // @@protoc_insertion_point(field_get:EHMessageReportSvEphemeris.svEphemeris)
  return svephemeris_ != NULL ? *svephemeris_
                         : *::PBGnssSvEphemerisReport::internal_default_instance();
}
inline ::PBGnssSvEphemerisReport* EHMessageReportSvEphemeris::mutable_svephemeris() {
  
  if (svephemeris_ == NULL) {
    svephemeris_ = new ::PBGnssSvEphemerisReport;
  }
  // @@protoc_insertion_point(field_mutable:EHMessageReportSvEphemeris.svEphemeris)
  return svephemeris_;
}
inline ::PBGnssSvEphemerisReport* EHMessageReportSvEphemeris::release_svephemeris() {
  // @@protoc_insertion_point(field_release:EHMessageReportSvEphemeris.svEphemeris)
  
  ::PBGnssSvEphemerisReport* temp = svephemeris_;
  svephemeris_ = NULL;
  return temp;
}
inline void EHMessageReportSvEphemeris::set_allocated_svephemeris(::PBGnssSvEphemerisReport* svephemeris) {
  delete svephemeris_;
  svephemeris_ = svephemeris;
  if (svephemeris) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:EHMessageReportSvEphemeris.svEphemeris)
}

// -------------------------------------------------------------------

// EHMessageReportSvMeas

// .EHTechId sourceTechId = 1;
inline void EHMessageReportSvMeas::clear_sourcetechid() {
  sourcetechid_ = 0;
}
inline ::EHTechId EHMessageReportSvMeas::sourcetechid() const {
  // @@protoc_insertion_point(field_get:EHMessageReportSvMeas.sourceTechId)
  return static_cast< ::EHTechId >(sourcetechid_);
}
inline void EHMessageReportSvMeas::set_sourcetechid(::EHTechId value) {
  
  sourcetechid_ = value;
  // @@protoc_insertion_point(field_set:EHMessageReportSvMeas.sourceTechId)
}

// .PBGnssSvMeasurementSet svMeasSet = 2;
inline bool EHMessageReportSvMeas::has_svmeasset() const {
  return this != internal_default_instance() && svmeasset_ != NULL;
}
inline void EHMessageReportSvMeas::clear_svmeasset() {
  if (GetArenaNoVirtual() == NULL && svmeasset_ != NULL) delete svmeasset_;
  svmeasset_ = NULL;
}
inline const ::PBGnssSvMeasurementSet& EHMessageReportSvMeas::svmeasset() const {
  // @@protoc_insertion_point(field_get:EHMessageReportSvMeas.svMeasSet)
  return svmeasset_ != NULL ? *svmeasset_
                         : *::PBGnssSvMeasurementSet::internal_default_instance();
}
inline ::PBGnssSvMeasurementSet* EHMessageReportSvMeas::mutable_svmeasset() {
  
  if (svmeasset_ == NULL) {
    svmeasset_ = new ::PBGnssSvMeasurementSet;
  }
  // @@protoc_insertion_point(field_mutable:EHMessageReportSvMeas.svMeasSet)
  return svmeasset_;
}
inline ::PBGnssSvMeasurementSet* EHMessageReportSvMeas::release_svmeasset() {
  // @@protoc_insertion_point(field_release:EHMessageReportSvMeas.svMeasSet)
  
  ::PBGnssSvMeasurementSet* temp = svmeasset_;
  svmeasset_ = NULL;
  return temp;
}
inline void EHMessageReportSvMeas::set_allocated_svmeasset(::PBGnssSvMeasurementSet* svmeasset) {
  delete svmeasset_;
  svmeasset_ = svmeasset;
  if (svmeasset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:EHMessageReportSvMeas.svMeasSet)
}

// -------------------------------------------------------------------

// EHMessageStatusConnectivity

// bool isConnected = 1;
inline void EHMessageStatusConnectivity::clear_isconnected() {
  isconnected_ = false;
}
inline bool EHMessageStatusConnectivity::isconnected() const {
  // @@protoc_insertion_point(field_get:EHMessageStatusConnectivity.isConnected)
  return isconnected_;
}
inline void EHMessageStatusConnectivity::set_isconnected(bool value) {
  
  isconnected_ = value;
  // @@protoc_insertion_point(field_set:EHMessageStatusConnectivity.isConnected)
}

// -------------------------------------------------------------------

// EHMessageReportKlobucharIonoModel

// .EHTechId sourceTechId = 1;
inline void EHMessageReportKlobucharIonoModel::clear_sourcetechid() {
  sourcetechid_ = 0;
}
inline ::EHTechId EHMessageReportKlobucharIonoModel::sourcetechid() const {
  // @@protoc_insertion_point(field_get:EHMessageReportKlobucharIonoModel.sourceTechId)
  return static_cast< ::EHTechId >(sourcetechid_);
}
inline void EHMessageReportKlobucharIonoModel::set_sourcetechid(::EHTechId value) {
  
  sourcetechid_ = value;
  // @@protoc_insertion_point(field_set:EHMessageReportKlobucharIonoModel.sourceTechId)
}

// .PBGnssKlobucharIonoModel klobucharIonoModel = 2;
inline bool EHMessageReportKlobucharIonoModel::has_klobucharionomodel() const {
  return this != internal_default_instance() && klobucharionomodel_ != NULL;
}
inline void EHMessageReportKlobucharIonoModel::clear_klobucharionomodel() {
  if (GetArenaNoVirtual() == NULL && klobucharionomodel_ != NULL) delete klobucharionomodel_;
  klobucharionomodel_ = NULL;
}
inline const ::PBGnssKlobucharIonoModel& EHMessageReportKlobucharIonoModel::klobucharionomodel() const {
  // @@protoc_insertion_point(field_get:EHMessageReportKlobucharIonoModel.klobucharIonoModel)
  return klobucharionomodel_ != NULL ? *klobucharionomodel_
                         : *::PBGnssKlobucharIonoModel::internal_default_instance();
}
inline ::PBGnssKlobucharIonoModel* EHMessageReportKlobucharIonoModel::mutable_klobucharionomodel() {
  
  if (klobucharionomodel_ == NULL) {
    klobucharionomodel_ = new ::PBGnssKlobucharIonoModel;
  }
  // @@protoc_insertion_point(field_mutable:EHMessageReportKlobucharIonoModel.klobucharIonoModel)
  return klobucharionomodel_;
}
inline ::PBGnssKlobucharIonoModel* EHMessageReportKlobucharIonoModel::release_klobucharionomodel() {
  // @@protoc_insertion_point(field_release:EHMessageReportKlobucharIonoModel.klobucharIonoModel)
  
  ::PBGnssKlobucharIonoModel* temp = klobucharionomodel_;
  klobucharionomodel_ = NULL;
  return temp;
}
inline void EHMessageReportKlobucharIonoModel::set_allocated_klobucharionomodel(::PBGnssKlobucharIonoModel* klobucharionomodel) {
  delete klobucharionomodel_;
  klobucharionomodel_ = klobucharionomodel;
  if (klobucharionomodel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:EHMessageReportKlobucharIonoModel.klobucharIonoModel)
}

// -------------------------------------------------------------------

// EHMessageReportGlonassAdditionalParams

// .EHTechId sourceTechId = 1;
inline void EHMessageReportGlonassAdditionalParams::clear_sourcetechid() {
  sourcetechid_ = 0;
}
inline ::EHTechId EHMessageReportGlonassAdditionalParams::sourcetechid() const {
  // @@protoc_insertion_point(field_get:EHMessageReportGlonassAdditionalParams.sourceTechId)
  return static_cast< ::EHTechId >(sourcetechid_);
}
inline void EHMessageReportGlonassAdditionalParams::set_sourcetechid(::EHTechId value) {
  
  sourcetechid_ = value;
  // @@protoc_insertion_point(field_set:EHMessageReportGlonassAdditionalParams.sourceTechId)
}

// .PBGnssAdditionalSystemInfo additionalSystemInfo = 2;
inline bool EHMessageReportGlonassAdditionalParams::has_additionalsysteminfo() const {
  return this != internal_default_instance() && additionalsysteminfo_ != NULL;
}
inline void EHMessageReportGlonassAdditionalParams::clear_additionalsysteminfo() {
  if (GetArenaNoVirtual() == NULL && additionalsysteminfo_ != NULL) delete additionalsysteminfo_;
  additionalsysteminfo_ = NULL;
}
inline const ::PBGnssAdditionalSystemInfo& EHMessageReportGlonassAdditionalParams::additionalsysteminfo() const {
  // @@protoc_insertion_point(field_get:EHMessageReportGlonassAdditionalParams.additionalSystemInfo)
  return additionalsysteminfo_ != NULL ? *additionalsysteminfo_
                         : *::PBGnssAdditionalSystemInfo::internal_default_instance();
}
inline ::PBGnssAdditionalSystemInfo* EHMessageReportGlonassAdditionalParams::mutable_additionalsysteminfo() {
  
  if (additionalsysteminfo_ == NULL) {
    additionalsysteminfo_ = new ::PBGnssAdditionalSystemInfo;
  }
  // @@protoc_insertion_point(field_mutable:EHMessageReportGlonassAdditionalParams.additionalSystemInfo)
  return additionalsysteminfo_;
}
inline ::PBGnssAdditionalSystemInfo* EHMessageReportGlonassAdditionalParams::release_additionalsysteminfo() {
  // @@protoc_insertion_point(field_release:EHMessageReportGlonassAdditionalParams.additionalSystemInfo)
  
  ::PBGnssAdditionalSystemInfo* temp = additionalsysteminfo_;
  additionalsysteminfo_ = NULL;
  return temp;
}
inline void EHMessageReportGlonassAdditionalParams::set_allocated_additionalsysteminfo(::PBGnssAdditionalSystemInfo* additionalsysteminfo) {
  delete additionalsysteminfo_;
  additionalsysteminfo_ = additionalsysteminfo;
  if (additionalsysteminfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:EHMessageReportGlonassAdditionalParams.additionalSystemInfo)
}

// -------------------------------------------------------------------

// EHMessageReportCdfwQDgnssReferenceStation

// .EHTechId sourceTechId = 1;
inline void EHMessageReportCdfwQDgnssReferenceStation::clear_sourcetechid() {
  sourcetechid_ = 0;
}
inline ::EHTechId EHMessageReportCdfwQDgnssReferenceStation::sourcetechid() const {
  // @@protoc_insertion_point(field_get:EHMessageReportCdfwQDgnssReferenceStation.sourceTechId)
  return static_cast< ::EHTechId >(sourcetechid_);
}
inline void EHMessageReportCdfwQDgnssReferenceStation::set_sourcetechid(::EHTechId value) {
  
  sourcetechid_ = value;
  // @@protoc_insertion_point(field_set:EHMessageReportCdfwQDgnssReferenceStation.sourceTechId)
}

// .PBReferenceStation qDgnssRefStation = 2;
inline bool EHMessageReportCdfwQDgnssReferenceStation::has_qdgnssrefstation() const {
  return this != internal_default_instance() && qdgnssrefstation_ != NULL;
}
inline void EHMessageReportCdfwQDgnssReferenceStation::clear_qdgnssrefstation() {
  if (GetArenaNoVirtual() == NULL && qdgnssrefstation_ != NULL) delete qdgnssrefstation_;
  qdgnssrefstation_ = NULL;
}
inline const ::PBReferenceStation& EHMessageReportCdfwQDgnssReferenceStation::qdgnssrefstation() const {
  // @@protoc_insertion_point(field_get:EHMessageReportCdfwQDgnssReferenceStation.qDgnssRefStation)
  return qdgnssrefstation_ != NULL ? *qdgnssrefstation_
                         : *::PBReferenceStation::internal_default_instance();
}
inline ::PBReferenceStation* EHMessageReportCdfwQDgnssReferenceStation::mutable_qdgnssrefstation() {
  
  if (qdgnssrefstation_ == NULL) {
    qdgnssrefstation_ = new ::PBReferenceStation;
  }
  // @@protoc_insertion_point(field_mutable:EHMessageReportCdfwQDgnssReferenceStation.qDgnssRefStation)
  return qdgnssrefstation_;
}
inline ::PBReferenceStation* EHMessageReportCdfwQDgnssReferenceStation::release_qdgnssrefstation() {
  // @@protoc_insertion_point(field_release:EHMessageReportCdfwQDgnssReferenceStation.qDgnssRefStation)
  
  ::PBReferenceStation* temp = qdgnssrefstation_;
  qdgnssrefstation_ = NULL;
  return temp;
}
inline void EHMessageReportCdfwQDgnssReferenceStation::set_allocated_qdgnssrefstation(::PBReferenceStation* qdgnssrefstation) {
  delete qdgnssrefstation_;
  qdgnssrefstation_ = qdgnssrefstation;
  if (qdgnssrefstation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:EHMessageReportCdfwQDgnssReferenceStation.qDgnssRefStation)
}

// -------------------------------------------------------------------

// EHMessageReportCdfwQDgnssObservation

// .EHTechId sourceTechId = 1;
inline void EHMessageReportCdfwQDgnssObservation::clear_sourcetechid() {
  sourcetechid_ = 0;
}
inline ::EHTechId EHMessageReportCdfwQDgnssObservation::sourcetechid() const {
  // @@protoc_insertion_point(field_get:EHMessageReportCdfwQDgnssObservation.sourceTechId)
  return static_cast< ::EHTechId >(sourcetechid_);
}
inline void EHMessageReportCdfwQDgnssObservation::set_sourcetechid(::EHTechId value) {
  
  sourcetechid_ = value;
  // @@protoc_insertion_point(field_set:EHMessageReportCdfwQDgnssObservation.sourceTechId)
}

// .PBDGnssObservation qDgnssObserv = 2;
inline bool EHMessageReportCdfwQDgnssObservation::has_qdgnssobserv() const {
  return this != internal_default_instance() && qdgnssobserv_ != NULL;
}
inline void EHMessageReportCdfwQDgnssObservation::clear_qdgnssobserv() {
  if (GetArenaNoVirtual() == NULL && qdgnssobserv_ != NULL) delete qdgnssobserv_;
  qdgnssobserv_ = NULL;
}
inline const ::PBDGnssObservation& EHMessageReportCdfwQDgnssObservation::qdgnssobserv() const {
  // @@protoc_insertion_point(field_get:EHMessageReportCdfwQDgnssObservation.qDgnssObserv)
  return qdgnssobserv_ != NULL ? *qdgnssobserv_
                         : *::PBDGnssObservation::internal_default_instance();
}
inline ::PBDGnssObservation* EHMessageReportCdfwQDgnssObservation::mutable_qdgnssobserv() {
  
  if (qdgnssobserv_ == NULL) {
    qdgnssobserv_ = new ::PBDGnssObservation;
  }
  // @@protoc_insertion_point(field_mutable:EHMessageReportCdfwQDgnssObservation.qDgnssObserv)
  return qdgnssobserv_;
}
inline ::PBDGnssObservation* EHMessageReportCdfwQDgnssObservation::release_qdgnssobserv() {
  // @@protoc_insertion_point(field_release:EHMessageReportCdfwQDgnssObservation.qDgnssObserv)
  
  ::PBDGnssObservation* temp = qdgnssobserv_;
  qdgnssobserv_ = NULL;
  return temp;
}
inline void EHMessageReportCdfwQDgnssObservation::set_allocated_qdgnssobserv(::PBDGnssObservation* qdgnssobserv) {
  delete qdgnssobserv_;
  qdgnssobserv_ = qdgnssobserv;
  if (qdgnssobserv) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:EHMessageReportCdfwQDgnssObservation.qDgnssObserv)
}

// -------------------------------------------------------------------

// EHMessageStatusLeverArmConfig

// .PBLeverArmConfigInfo leverArmInfo = 1;
inline bool EHMessageStatusLeverArmConfig::has_leverarminfo() const {
  return this != internal_default_instance() && leverarminfo_ != NULL;
}
inline void EHMessageStatusLeverArmConfig::clear_leverarminfo() {
  if (GetArenaNoVirtual() == NULL && leverarminfo_ != NULL) delete leverarminfo_;
  leverarminfo_ = NULL;
}
inline const ::PBLeverArmConfigInfo& EHMessageStatusLeverArmConfig::leverarminfo() const {
  // @@protoc_insertion_point(field_get:EHMessageStatusLeverArmConfig.leverArmInfo)
  return leverarminfo_ != NULL ? *leverarminfo_
                         : *::PBLeverArmConfigInfo::internal_default_instance();
}
inline ::PBLeverArmConfigInfo* EHMessageStatusLeverArmConfig::mutable_leverarminfo() {
  
  if (leverarminfo_ == NULL) {
    leverarminfo_ = new ::PBLeverArmConfigInfo;
  }
  // @@protoc_insertion_point(field_mutable:EHMessageStatusLeverArmConfig.leverArmInfo)
  return leverarminfo_;
}
inline ::PBLeverArmConfigInfo* EHMessageStatusLeverArmConfig::release_leverarminfo() {
  // @@protoc_insertion_point(field_release:EHMessageStatusLeverArmConfig.leverArmInfo)
  
  ::PBLeverArmConfigInfo* temp = leverarminfo_;
  leverarminfo_ = NULL;
  return temp;
}
inline void EHMessageStatusLeverArmConfig::set_allocated_leverarminfo(::PBLeverArmConfigInfo* leverarminfo) {
  delete leverarminfo_;
  leverarminfo_ = leverarminfo;
  if (leverarminfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:EHMessageStatusLeverArmConfig.leverArmInfo)
}

// -------------------------------------------------------------------

// EHMessageStatusB2sMountParams

// .PBBodyToSensorMountParams b2sMountParams = 1;
inline bool EHMessageStatusB2sMountParams::has_b2smountparams() const {
  return this != internal_default_instance() && b2smountparams_ != NULL;
}
inline void EHMessageStatusB2sMountParams::clear_b2smountparams() {
  if (GetArenaNoVirtual() == NULL && b2smountparams_ != NULL) delete b2smountparams_;
  b2smountparams_ = NULL;
}
inline const ::PBBodyToSensorMountParams& EHMessageStatusB2sMountParams::b2smountparams() const {
  // @@protoc_insertion_point(field_get:EHMessageStatusB2sMountParams.b2sMountParams)
  return b2smountparams_ != NULL ? *b2smountparams_
                         : *::PBBodyToSensorMountParams::internal_default_instance();
}
inline ::PBBodyToSensorMountParams* EHMessageStatusB2sMountParams::mutable_b2smountparams() {
  
  if (b2smountparams_ == NULL) {
    b2smountparams_ = new ::PBBodyToSensorMountParams;
  }
  // @@protoc_insertion_point(field_mutable:EHMessageStatusB2sMountParams.b2sMountParams)
  return b2smountparams_;
}
inline ::PBBodyToSensorMountParams* EHMessageStatusB2sMountParams::release_b2smountparams() {
  // @@protoc_insertion_point(field_release:EHMessageStatusB2sMountParams.b2sMountParams)
  
  ::PBBodyToSensorMountParams* temp = b2smountparams_;
  b2smountparams_ = NULL;
  return temp;
}
inline void EHMessageStatusB2sMountParams::set_allocated_b2smountparams(::PBBodyToSensorMountParams* b2smountparams) {
  delete b2smountparams_;
  b2smountparams_ = b2smountparams;
  if (b2smountparams) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:EHMessageStatusB2sMountParams.b2sMountParams)
}

// -------------------------------------------------------------------

// EngineHubMessage

// .EHMsgId msgId = 1;
inline void EngineHubMessage::clear_msgid() {
  msgid_ = 0;
}
inline ::EHMsgId EngineHubMessage::msgid() const {
  // @@protoc_insertion_point(field_get:EngineHubMessage.msgId)
  return static_cast< ::EHMsgId >(msgid_);
}
inline void EngineHubMessage::set_msgid(::EHMsgId value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:EngineHubMessage.msgId)
}

// bytes payload = 2;
inline void EngineHubMessage::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EngineHubMessage::payload() const {
  // @@protoc_insertion_point(field_get:EngineHubMessage.payload)
  return payload_.GetNoArena();
}
inline void EngineHubMessage::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:EngineHubMessage.payload)
}
#if LANG_CXX11
inline void EngineHubMessage::set_payload(::std::string&& value) {
  
  payload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:EngineHubMessage.payload)
}
#endif
inline void EngineHubMessage::set_payload(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:EngineHubMessage.payload)
}
inline void EngineHubMessage::set_payload(const void* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:EngineHubMessage.payload)
}
inline ::std::string* EngineHubMessage::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:EngineHubMessage.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EngineHubMessage::release_payload() {
  // @@protoc_insertion_point(field_release:EngineHubMessage.payload)
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EngineHubMessage::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:EngineHubMessage.payload)
}

// -------------------------------------------------------------------

// EngineHubMessageWithMsgCounter

// uint32 msgCounter = 1;
inline void EngineHubMessageWithMsgCounter::clear_msgcounter() {
  msgcounter_ = 0u;
}
inline ::google::protobuf::uint32 EngineHubMessageWithMsgCounter::msgcounter() const {
  // @@protoc_insertion_point(field_get:EngineHubMessageWithMsgCounter.msgCounter)
  return msgcounter_;
}
inline void EngineHubMessageWithMsgCounter::set_msgcounter(::google::protobuf::uint32 value) {
  
  msgcounter_ = value;
  // @@protoc_insertion_point(field_set:EngineHubMessageWithMsgCounter.msgCounter)
}

// string msgSenderName = 2;
inline void EngineHubMessageWithMsgCounter::clear_msgsendername() {
  msgsendername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EngineHubMessageWithMsgCounter::msgsendername() const {
  // @@protoc_insertion_point(field_get:EngineHubMessageWithMsgCounter.msgSenderName)
  return msgsendername_.GetNoArena();
}
inline void EngineHubMessageWithMsgCounter::set_msgsendername(const ::std::string& value) {
  
  msgsendername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:EngineHubMessageWithMsgCounter.msgSenderName)
}
#if LANG_CXX11
inline void EngineHubMessageWithMsgCounter::set_msgsendername(::std::string&& value) {
  
  msgsendername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:EngineHubMessageWithMsgCounter.msgSenderName)
}
#endif
inline void EngineHubMessageWithMsgCounter::set_msgsendername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msgsendername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:EngineHubMessageWithMsgCounter.msgSenderName)
}
inline void EngineHubMessageWithMsgCounter::set_msgsendername(const char* value, size_t size) {
  
  msgsendername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:EngineHubMessageWithMsgCounter.msgSenderName)
}
inline ::std::string* EngineHubMessageWithMsgCounter::mutable_msgsendername() {
  
  // @@protoc_insertion_point(field_mutable:EngineHubMessageWithMsgCounter.msgSenderName)
  return msgsendername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EngineHubMessageWithMsgCounter::release_msgsendername() {
  // @@protoc_insertion_point(field_release:EngineHubMessageWithMsgCounter.msgSenderName)
  
  return msgsendername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EngineHubMessageWithMsgCounter::set_allocated_msgsendername(::std::string* msgsendername) {
  if (msgsendername != NULL) {
    
  } else {
    
  }
  msgsendername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgsendername);
  // @@protoc_insertion_point(field_set_allocated:EngineHubMessageWithMsgCounter.msgSenderName)
}

// bytes ehMsgPayload = 3;
inline void EngineHubMessageWithMsgCounter::clear_ehmsgpayload() {
  ehmsgpayload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EngineHubMessageWithMsgCounter::ehmsgpayload() const {
  // @@protoc_insertion_point(field_get:EngineHubMessageWithMsgCounter.ehMsgPayload)
  return ehmsgpayload_.GetNoArena();
}
inline void EngineHubMessageWithMsgCounter::set_ehmsgpayload(const ::std::string& value) {
  
  ehmsgpayload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:EngineHubMessageWithMsgCounter.ehMsgPayload)
}
#if LANG_CXX11
inline void EngineHubMessageWithMsgCounter::set_ehmsgpayload(::std::string&& value) {
  
  ehmsgpayload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:EngineHubMessageWithMsgCounter.ehMsgPayload)
}
#endif
inline void EngineHubMessageWithMsgCounter::set_ehmsgpayload(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ehmsgpayload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:EngineHubMessageWithMsgCounter.ehMsgPayload)
}
inline void EngineHubMessageWithMsgCounter::set_ehmsgpayload(const void* value, size_t size) {
  
  ehmsgpayload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:EngineHubMessageWithMsgCounter.ehMsgPayload)
}
inline ::std::string* EngineHubMessageWithMsgCounter::mutable_ehmsgpayload() {
  
  // @@protoc_insertion_point(field_mutable:EngineHubMessageWithMsgCounter.ehMsgPayload)
  return ehmsgpayload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EngineHubMessageWithMsgCounter::release_ehmsgpayload() {
  // @@protoc_insertion_point(field_release:EngineHubMessageWithMsgCounter.ehMsgPayload)
  
  return ehmsgpayload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EngineHubMessageWithMsgCounter::set_allocated_ehmsgpayload(::std::string* ehmsgpayload) {
  if (ehmsgpayload != NULL) {
    
  } else {
    
  }
  ehmsgpayload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ehmsgpayload);
  // @@protoc_insertion_point(field_set_allocated:EngineHubMessageWithMsgCounter.ehMsgPayload)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::EHMsgId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EHMsgId>() {
  return ::EHMsgId_descriptor();
}
template <> struct is_proto_enum< ::EHMsgCommon> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EHMsgCommon>() {
  return ::EHMsgCommon_descriptor();
}
template <> struct is_proto_enum< ::EHTechId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EHTechId>() {
  return ::EHTechId_descriptor();
}
template <> struct is_proto_enum< ::EHConnectionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EHConnectionType>() {
  return ::EHConnectionType_descriptor();
}
template <> struct is_proto_enum< ::EHRegReportMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EHRegReportMask>() {
  return ::EHRegReportMask_descriptor();
}
template <> struct is_proto_enum< ::EHRegStatusMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EHRegStatusMask>() {
  return ::EHRegStatusMask_descriptor();
}
template <> struct is_proto_enum< ::EHRegReportCorrectionMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EHRegReportCorrectionMask>() {
  return ::EHRegReportCorrectionMask_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_EHMsg_2eproto__INCLUDED
