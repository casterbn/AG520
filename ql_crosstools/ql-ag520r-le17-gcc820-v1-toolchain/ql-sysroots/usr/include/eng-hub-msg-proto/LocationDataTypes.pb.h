// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LocationDataTypes.proto

#ifndef PROTOBUF_LocationDataTypes_2eproto__INCLUDED
#define PROTOBUF_LocationDataTypes_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class PBApTimeStampStructType;
class PBApTimeStampStructTypeDefaultTypeInternal;
extern PBApTimeStampStructTypeDefaultTypeInternal _PBApTimeStampStructType_default_instance_;
class PBBdsEphemeris;
class PBBdsEphemerisDefaultTypeInternal;
extern PBBdsEphemerisDefaultTypeInternal _PBBdsEphemeris_default_instance_;
class PBBdsEphemerisResponse;
class PBBdsEphemerisResponseDefaultTypeInternal;
extern PBBdsEphemerisResponseDefaultTypeInternal _PBBdsEphemerisResponse_default_instance_;
class PBBodyToSensorMountParams;
class PBBodyToSensorMountParamsDefaultTypeInternal;
extern PBBodyToSensorMountParamsDefaultTypeInternal _PBBodyToSensorMountParams_default_instance_;
class PBDGnssMeasurement;
class PBDGnssMeasurementDefaultTypeInternal;
extern PBDGnssMeasurementDefaultTypeInternal _PBDGnssMeasurement_default_instance_;
class PBDGnssObservation;
class PBDGnssObservationDefaultTypeInternal;
extern PBDGnssObservationDefaultTypeInternal _PBDGnssObservation_default_instance_;
class PBDGnssObservationStatusFlags;
class PBDGnssObservationStatusFlagsDefaultTypeInternal;
extern PBDGnssObservationStatusFlagsDefaultTypeInternal _PBDGnssObservationStatusFlags_default_instance_;
class PBGPSTimeStruct;
class PBGPSTimeStructDefaultTypeInternal;
extern PBGPSTimeStructDefaultTypeInternal _PBGPSTimeStruct_default_instance_;
class PBGalileoEphemeris;
class PBGalileoEphemerisDefaultTypeInternal;
extern PBGalileoEphemerisDefaultTypeInternal _PBGalileoEphemeris_default_instance_;
class PBGalileoEphemerisResponse;
class PBGalileoEphemerisResponseDefaultTypeInternal;
extern PBGalileoEphemerisResponseDefaultTypeInternal _PBGalileoEphemerisResponse_default_instance_;
class PBGlonassEphemeris;
class PBGlonassEphemerisDefaultTypeInternal;
extern PBGlonassEphemerisDefaultTypeInternal _PBGlonassEphemeris_default_instance_;
class PBGlonassEphemerisResponse;
class PBGlonassEphemerisResponseDefaultTypeInternal;
extern PBGlonassEphemerisResponseDefaultTypeInternal _PBGlonassEphemerisResponse_default_instance_;
class PBGnssAdditionalSystemInfo;
class PBGnssAdditionalSystemInfoDefaultTypeInternal;
extern PBGnssAdditionalSystemInfoDefaultTypeInternal _PBGnssAdditionalSystemInfo_default_instance_;
class PBGnssAidingData;
class PBGnssAidingDataDefaultTypeInternal;
extern PBGnssAidingDataDefaultTypeInternal _PBGnssAidingData_default_instance_;
class PBGnssAidingDataCommon;
class PBGnssAidingDataCommonDefaultTypeInternal;
extern PBGnssAidingDataCommonDefaultTypeInternal _PBGnssAidingDataCommon_default_instance_;
class PBGnssAidingDataSv;
class PBGnssAidingDataSvDefaultTypeInternal;
extern PBGnssAidingDataSvDefaultTypeInternal _PBGnssAidingDataSv_default_instance_;
class PBGnssEphCommon;
class PBGnssEphCommonDefaultTypeInternal;
extern PBGnssEphCommonDefaultTypeInternal _PBGnssEphCommon_default_instance_;
class PBGnssEpochTime;
class PBGnssEpochTimeDefaultTypeInternal;
extern PBGnssEpochTimeDefaultTypeInternal _PBGnssEpochTime_default_instance_;
class PBGnssEpochTime_glonassEpochTime;
class PBGnssEpochTime_glonassEpochTimeDefaultTypeInternal;
extern PBGnssEpochTime_glonassEpochTimeDefaultTypeInternal _PBGnssEpochTime_glonassEpochTime_default_instance_;
class PBGnssGloTimeStructType;
class PBGnssGloTimeStructTypeDefaultTypeInternal;
extern PBGnssGloTimeStructTypeDefaultTypeInternal _PBGnssGloTimeStructType_default_instance_;
class PBGnssInterSystemBias;
class PBGnssInterSystemBiasDefaultTypeInternal;
extern PBGnssInterSystemBiasDefaultTypeInternal _PBGnssInterSystemBias_default_instance_;
class PBGnssKlobucharIonoModel;
class PBGnssKlobucharIonoModelDefaultTypeInternal;
extern PBGnssKlobucharIonoModelDefaultTypeInternal _PBGnssKlobucharIonoModel_default_instance_;
class PBGnssLocDgnssSVMeasurement;
class PBGnssLocDgnssSVMeasurementDefaultTypeInternal;
extern PBGnssLocDgnssSVMeasurementDefaultTypeInternal _PBGnssLocDgnssSVMeasurement_default_instance_;
class PBGnssLocationPositionDynamics;
class PBGnssLocationPositionDynamicsDefaultTypeInternal;
extern PBGnssLocationPositionDynamicsDefaultTypeInternal _PBGnssLocationPositionDynamics_default_instance_;
class PBGnssSv;
class PBGnssSvDefaultTypeInternal;
extern PBGnssSvDefaultTypeInternal _PBGnssSv_default_instance_;
class PBGnssSvEphemerisReport;
class PBGnssSvEphemerisReportDefaultTypeInternal;
extern PBGnssSvEphemerisReportDefaultTypeInternal _PBGnssSvEphemerisReport_default_instance_;
class PBGnssSvMbUsedInPosition;
class PBGnssSvMbUsedInPositionDefaultTypeInternal;
extern PBGnssSvMbUsedInPositionDefaultTypeInternal _PBGnssSvMbUsedInPosition_default_instance_;
class PBGnssSvMeasurementHeader;
class PBGnssSvMeasurementHeaderDefaultTypeInternal;
extern PBGnssSvMeasurementHeaderDefaultTypeInternal _PBGnssSvMeasurementHeader_default_instance_;
class PBGnssSvMeasurementSet;
class PBGnssSvMeasurementSetDefaultTypeInternal;
extern PBGnssSvMeasurementSetDefaultTypeInternal _PBGnssSvMeasurementSet_default_instance_;
class PBGnssSvNotification;
class PBGnssSvNotificationDefaultTypeInternal;
extern PBGnssSvNotificationDefaultTypeInternal _PBGnssSvNotification_default_instance_;
class PBGnssSvPolynomial;
class PBGnssSvPolynomialDefaultTypeInternal;
extern PBGnssSvPolynomialDefaultTypeInternal _PBGnssSvPolynomial_default_instance_;
class PBGnssSvUsedInPosition;
class PBGnssSvUsedInPositionDefaultTypeInternal;
extern PBGnssSvUsedInPositionDefaultTypeInternal _PBGnssSvUsedInPosition_default_instance_;
class PBGnssSystemTime;
class PBGnssSystemTimeDefaultTypeInternal;
extern PBGnssSystemTimeDefaultTypeInternal _PBGnssSystemTime_default_instance_;
class PBGnssSystemTimeStructType;
class PBGnssSystemTimeStructTypeDefaultTypeInternal;
extern PBGnssSystemTimeStructTypeDefaultTypeInternal _PBGnssSystemTimeStructType_default_instance_;
class PBGpsEphemeris;
class PBGpsEphemerisDefaultTypeInternal;
extern PBGpsEphemerisDefaultTypeInternal _PBGpsEphemeris_default_instance_;
class PBGpsEphemerisResponse;
class PBGpsEphemerisResponseDefaultTypeInternal;
extern PBGpsEphemerisResponseDefaultTypeInternal _PBGpsEphemerisResponse_default_instance_;
class PBGpsLocationExtended;
class PBGpsLocationExtendedDefaultTypeInternal;
extern PBGpsLocationExtendedDefaultTypeInternal _PBGpsLocationExtended_default_instance_;
class PBGpsMeasUsageInfo;
class PBGpsMeasUsageInfoDefaultTypeInternal;
extern PBGpsMeasUsageInfoDefaultTypeInternal _PBGpsMeasUsageInfo_default_instance_;
class PBLeapSecondInfo;
class PBLeapSecondInfoDefaultTypeInternal;
extern PBLeapSecondInfoDefaultTypeInternal _PBLeapSecondInfo_default_instance_;
class PBLeverArmConfigInfo;
class PBLeverArmConfigInfoDefaultTypeInternal;
extern PBLeverArmConfigInfoDefaultTypeInternal _PBLeverArmConfigInfo_default_instance_;
class PBLeverArmParams;
class PBLeverArmParamsDefaultTypeInternal;
extern PBLeverArmParamsDefaultTypeInternal _PBLeverArmParams_default_instance_;
class PBLocExtDOP;
class PBLocExtDOPDefaultTypeInternal;
extern PBLocExtDOPDefaultTypeInternal _PBLocExtDOP_default_instance_;
class PBLocGnssTimeExtInfo;
class PBLocGnssTimeExtInfoDefaultTypeInternal;
extern PBLocGnssTimeExtInfoDefaultTypeInternal _PBLocGnssTimeExtInfo_default_instance_;
class PBLocGpsLocation;
class PBLocGpsLocationDefaultTypeInternal;
extern PBLocGpsLocationDefaultTypeInternal _PBLocGpsLocation_default_instance_;
class PBLocPosMode;
class PBLocPosModeDefaultTypeInternal;
extern PBLocPosModeDefaultTypeInternal _PBLocPosMode_default_instance_;
class PBLocRcvrClockFreqInfo;
class PBLocRcvrClockFreqInfoDefaultTypeInternal;
extern PBLocRcvrClockFreqInfoDefaultTypeInternal _PBLocRcvrClockFreqInfo_default_instance_;
class PBQzssEphemerisResponse;
class PBQzssEphemerisResponseDefaultTypeInternal;
extern PBQzssEphemerisResponseDefaultTypeInternal _PBQzssEphemerisResponse_default_instance_;
class PBReferenceStation;
class PBReferenceStationDefaultTypeInternal;
extern PBReferenceStationDefaultTypeInternal _PBReferenceStation_default_instance_;
class PBSVMeasurementStructType;
class PBSVMeasurementStructTypeDefaultTypeInternal;
extern PBSVMeasurementStructTypeDefaultTypeInternal _PBSVMeasurementStructType_default_instance_;
class PBSVTimeSpeedInfo;
class PBSVTimeSpeedInfoDefaultTypeInternal;
extern PBSVTimeSpeedInfoDefaultTypeInternal _PBSVTimeSpeedInfo_default_instance_;
class PBStationStatusIndicatorMask;
class PBStationStatusIndicatorMaskDefaultTypeInternal;
extern PBStationStatusIndicatorMaskDefaultTypeInternal _PBStationStatusIndicatorMask_default_instance_;
class PBSystemTimeStructUnion;
class PBSystemTimeStructUnionDefaultTypeInternal;
extern PBSystemTimeStructUnionDefaultTypeInternal _PBSystemTimeStructUnion_default_instance_;
class PBTimespec;
class PBTimespecDefaultTypeInternal;
extern PBTimespecDefaultTypeInternal _PBTimespec_default_instance_;
class PBUlpLocation;
class PBUlpLocationDefaultTypeInternal;
extern PBUlpLocationDefaultTypeInternal _PBUlpLocation_default_instance_;

namespace protobuf_LocationDataTypes_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_LocationDataTypes_2eproto

enum PBLocConst {
  PB_GNSS_COMMON_VALS = 0,
  PB_GNSS_SV_POLY_XYZ_0_TH_ORDER_COEFF_MAX_SIZE = 3,
  PB_GNSS_SV_POLY_SV_CLKBIAS_COEFF_MAX_SIZE = 4,
  PB_GNSS_SV_POLY_XYZ_N_TH_ORDER_COEFF_MAX_SIZE = 9,
  PB_GNSS_SV_POLY_VELOCITY_COEF_MAX_SIZE = 12,
  PB_GNSS_EPHEMERIS_LIST_MAX_SIZE_V02 = 32,
  PB_CODE_BIAS_COUNT_MAX = 32,
  PB_GNSS_MEASUREMENTS_MAX = 64,
  PB_DGNSS_MEASUREMENT_MAX = 64,
  PB_DGNSS_SATELLITE_MAX = 64,
  PB_GNSS_SV_MAX = 128,
  PB_GNSS_LOC_SV_MEAS_LIST_MAX_SIZE = 128,
  PBLocConst_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocConst_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocConst_IsValid(int value);
const PBLocConst PBLocConst_MIN = PB_GNSS_COMMON_VALS;
const PBLocConst PBLocConst_MAX = PB_GNSS_SV_MAX;
const int PBLocConst_ARRAYSIZE = PBLocConst_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocConst_descriptor();
inline const ::std::string& PBLocConst_Name(PBLocConst value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocConst_descriptor(), value);
}
inline bool PBLocConst_Parse(
    const ::std::string& name, PBLocConst* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocConst>(
    PBLocConst_descriptor(), name, value);
}
enum PBLocPositionMode {
  PB_LOC_POSITION_MODE_STANDALONE = 0,
  PB_LOC_POSITION_MODE_MS_BASED = 1,
  PB_LOC_POSITION_MODE_MS_ASSISTED = 2,
  PB_LOC_POSITION_MODE_RESERVED_1 = 3,
  PB_LOC_POSITION_MODE_RESERVED_2 = 4,
  PB_LOC_POSITION_MODE_RESERVED_3 = 5,
  PB_LOC_POSITION_MODE_RESERVED_4 = 6,
  PB_LOC_POSITION_MODE_RESERVED_5 = 7,
  PBLocPositionMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocPositionMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocPositionMode_IsValid(int value);
const PBLocPositionMode PBLocPositionMode_MIN = PB_LOC_POSITION_MODE_STANDALONE;
const PBLocPositionMode PBLocPositionMode_MAX = PB_LOC_POSITION_MODE_RESERVED_5;
const int PBLocPositionMode_ARRAYSIZE = PBLocPositionMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocPositionMode_descriptor();
inline const ::std::string& PBLocPositionMode_Name(PBLocPositionMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocPositionMode_descriptor(), value);
}
inline bool PBLocPositionMode_Parse(
    const ::std::string& name, PBLocPositionMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocPositionMode>(
    PBLocPositionMode_descriptor(), name, value);
}
enum PBLocGpsPositionRecurrence {
  PB_LOC_GPS_POSITION_RECURRENCE_PERIODIC = 0,
  PB_LOC_GPS_POSITION_RECURRENCE_SINGLE = 1,
  PBLocGpsPositionRecurrence_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocGpsPositionRecurrence_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocGpsPositionRecurrence_IsValid(int value);
const PBLocGpsPositionRecurrence PBLocGpsPositionRecurrence_MIN = PB_LOC_GPS_POSITION_RECURRENCE_PERIODIC;
const PBLocGpsPositionRecurrence PBLocGpsPositionRecurrence_MAX = PB_LOC_GPS_POSITION_RECURRENCE_SINGLE;
const int PBLocGpsPositionRecurrence_ARRAYSIZE = PBLocGpsPositionRecurrence_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocGpsPositionRecurrence_descriptor();
inline const ::std::string& PBLocGpsPositionRecurrence_Name(PBLocGpsPositionRecurrence value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocGpsPositionRecurrence_descriptor(), value);
}
inline bool PBLocGpsPositionRecurrence_Parse(
    const ::std::string& name, PBLocGpsPositionRecurrence* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocGpsPositionRecurrence>(
    PBLocGpsPositionRecurrence_descriptor(), name, value);
}
enum PBLocSessionStatus {
  PB_LOC_SESS_SUCCESS = 0,
  PB_LOC_SESS_INTERMEDIATE = 1,
  PB_LOC_SESS_FAILURE = 2,
  PBLocSessionStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocSessionStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocSessionStatus_IsValid(int value);
const PBLocSessionStatus PBLocSessionStatus_MIN = PB_LOC_SESS_SUCCESS;
const PBLocSessionStatus PBLocSessionStatus_MAX = PB_LOC_SESS_FAILURE;
const int PBLocSessionStatus_ARRAYSIZE = PBLocSessionStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocSessionStatus_descriptor();
inline const ::std::string& PBLocSessionStatus_Name(PBLocSessionStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocSessionStatus_descriptor(), value);
}
inline bool PBLocSessionStatus_Parse(
    const ::std::string& name, PBLocSessionStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocSessionStatus>(
    PBLocSessionStatus_descriptor(), name, value);
}
enum PBLocPosTechMask {
  PB_LOC_POS_TECH_MASK_DEFAULT = 0,
  PB_LOC_POS_TECH_MASK_SATELLITE = 1,
  PB_LOC_POS_TECH_MASK_CELLID = 2,
  PB_LOC_POS_TECH_MASK_WIFI = 4,
  PB_LOC_POS_TECH_MASK_SENSORS = 8,
  PB_LOC_POS_TECH_MASK_REFERENCE_LOCATION = 16,
  PB_LOC_POS_TECH_MASK_INJECTED_COARSE_POSITION = 32,
  PB_LOC_POS_TECH_MASK_AFLT = 64,
  PB_LOC_POS_TECH_MASK_HYBRID = 128,
  PB_LOC_POS_TECH_MASK_PPE = 256,
  PBLocPosTechMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocPosTechMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocPosTechMask_IsValid(int value);
const PBLocPosTechMask PBLocPosTechMask_MIN = PB_LOC_POS_TECH_MASK_DEFAULT;
const PBLocPosTechMask PBLocPosTechMask_MAX = PB_LOC_POS_TECH_MASK_PPE;
const int PBLocPosTechMask_ARRAYSIZE = PBLocPosTechMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocPosTechMask_descriptor();
inline const ::std::string& PBLocPosTechMask_Name(PBLocPosTechMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocPosTechMask_descriptor(), value);
}
inline bool PBLocPosTechMask_Parse(
    const ::std::string& name, PBLocPosTechMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocPosTechMask>(
    PBLocPosTechMask_descriptor(), name, value);
}
enum PBLocGpsSpoofMask {
  PB_LOC_GPS_LOCATION_NONE_SPOOFED = 0,
  PB_LOC_GPS_LOCATION_POSITION_SPOOFED = 1,
  PB_LOC_GPS_LOCATION_TIME_SPOOFED = 2,
  PB_LOC_GPS_LOCATION_NAVIGATION_DATA_SPOOFED = 4,
  PBLocGpsSpoofMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocGpsSpoofMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocGpsSpoofMask_IsValid(int value);
const PBLocGpsSpoofMask PBLocGpsSpoofMask_MIN = PB_LOC_GPS_LOCATION_NONE_SPOOFED;
const PBLocGpsSpoofMask PBLocGpsSpoofMask_MAX = PB_LOC_GPS_LOCATION_NAVIGATION_DATA_SPOOFED;
const int PBLocGpsSpoofMask_ARRAYSIZE = PBLocGpsSpoofMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocGpsSpoofMask_descriptor();
inline const ::std::string& PBLocGpsSpoofMask_Name(PBLocGpsSpoofMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocGpsSpoofMask_descriptor(), value);
}
inline bool PBLocGpsSpoofMask_Parse(
    const ::std::string& name, PBLocGpsSpoofMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocGpsSpoofMask>(
    PBLocGpsSpoofMask_descriptor(), name, value);
}
enum PBGpsLocationExtendedFlagsLower32 {
  PB_GPS_LOCATION_EXTENDED_LOWER32_INVALID = 0,
  PB_GPS_LOCATION_EXTENDED_HAS_DOP = 1,
  PB_GPS_LOCATION_EXTENDED_HAS_ALTITUDE_MEAN_SEA_LEVEL = 2,
  PB_GPS_LOCATION_EXTENDED_HAS_MAG_DEV = 4,
  PB_GPS_LOCATION_EXTENDED_HAS_MODE_IND = 8,
  PB_GPS_LOCATION_EXTENDED_HAS_VERT_UNC = 16,
  PB_GPS_LOCATION_EXTENDED_HAS_SPEED_UNC = 32,
  PB_GPS_LOCATION_EXTENDED_HAS_BEARING_UNC = 64,
  PB_GPS_LOCATION_EXTENDED_HAS_HOR_RELIABILITY = 128,
  PB_GPS_LOCATION_EXTENDED_HAS_VERT_RELIABILITY = 256,
  PB_GPS_LOCATION_EXTENDED_HAS_HOR_ELIP_UNC_MAJOR = 512,
  PB_GPS_LOCATION_EXTENDED_HAS_HOR_ELIP_UNC_MINOR = 1024,
  PB_GPS_LOCATION_EXTENDED_HAS_HOR_ELIP_UNC_AZIMUTH = 2048,
  PB_GPS_LOCATION_EXTENDED_HAS_GNSS_SV_USED_DATA = 4096,
  PB_GPS_LOCATION_EXTENDED_HAS_NAV_SOLUTION_MASK = 8192,
  PB_GPS_LOCATION_EXTENDED_HAS_POS_TECH_MASK = 16384,
  PB_GPS_LOCATION_EXTENDED_HAS_SV_SOURCE_INFO = 32768,
  PB_GPS_LOCATION_EXTENDED_HAS_POS_DYNAMICS_DATA = 65536,
  PB_GPS_LOCATION_EXTENDED_HAS_GPS_TIME = 131072,
  PB_GPS_LOCATION_EXTENDED_HAS_EXT_DOP = 262144,
  PB_GPS_LOCATION_EXTENDED_HAS_NORTH_STD_DEV = 524288,
  PB_GPS_LOCATION_EXTENDED_HAS_EAST_STD_DEV = 1048576,
  PB_GPS_LOCATION_EXTENDED_HAS_NORTH_VEL = 2097152,
  PB_GPS_LOCATION_EXTENDED_HAS_EAST_VEL = 4194304,
  PB_GPS_LOCATION_EXTENDED_HAS_UP_VEL = 8388608,
  PB_GPS_LOCATION_EXTENDED_HAS_NORTH_VEL_UNC = 16777216,
  PB_GPS_LOCATION_EXTENDED_HAS_EAST_VEL_UNC = 33554432,
  PB_GPS_LOCATION_EXTENDED_HAS_UP_VEL_UNC = 67108864,
  PB_GPS_LOCATION_EXTENDED_HAS_CLOCK_BIAS = 134217728,
  PB_GPS_LOCATION_EXTENDED_HAS_CLOCK_BIAS_STD_DEV = 268435456,
  PB_GPS_LOCATION_EXTENDED_HAS_CLOCK_DRIFT = 536870912,
  PB_GPS_LOCATION_EXTENDED_HAS_CLOCK_DRIFT_STD_DEV = 1073741824,
  PBGpsLocationExtendedFlagsLower32_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGpsLocationExtendedFlagsLower32_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGpsLocationExtendedFlagsLower32_IsValid(int value);
const PBGpsLocationExtendedFlagsLower32 PBGpsLocationExtendedFlagsLower32_MIN = PB_GPS_LOCATION_EXTENDED_LOWER32_INVALID;
const PBGpsLocationExtendedFlagsLower32 PBGpsLocationExtendedFlagsLower32_MAX = PB_GPS_LOCATION_EXTENDED_HAS_CLOCK_DRIFT_STD_DEV;
const int PBGpsLocationExtendedFlagsLower32_ARRAYSIZE = PBGpsLocationExtendedFlagsLower32_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGpsLocationExtendedFlagsLower32_descriptor();
inline const ::std::string& PBGpsLocationExtendedFlagsLower32_Name(PBGpsLocationExtendedFlagsLower32 value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGpsLocationExtendedFlagsLower32_descriptor(), value);
}
inline bool PBGpsLocationExtendedFlagsLower32_Parse(
    const ::std::string& name, PBGpsLocationExtendedFlagsLower32* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGpsLocationExtendedFlagsLower32>(
    PBGpsLocationExtendedFlagsLower32_descriptor(), name, value);
}
enum PBGpsLocationExtendedFlagsUpper32 {
  PB_GPS_LOCATION_EXTENDED_UPPER32_INVALID = 0,
  PB_GPS_LOCATION_EXTENDED_HAS_LEAP_SECONDS = 1,
  PB_GPS_LOCATION_EXTENDED_HAS_TIME_UNC = 2,
  PB_GPS_LOCATION_EXTENDED_HAS_HEADING_RATE = 4,
  PB_GPS_LOCATION_EXTENDED_HAS_CALIBRATION_CONFIDENCE = 8,
  PB_GPS_LOCATION_EXTENDED_HAS_CALIBRATION_STATUS = 16,
  PB_GPS_LOCATION_EXTENDED_HAS_MULTIBAND = 32,
  PB_GPS_LOCATION_EXTENDED_HAS_OUTPUT_ENG_TYPE = 64,
  PB_GPS_LOCATION_EXTENDED_HAS_OUTPUT_ENG_MASK = 128,
  PB_GPS_LOCATION_EXTENDED_HAS_DGNSS_CORRECTION_SOURCE_TYPE = 256,
  PB_GPS_LOCATION_EXTENDED_HAS_DGNSS_CORRECTION_SOURCE_ID = 512,
  PB_GPS_LOCATION_EXTENDED_HAS_DGNSS_CONSTELLATION_USAGE = 1024,
  PB_GPS_LOCATION_EXTENDED_HAS_DGNSS_REF_STATION_ID = 2048,
  PB_GPS_LOCATION_EXTENDED_HAS_DGNSS_DATA_AGE = 4096,
  PBGpsLocationExtendedFlagsUpper32_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGpsLocationExtendedFlagsUpper32_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGpsLocationExtendedFlagsUpper32_IsValid(int value);
const PBGpsLocationExtendedFlagsUpper32 PBGpsLocationExtendedFlagsUpper32_MIN = PB_GPS_LOCATION_EXTENDED_UPPER32_INVALID;
const PBGpsLocationExtendedFlagsUpper32 PBGpsLocationExtendedFlagsUpper32_MAX = PB_GPS_LOCATION_EXTENDED_HAS_DGNSS_DATA_AGE;
const int PBGpsLocationExtendedFlagsUpper32_ARRAYSIZE = PBGpsLocationExtendedFlagsUpper32_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGpsLocationExtendedFlagsUpper32_descriptor();
inline const ::std::string& PBGpsLocationExtendedFlagsUpper32_Name(PBGpsLocationExtendedFlagsUpper32 value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGpsLocationExtendedFlagsUpper32_descriptor(), value);
}
inline bool PBGpsLocationExtendedFlagsUpper32_Parse(
    const ::std::string& name, PBGpsLocationExtendedFlagsUpper32* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGpsLocationExtendedFlagsUpper32>(
    PBGpsLocationExtendedFlagsUpper32_descriptor(), name, value);
}
enum PBLocGpsLocationFlags {
  PB_LOC_GPS_LOCATION_FLAGS_INVALID = 0,
  PB_LOC_GPS_LOCATION_HAS_LAT_LONG = 1,
  PB_LOC_GPS_LOCATION_HAS_ALTITUDE = 2,
  PB_LOC_GPS_LOCATION_HAS_SPEED = 4,
  PB_LOC_GPS_LOCATION_HAS_BEARING = 8,
  PB_LOC_GPS_LOCATION_HAS_ACCURACY = 16,
  PB_LOC_GPS_LOCATION_HAS_VERT_UNCERTAINITY = 64,
  PB_LOC_GPS_LOCATION_HAS_SPOOF_MASK = 128,
  PB_LOC_GPS_LOCATION_HAS_SPEED_ACCURACY = 256,
  PB_LOC_GPS_LOCATION_HAS_BEARING_ACCURACY = 512,
  PBLocGpsLocationFlags_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocGpsLocationFlags_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocGpsLocationFlags_IsValid(int value);
const PBLocGpsLocationFlags PBLocGpsLocationFlags_MIN = PB_LOC_GPS_LOCATION_FLAGS_INVALID;
const PBLocGpsLocationFlags PBLocGpsLocationFlags_MAX = PB_LOC_GPS_LOCATION_HAS_BEARING_ACCURACY;
const int PBLocGpsLocationFlags_ARRAYSIZE = PBLocGpsLocationFlags_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocGpsLocationFlags_descriptor();
inline const ::std::string& PBLocGpsLocationFlags_Name(PBLocGpsLocationFlags value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocGpsLocationFlags_descriptor(), value);
}
inline bool PBLocGpsLocationFlags_Parse(
    const ::std::string& name, PBLocGpsLocationFlags* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocGpsLocationFlags>(
    PBLocGpsLocationFlags_descriptor(), name, value);
}
enum PBGnssSvType {
  PB_GNSS_SV_TYPE_UNKNOWN = 0,
  PB_GNSS_SV_TYPE_GPS = 1,
  PB_GNSS_SV_TYPE_SBAS = 2,
  PB_GNSS_SV_TYPE_GLONASS = 3,
  PB_GNSS_SV_TYPE_QZSS = 4,
  PB_GNSS_SV_TYPE_BEIDOU = 5,
  PB_GNSS_SV_TYPE_GALILEO = 6,
  PBGnssSvType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssSvType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssSvType_IsValid(int value);
const PBGnssSvType PBGnssSvType_MIN = PB_GNSS_SV_TYPE_UNKNOWN;
const PBGnssSvType PBGnssSvType_MAX = PB_GNSS_SV_TYPE_GALILEO;
const int PBGnssSvType_ARRAYSIZE = PBGnssSvType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssSvType_descriptor();
inline const ::std::string& PBGnssSvType_Name(PBGnssSvType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssSvType_descriptor(), value);
}
inline bool PBGnssSvType_Parse(
    const ::std::string& name, PBGnssSvType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssSvType>(
    PBGnssSvType_descriptor(), name, value);
}
enum PBGnssSvOptionsMask {
  PB_GNSS_SV_OPTIONS_INVALID = 0,
  PB_GNSS_SV_OPTIONS_HAS_EPHEMER_BIT = 1,
  PB_GNSS_SV_OPTIONS_HAS_ALMANAC_BIT = 2,
  PB_GNSS_SV_OPTIONS_USED_IN_FIX_BIT = 4,
  PB_GNSS_SV_OPTIONS_HAS_CARRIER_FREQUENCY_BIT = 8,
  PB_GNSS_SV_OPTIONS_HAS_GNSS_SIGNAL_TYPE_BIT = 16,
  PBGnssSvOptionsMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssSvOptionsMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssSvOptionsMask_IsValid(int value);
const PBGnssSvOptionsMask PBGnssSvOptionsMask_MIN = PB_GNSS_SV_OPTIONS_INVALID;
const PBGnssSvOptionsMask PBGnssSvOptionsMask_MAX = PB_GNSS_SV_OPTIONS_HAS_GNSS_SIGNAL_TYPE_BIT;
const int PBGnssSvOptionsMask_ARRAYSIZE = PBGnssSvOptionsMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssSvOptionsMask_descriptor();
inline const ::std::string& PBGnssSvOptionsMask_Name(PBGnssSvOptionsMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssSvOptionsMask_descriptor(), value);
}
inline bool PBGnssSvOptionsMask_Parse(
    const ::std::string& name, PBGnssSvOptionsMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssSvOptionsMask>(
    PBGnssSvOptionsMask_descriptor(), name, value);
}
enum PBGnssPowerMode {
  PB_GNSS_POWER_MODE_INVALID = 0,
  PB_GNSS_POWER_MODE_M1 = 1,
  PB_GNSS_POWER_MODE_M2 = 2,
  PB_GNSS_POWER_MODE_M3 = 3,
  PB_GNSS_POWER_MODE_M4 = 4,
  PB_GNSS_POWER_MODE_M5 = 5,
  PBGnssPowerMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssPowerMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssPowerMode_IsValid(int value);
const PBGnssPowerMode PBGnssPowerMode_MIN = PB_GNSS_POWER_MODE_INVALID;
const PBGnssPowerMode PBGnssPowerMode_MAX = PB_GNSS_POWER_MODE_M5;
const int PBGnssPowerMode_ARRAYSIZE = PBGnssPowerMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssPowerMode_descriptor();
inline const ::std::string& PBGnssPowerMode_Name(PBGnssPowerMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssPowerMode_descriptor(), value);
}
inline bool PBGnssPowerMode_Parse(
    const ::std::string& name, PBGnssPowerMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssPowerMode>(
    PBGnssPowerMode_descriptor(), name, value);
}
enum PBPositioningEngineMask {
  PB_POS_ENG_MASK_INVALID = 0,
  PB_STANDARD_POSITIONING_ENGINE = 1,
  PB_DEAD_RECKONING_ENGINE = 2,
  PB_PRECISE_POSITIONING_ENGINE = 4,
  PBPositioningEngineMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBPositioningEngineMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBPositioningEngineMask_IsValid(int value);
const PBPositioningEngineMask PBPositioningEngineMask_MIN = PB_POS_ENG_MASK_INVALID;
const PBPositioningEngineMask PBPositioningEngineMask_MAX = PB_PRECISE_POSITIONING_ENGINE;
const int PBPositioningEngineMask_ARRAYSIZE = PBPositioningEngineMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBPositioningEngineMask_descriptor();
inline const ::std::string& PBPositioningEngineMask_Name(PBPositioningEngineMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBPositioningEngineMask_descriptor(), value);
}
inline bool PBPositioningEngineMask_Parse(
    const ::std::string& name, PBPositioningEngineMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBPositioningEngineMask>(
    PBPositioningEngineMask_descriptor(), name, value);
}
enum PBLocReliability {
  PB_LOC_RELIABILITY_NOT_SET = 0,
  PB_LOC_RELIABILITY_VERY_LOW = 1,
  PB_LOC_RELIABILITY_LOW = 2,
  PB_LOC_RELIABILITY_MEDIUM = 3,
  PB_LOC_RELIABILITY_HIGH = 4,
  PBLocReliability_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocReliability_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocReliability_IsValid(int value);
const PBLocReliability PBLocReliability_MIN = PB_LOC_RELIABILITY_NOT_SET;
const PBLocReliability PBLocReliability_MAX = PB_LOC_RELIABILITY_HIGH;
const int PBLocReliability_ARRAYSIZE = PBLocReliability_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocReliability_descriptor();
inline const ::std::string& PBLocReliability_Name(PBLocReliability value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocReliability_descriptor(), value);
}
inline bool PBLocReliability_Parse(
    const ::std::string& name, PBLocReliability* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocReliability>(
    PBLocReliability_descriptor(), name, value);
}
enum PBGnssAidingDataSvMask {
  PB_GNSS_AIDING_DATA_SV_MASK_INVALID = 0,
  PB_GNSS_AIDING_DATA_SV_EPHEMERIS_BIT = 1,
  PB_GNSS_AIDING_DATA_SV_ALMANAC_BIT = 2,
  PB_GNSS_AIDING_DATA_SV_HEALTH_BIT = 4,
  PB_GNSS_AIDING_DATA_SV_DIRECTION_BIT = 8,
  PB_GNSS_AIDING_DATA_SV_STEER_BIT = 16,
  PB_GNSS_AIDING_DATA_SV_ALMANAC_CORR_BIT = 32,
  PB_GNSS_AIDING_DATA_SV_BLACKLIST_BIT = 64,
  PB_GNSS_AIDING_DATA_SV_SA_DATA_BIT = 128,
  PB_GNSS_AIDING_DATA_SV_NO_EXIST_BIT = 256,
  PB_GNSS_AIDING_DATA_SV_IONOSPHERE_BIT = 512,
  PB_GNSS_AIDING_DATA_SV_TIME_BIT = 1024,
  PB_GNSS_AIDING_DATA_SV_MB_DATA = 2048,
  PB_GNSS_AIDING_DATA_SV_POLY_BIT = 5096,
  PBGnssAidingDataSvMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssAidingDataSvMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssAidingDataSvMask_IsValid(int value);
const PBGnssAidingDataSvMask PBGnssAidingDataSvMask_MIN = PB_GNSS_AIDING_DATA_SV_MASK_INVALID;
const PBGnssAidingDataSvMask PBGnssAidingDataSvMask_MAX = PB_GNSS_AIDING_DATA_SV_POLY_BIT;
const int PBGnssAidingDataSvMask_ARRAYSIZE = PBGnssAidingDataSvMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssAidingDataSvMask_descriptor();
inline const ::std::string& PBGnssAidingDataSvMask_Name(PBGnssAidingDataSvMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssAidingDataSvMask_descriptor(), value);
}
inline bool PBGnssAidingDataSvMask_Parse(
    const ::std::string& name, PBGnssAidingDataSvMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssAidingDataSvMask>(
    PBGnssAidingDataSvMask_descriptor(), name, value);
}
enum PBGnssAidingDataSvTypeMask {
  PB_GNSS_AIDING_DATA_SV_TYPE_MASK_INVALID = 0,
  PB_GNSS_AIDING_DATA_SV_TYPE_GPS_BIT = 1,
  PB_GNSS_AIDING_DATA_SV_TYPE_GLONASS_BIT = 2,
  PB_GNSS_AIDING_DATA_SV_TYPE_QZSS_BIT = 4,
  PB_GNSS_AIDING_DATA_SV_TYPE_BEIDOU_BIT = 8,
  PB_GNSS_AIDING_DATA_SV_TYPE_GALILEO_BIT = 16,
  PBGnssAidingDataSvTypeMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssAidingDataSvTypeMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssAidingDataSvTypeMask_IsValid(int value);
const PBGnssAidingDataSvTypeMask PBGnssAidingDataSvTypeMask_MIN = PB_GNSS_AIDING_DATA_SV_TYPE_MASK_INVALID;
const PBGnssAidingDataSvTypeMask PBGnssAidingDataSvTypeMask_MAX = PB_GNSS_AIDING_DATA_SV_TYPE_GALILEO_BIT;
const int PBGnssAidingDataSvTypeMask_ARRAYSIZE = PBGnssAidingDataSvTypeMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssAidingDataSvTypeMask_descriptor();
inline const ::std::string& PBGnssAidingDataSvTypeMask_Name(PBGnssAidingDataSvTypeMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssAidingDataSvTypeMask_descriptor(), value);
}
inline bool PBGnssAidingDataSvTypeMask_Parse(
    const ::std::string& name, PBGnssAidingDataSvTypeMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssAidingDataSvTypeMask>(
    PBGnssAidingDataSvTypeMask_descriptor(), name, value);
}
enum PBGnssAidingDataCommonMask {
  PB_GNSS_AIDING_DATA_COMMON_MASK_INVALID = 0,
  PB_GNSS_AIDING_DATA_COMMON_POSITION_BIT = 1,
  PB_GNSS_AIDING_DATA_COMMON_TIME_BIT = 2,
  PB_GNSS_AIDING_DATA_COMMON_UTC_BIT = 4,
  PB_GNSS_AIDING_DATA_COMMON_RTI_BIT = 8,
  PB_GNSS_AIDING_DATA_COMMON_FREQ_BIAS_EST_BIT = 16,
  PB_GNSS_AIDING_DATA_COMMON_CELLDB_BIT = 32,
  PBGnssAidingDataCommonMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssAidingDataCommonMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssAidingDataCommonMask_IsValid(int value);
const PBGnssAidingDataCommonMask PBGnssAidingDataCommonMask_MIN = PB_GNSS_AIDING_DATA_COMMON_MASK_INVALID;
const PBGnssAidingDataCommonMask PBGnssAidingDataCommonMask_MAX = PB_GNSS_AIDING_DATA_COMMON_CELLDB_BIT;
const int PBGnssAidingDataCommonMask_ARRAYSIZE = PBGnssAidingDataCommonMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssAidingDataCommonMask_descriptor();
inline const ::std::string& PBGnssAidingDataCommonMask_Name(PBGnssAidingDataCommonMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssAidingDataCommonMask_descriptor(), value);
}
inline bool PBGnssAidingDataCommonMask_Parse(
    const ::std::string& name, PBGnssAidingDataCommonMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssAidingDataCommonMask>(
    PBGnssAidingDataCommonMask_descriptor(), name, value);
}
enum PBGnss_LocSvSystemEnumType {
  PB_GNSS_LOC_SV_SYSTEM_UNKNOWN = 0,
  PB_GNSS_LOC_SV_SYSTEM_MIN = 1,
  PB_GNSS_LOC_SV_SYSTEM_GPS = 1,
  PB_GNSS_LOC_SV_SYSTEM_GALILEO = 2,
  PB_GNSS_LOC_SV_SYSTEM_SBAS = 3,
  PB_GNSS_LOC_SV_SYSTEM_GLONASS = 4,
  PB_GNSS_LOC_SV_SYSTEM_BDS = 5,
  PB_GNSS_LOC_SV_SYSTEM_QZSS = 6,
  PB_GNSS_LOC_SV_SYSTEM_NAVIC = 7,
  PB_GNSS_LOC_SV_SYSTEM_MAX = 7,
  PBGnss_LocSvSystemEnumType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnss_LocSvSystemEnumType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnss_LocSvSystemEnumType_IsValid(int value);
const PBGnss_LocSvSystemEnumType PBGnss_LocSvSystemEnumType_MIN = PB_GNSS_LOC_SV_SYSTEM_UNKNOWN;
const PBGnss_LocSvSystemEnumType PBGnss_LocSvSystemEnumType_MAX = PB_GNSS_LOC_SV_SYSTEM_NAVIC;
const int PBGnss_LocSvSystemEnumType_ARRAYSIZE = PBGnss_LocSvSystemEnumType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnss_LocSvSystemEnumType_descriptor();
inline const ::std::string& PBGnss_LocSvSystemEnumType_Name(PBGnss_LocSvSystemEnumType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnss_LocSvSystemEnumType_descriptor(), value);
}
inline bool PBGnss_LocSvSystemEnumType_Parse(
    const ::std::string& name, PBGnss_LocSvSystemEnumType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnss_LocSvSystemEnumType>(
    PBGnss_LocSvSystemEnumType_descriptor(), name, value);
}
enum PBGnssSignalInfoMask {
  PB_GNSS_SIGNAL_TYPE_UNKNOWN = 0,
  PB_GNSS_SIGNAL_TYPE_GPS_L1CA = 1,
  PB_GNSS_SIGNAL_TYPE_GPS_L1C = 2,
  PB_GNSS_SIGNAL_TYPE_GPS_L2 = 4,
  PB_GNSS_SIGNAL_TYPE_GPS_L5 = 8,
  PB_GNSS_SIGNAL_TYPE_GLONASS_G1 = 16,
  PB_GNSS_SIGNAL_TYPE_GLONASS_G2 = 32,
  PB_GNSS_SIGNAL_TYPE_GALILEO_E1 = 64,
  PB_GNSS_SIGNAL_TYPE_GALILEO_E5A = 128,
  PB_GNSS_SIGNAL_TYPE_GALILEO_E5B = 256,
  PB_GNSS_SIGNAL_TYPE_BEIDOU_B1I = 512,
  PB_GNSS_SIGNAL_TYPE_BEIDOU_B1C = 1024,
  PB_GNSS_SIGNAL_TYPE_BEIDOU_B2I = 2048,
  PB_GNSS_SIGNAL_TYPE_BEIDOU_B2AI = 4096,
  PB_GNSS_SIGNAL_TYPE_QZSS_L1CA = 8192,
  PB_GNSS_SIGNAL_TYPE_QZSS_L1S = 16384,
  PB_GNSS_SIGNAL_TYPE_QZSS_L2 = 32768,
  PB_GNSS_SIGNAL_TYPE_QZSS_L5 = 65536,
  PB_GNSS_SIGNAL_TYPE_SBAS_L1 = 131072,
  PB_GNSS_SIGNAL_TYPE_NAVIC_L5 = 262144,
  PB_GNSS_SIGNAL_TYPE_BEIDOU_B2AQ = 524288,
  PBGnssSignalInfoMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssSignalInfoMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssSignalInfoMask_IsValid(int value);
const PBGnssSignalInfoMask PBGnssSignalInfoMask_MIN = PB_GNSS_SIGNAL_TYPE_UNKNOWN;
const PBGnssSignalInfoMask PBGnssSignalInfoMask_MAX = PB_GNSS_SIGNAL_TYPE_BEIDOU_B2AQ;
const int PBGnssSignalInfoMask_ARRAYSIZE = PBGnssSignalInfoMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssSignalInfoMask_descriptor();
inline const ::std::string& PBGnssSignalInfoMask_Name(PBGnssSignalInfoMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssSignalInfoMask_descriptor(), value);
}
inline bool PBGnssSignalInfoMask_Parse(
    const ::std::string& name, PBGnssSignalInfoMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssSignalInfoMask>(
    PBGnssSignalInfoMask_descriptor(), name, value);
}
enum PBGnssConstellationInfoMask {
  PB_GNSS_CONSTELLATION_TYPE_UNKNOWN = 0,
  PB_GNSS_CONSTELLATION_TYPE_GPS = 1,
  PB_GNSS_CONSTELLATION_TYPE_GLONASS = 2,
  PB_GNSS_CONSTELLATION_TYPE_QZSS = 4,
  PB_GNSS_CONSTELLATION_TYPE_BEIDOU = 8,
  PB_GNSS_CONSTELLATION_TYPE_GALILEO = 16,
  PB_GNSS_CONSTELLATION_TYPE_SBAS = 32,
  PB_GNSS_CONSTELLATION_TYPE_NAVIC = 64,
  PBGnssConstellationInfoMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssConstellationInfoMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssConstellationInfoMask_IsValid(int value);
const PBGnssConstellationInfoMask PBGnssConstellationInfoMask_MIN = PB_GNSS_CONSTELLATION_TYPE_UNKNOWN;
const PBGnssConstellationInfoMask PBGnssConstellationInfoMask_MAX = PB_GNSS_CONSTELLATION_TYPE_NAVIC;
const int PBGnssConstellationInfoMask_ARRAYSIZE = PBGnssConstellationInfoMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssConstellationInfoMask_descriptor();
inline const ::std::string& PBGnssConstellationInfoMask_Name(PBGnssConstellationInfoMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssConstellationInfoMask_descriptor(), value);
}
inline bool PBGnssConstellationInfoMask_Parse(
    const ::std::string& name, PBGnssConstellationInfoMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssConstellationInfoMask>(
    PBGnssConstellationInfoMask_descriptor(), name, value);
}
enum PBDrCalibrationStatusMask {
  PB_DR_CALIBRATION_INVALID = 0,
  PB_DR_ROLL_CALIBRATION_NEEDED = 1,
  PB_DR_PITCH_CALIBRATION_NEEDED = 2,
  PB_DR_YAW_CALIBRATION_NEEDED = 4,
  PB_DR_ODO_CALIBRATION_NEEDED = 8,
  PB_DR_GYRO_CALIBRATION_NEEDED = 16,
  PBDrCalibrationStatusMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBDrCalibrationStatusMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBDrCalibrationStatusMask_IsValid(int value);
const PBDrCalibrationStatusMask PBDrCalibrationStatusMask_MIN = PB_DR_CALIBRATION_INVALID;
const PBDrCalibrationStatusMask PBDrCalibrationStatusMask_MAX = PB_DR_GYRO_CALIBRATION_NEEDED;
const int PBDrCalibrationStatusMask_ARRAYSIZE = PBDrCalibrationStatusMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBDrCalibrationStatusMask_descriptor();
inline const ::std::string& PBDrCalibrationStatusMask_Name(PBDrCalibrationStatusMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBDrCalibrationStatusMask_descriptor(), value);
}
inline bool PBDrCalibrationStatusMask_Parse(
    const ::std::string& name, PBDrCalibrationStatusMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBDrCalibrationStatusMask>(
    PBDrCalibrationStatusMask_descriptor(), name, value);
}
enum PBLocOutputEngineType {
  PB_LOC_OUTPUT_ENGINE_FUSED = 0,
  PB_LOC_OUTPUT_ENGINE_SPE = 1,
  PB_LOC_OUTPUT_ENGINE_PPE = 2,
  PB_LOC_OUTPUT_ENGINE_COUNT = 3,
  PBLocOutputEngineType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocOutputEngineType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocOutputEngineType_IsValid(int value);
const PBLocOutputEngineType PBLocOutputEngineType_MIN = PB_LOC_OUTPUT_ENGINE_FUSED;
const PBLocOutputEngineType PBLocOutputEngineType_MAX = PB_LOC_OUTPUT_ENGINE_COUNT;
const int PBLocOutputEngineType_ARRAYSIZE = PBLocOutputEngineType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocOutputEngineType_descriptor();
inline const ::std::string& PBLocOutputEngineType_Name(PBLocOutputEngineType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocOutputEngineType_descriptor(), value);
}
inline bool PBLocOutputEngineType_Parse(
    const ::std::string& name, PBLocOutputEngineType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocOutputEngineType>(
    PBLocOutputEngineType_descriptor(), name, value);
}
enum PBGnssMeasUsageInfoValidityMask {
  PB_GNSS_MEAS_USAGE_INFO_INVALID = 0,
  PB_GNSS_PSEUDO_RANGE_RESIDUAL_VALID = 1,
  PB_GNSS_DOPPLER_RESIDUAL_VALID = 2,
  PB_GNSS_CARRIER_PHASE_RESIDUAL_VALID = 4,
  PB_GNSS_CARRIER_PHASE_AMBIGUITY_TYPE_VALID = 8,
  PBGnssMeasUsageInfoValidityMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssMeasUsageInfoValidityMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssMeasUsageInfoValidityMask_IsValid(int value);
const PBGnssMeasUsageInfoValidityMask PBGnssMeasUsageInfoValidityMask_MIN = PB_GNSS_MEAS_USAGE_INFO_INVALID;
const PBGnssMeasUsageInfoValidityMask PBGnssMeasUsageInfoValidityMask_MAX = PB_GNSS_CARRIER_PHASE_AMBIGUITY_TYPE_VALID;
const int PBGnssMeasUsageInfoValidityMask_ARRAYSIZE = PBGnssMeasUsageInfoValidityMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssMeasUsageInfoValidityMask_descriptor();
inline const ::std::string& PBGnssMeasUsageInfoValidityMask_Name(PBGnssMeasUsageInfoValidityMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssMeasUsageInfoValidityMask_descriptor(), value);
}
inline bool PBGnssMeasUsageInfoValidityMask_Parse(
    const ::std::string& name, PBGnssMeasUsageInfoValidityMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssMeasUsageInfoValidityMask>(
    PBGnssMeasUsageInfoValidityMask_descriptor(), name, value);
}
enum PBGnssMeasUsageStatusBitMask {
  PB_GNSS_MEAS_USAGE_STATUS_INVALID = 0,
  PB_GNSS_MEAS_USED_IN_PVT = 1,
  PB_GNSS_MEAS_USAGE_STATUS_BAD_MEAS = 2,
  PB_GNSS_MEAS_USAGE_STATUS_CNO_TOO_LOW = 4,
  PB_GNSS_MEAS_USAGE_STATUS_ELEVATION_TOO_LOW = 8,
  PB_GNSS_MEAS_USAGE_STATUS_NO_EPHEMERIS = 16,
  PB_GNSS_MEAS_USAGE_STATUS_NO_CORRECTIONS = 32,
  PB_GNSS_MEAS_USAGE_STATUS_CORRECTION_TIMEOUT = 64,
  PB_GNSS_MEAS_USAGE_STATUS_UNHEALTHY = 128,
  PB_GNSS_MEAS_USAGE_STATUS_CONFIG_DISABLED = 256,
  PB_GNSS_MEAS_USAGE_STATUS_OTHER = 512,
  PBGnssMeasUsageStatusBitMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssMeasUsageStatusBitMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssMeasUsageStatusBitMask_IsValid(int value);
const PBGnssMeasUsageStatusBitMask PBGnssMeasUsageStatusBitMask_MIN = PB_GNSS_MEAS_USAGE_STATUS_INVALID;
const PBGnssMeasUsageStatusBitMask PBGnssMeasUsageStatusBitMask_MAX = PB_GNSS_MEAS_USAGE_STATUS_OTHER;
const int PBGnssMeasUsageStatusBitMask_ARRAYSIZE = PBGnssMeasUsageStatusBitMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssMeasUsageStatusBitMask_descriptor();
inline const ::std::string& PBGnssMeasUsageStatusBitMask_Name(PBGnssMeasUsageStatusBitMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssMeasUsageStatusBitMask_descriptor(), value);
}
inline bool PBGnssMeasUsageStatusBitMask_Parse(
    const ::std::string& name, PBGnssMeasUsageStatusBitMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssMeasUsageStatusBitMask>(
    PBGnssMeasUsageStatusBitMask_descriptor(), name, value);
}
enum PBGpsSvMeasHeaderFlags {
  PB_GNSS_SV_MEAS_HEADER_HAS_INVALID = 0,
  PB_GNSS_SV_MEAS_HEADER_HAS_LEAP_SECOND = 1,
  PB_GNSS_SV_MEAS_HEADER_HAS_CLOCK_FREQ = 2,
  PB_GNSS_SV_MEAS_HEADER_HAS_AP_TIMESTAMP = 4,
  PB_GNSS_SV_MEAS_HEADER_HAS_GPS_GLO_INTER_SYSTEM_BIAS = 8,
  PB_GNSS_SV_MEAS_HEADER_HAS_GPS_BDS_INTER_SYSTEM_BIAS = 16,
  PB_GNSS_SV_MEAS_HEADER_HAS_GPS_GAL_INTER_SYSTEM_BIAS = 32,
  PB_GNSS_SV_MEAS_HEADER_HAS_BDS_GLO_INTER_SYSTEM_BIAS = 64,
  PB_GNSS_SV_MEAS_HEADER_HAS_GAL_GLO_INTER_SYSTEM_BIAS = 128,
  PB_GNSS_SV_MEAS_HEADER_HAS_GAL_BDS_INTER_SYSTEM_BIAS = 256,
  PB_GNSS_SV_MEAS_HEADER_HAS_GPSL1L5_TIME_BIAS = 512,
  PB_GNSS_SV_MEAS_HEADER_HAS_GALE1E5A_TIME_BIAS = 1024,
  PB_GNSS_SV_MEAS_HEADER_HAS_GPS_SYSTEM_TIME = 2048,
  PB_GNSS_SV_MEAS_HEADER_HAS_GAL_SYSTEM_TIME = 4096,
  PB_GNSS_SV_MEAS_HEADER_HAS_BDS_SYSTEM_TIME = 8192,
  PB_GNSS_SV_MEAS_HEADER_HAS_QZSS_SYSTEM_TIME = 16384,
  PB_GNSS_SV_MEAS_HEADER_HAS_GLO_SYSTEM_TIME = 32768,
  PB_GNSS_SV_MEAS_HEADER_HAS_GPS_SYSTEM_TIME_EXT = 65536,
  PB_GNSS_SV_MEAS_HEADER_HAS_GAL_SYSTEM_TIME_EXT = 131072,
  PB_GNSS_SV_MEAS_HEADER_HAS_BDS_SYSTEM_TIME_EXT = 262144,
  PB_GNSS_SV_MEAS_HEADER_HAS_QZSS_SYSTEM_TIME_EXT = 524288,
  PB_GNSS_SV_MEAS_HEADER_HAS_GLO_SYSTEM_TIME_EXT = 1048576,
  PB_GNSS_SV_MEAS_HEADER_HAS_REF_COUNT_TICKS = 2097152,
  PB_GNSS_SV_MEAS_HEADER_HAS_DGNSS_CORRECTION_SOURCE_TYPE = 4194304,
  PB_GNSS_SV_MEAS_HEADER_HAS_DGNSS_CORRECTION_SOURCE_ID = 8388608,
  PB_GNSS_SV_MEAS_HEADER_HAS_DGNSS_REF_STATION_ID = 16777216,
  PBGpsSvMeasHeaderFlags_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGpsSvMeasHeaderFlags_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGpsSvMeasHeaderFlags_IsValid(int value);
const PBGpsSvMeasHeaderFlags PBGpsSvMeasHeaderFlags_MIN = PB_GNSS_SV_MEAS_HEADER_HAS_INVALID;
const PBGpsSvMeasHeaderFlags PBGpsSvMeasHeaderFlags_MAX = PB_GNSS_SV_MEAS_HEADER_HAS_DGNSS_REF_STATION_ID;
const int PBGpsSvMeasHeaderFlags_ARRAYSIZE = PBGpsSvMeasHeaderFlags_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGpsSvMeasHeaderFlags_descriptor();
inline const ::std::string& PBGpsSvMeasHeaderFlags_Name(PBGpsSvMeasHeaderFlags value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGpsSvMeasHeaderFlags_descriptor(), value);
}
inline bool PBGpsSvMeasHeaderFlags_Parse(
    const ::std::string& name, PBGpsSvMeasHeaderFlags* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGpsSvMeasHeaderFlags>(
    PBGpsSvMeasHeaderFlags_descriptor(), name, value);
}
enum PBGnssLocSvMeasStatusMaskType {
  PB_GNSS_LOC_MEAS_STATUS_NULL = 0,
  PB_GNSS_LOC_MEAS_STATUS_SM_VALID = 1,
  PB_GNSS_LOC_MEAS_STATUS_SB_VALID = 2,
  PB_GNSS_LOC_MEAS_STATUS_MS_VALID = 4,
  PB_GNSS_LOC_MEAS_STATUS_BE_CONFIRM = 8,
  PB_GNSS_LOC_MEAS_STATUS_VELOCITY_VALID = 16,
  PB_GNSS_LOC_MEAS_STATUS_VELOCITY_FINE = 32,
  PB_GNSS_LOC_MEAS_STATUS_LP_VALID = 64,
  PB_GNSS_LOC_MEAS_STATUS_LP_POS_VALID = 128,
  PB_GNSS_LOC_MEAS_STATUS_FROM_RNG_DIFF = 512,
  PB_GNSS_LOC_MEAS_STATUS_FROM_VE_DIFF = 1024,
  PB_GNSS_LOC_MEAS_STATUS_DONT_USE_X = 2048,
  PB_GNSS_LOC_MEAS_STATUS_DONT_USE_M = 4096,
  PB_GNSS_LOC_MEAS_STATUS_DONT_USE_D = 8192,
  PB_GNSS_LOC_MEAS_STATUS_DONT_USE_S = 16384,
  PB_GNSS_LOC_MEAS_STATUS_DONT_USE_P = 32768,
  PB_GNSS_LOC_MEAS_STATUS_GNSS_FRESH_MEAS = 134217728,
  PBGnssLocSvMeasStatusMaskType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssLocSvMeasStatusMaskType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssLocSvMeasStatusMaskType_IsValid(int value);
const PBGnssLocSvMeasStatusMaskType PBGnssLocSvMeasStatusMaskType_MIN = PB_GNSS_LOC_MEAS_STATUS_NULL;
const PBGnssLocSvMeasStatusMaskType PBGnssLocSvMeasStatusMaskType_MAX = PB_GNSS_LOC_MEAS_STATUS_GNSS_FRESH_MEAS;
const int PBGnssLocSvMeasStatusMaskType_ARRAYSIZE = PBGnssLocSvMeasStatusMaskType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssLocSvMeasStatusMaskType_descriptor();
inline const ::std::string& PBGnssLocSvMeasStatusMaskType_Name(PBGnssLocSvMeasStatusMaskType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssLocSvMeasStatusMaskType_descriptor(), value);
}
inline bool PBGnssLocSvMeasStatusMaskType_Parse(
    const ::std::string& name, PBGnssLocSvMeasStatusMaskType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssLocSvMeasStatusMaskType>(
    PBGnssLocSvMeasStatusMaskType_descriptor(), name, value);
}
enum PBCarrierPhaseAmbiguityType {
  PB_CARRIER_PHASE_AMBIGUITY_RESOLUTION_NONE = 0,
  PB_CARRIER_PHASE_AMBIGUITY_RESOLUTION_FLOAT = 1,
  PB_CARRIER_PHASE_AMBIGUITY_RESOLUTION_FIXED = 2,
  PBCarrierPhaseAmbiguityType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBCarrierPhaseAmbiguityType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBCarrierPhaseAmbiguityType_IsValid(int value);
const PBCarrierPhaseAmbiguityType PBCarrierPhaseAmbiguityType_MIN = PB_CARRIER_PHASE_AMBIGUITY_RESOLUTION_NONE;
const PBCarrierPhaseAmbiguityType PBCarrierPhaseAmbiguityType_MAX = PB_CARRIER_PHASE_AMBIGUITY_RESOLUTION_FIXED;
const int PBCarrierPhaseAmbiguityType_ARRAYSIZE = PBCarrierPhaseAmbiguityType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBCarrierPhaseAmbiguityType_descriptor();
inline const ::std::string& PBCarrierPhaseAmbiguityType_Name(PBCarrierPhaseAmbiguityType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBCarrierPhaseAmbiguityType_descriptor(), value);
}
inline bool PBCarrierPhaseAmbiguityType_Parse(
    const ::std::string& name, PBCarrierPhaseAmbiguityType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBCarrierPhaseAmbiguityType>(
    PBCarrierPhaseAmbiguityType_descriptor(), name, value);
}
enum PBLocDgnssCorrectionSourceType {
  PB_LOC_DGNSS_CORR_SOURCE_TYPE_INVALID = 0,
  PB_LOC_DGNSS_CORR_SOURCE_TYPE_RTCM = 1,
  PB_LOC_DGNSS_CORR_SOURCE_TYPE_3GPP = 2,
  PBLocDgnssCorrectionSourceType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocDgnssCorrectionSourceType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocDgnssCorrectionSourceType_IsValid(int value);
const PBLocDgnssCorrectionSourceType PBLocDgnssCorrectionSourceType_MIN = PB_LOC_DGNSS_CORR_SOURCE_TYPE_INVALID;
const PBLocDgnssCorrectionSourceType PBLocDgnssCorrectionSourceType_MAX = PB_LOC_DGNSS_CORR_SOURCE_TYPE_3GPP;
const int PBLocDgnssCorrectionSourceType_ARRAYSIZE = PBLocDgnssCorrectionSourceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocDgnssCorrectionSourceType_descriptor();
inline const ::std::string& PBLocDgnssCorrectionSourceType_Name(PBLocDgnssCorrectionSourceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocDgnssCorrectionSourceType_descriptor(), value);
}
inline bool PBLocDgnssCorrectionSourceType_Parse(
    const ::std::string& name, PBLocDgnssCorrectionSourceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocDgnssCorrectionSourceType>(
    PBLocDgnssCorrectionSourceType_descriptor(), name, value);
}
enum PBGnssLocationPosDataMask {
  PB_LOCATION_NAV_DATA_INVALID = 0,
  PB_LOCATION_NAV_DATA_HAS_LONG_ACCEL_BIT = 1,
  PB_LOCATION_NAV_DATA_HAS_LAT_ACCEL_BIT = 2,
  PB_LOCATION_NAV_DATA_HAS_VERT_ACCEL_BIT = 3,
  PB_LOCATION_NAV_DATA_HAS_YAW_RATE_BIT = 8,
  PB_LOCATION_NAV_DATA_HAS_PITCH_BIT = 16,
  PB_LOCATION_NAV_DATA_HAS_LONG_ACCEL_UNC_BIT = 32,
  PB_LOCATION_NAV_DATA_HAS_LAT_ACCEL_UNC_BIT = 64,
  PB_LOCATION_NAV_DATA_HAS_VERT_ACCEL_UNC_BIT = 128,
  PB_LOCATION_NAV_DATA_HAS_YAW_RATE_UNC_BIT = 256,
  PB_LOCATION_NAV_DATA_HAS_PITCH_UNC_BIT = 512,
  PB_LOCATION_NAV_DATA_HAS_PITCH_RATE_BIT = 1024,
  PB_LOCATION_NAV_DATA_HAS_PITCH_RATE_UNC_BIT = 2048,
  PB_LOCATION_NAV_DATA_HAS_ROLL_BIT = 4096,
  PB_LOCATION_NAV_DATA_HAS_ROLL_UNC_BIT = 8192,
  PB_LOCATION_NAV_DATA_HAS_ROLL_RATE_BIT = 16384,
  PB_LOCATION_NAV_DATA_HAS_ROLL_RATE_UNC_BIT = 32768,
  PB_LOCATION_NAV_DATA_HAS_YAW_BIT = 65536,
  PB_LOCATION_NAV_DATA_HAS_YAW_UNC_BIT = 131072,
  PBGnssLocationPosDataMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssLocationPosDataMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssLocationPosDataMask_IsValid(int value);
const PBGnssLocationPosDataMask PBGnssLocationPosDataMask_MIN = PB_LOCATION_NAV_DATA_INVALID;
const PBGnssLocationPosDataMask PBGnssLocationPosDataMask_MAX = PB_LOCATION_NAV_DATA_HAS_YAW_UNC_BIT;
const int PBGnssLocationPosDataMask_ARRAYSIZE = PBGnssLocationPosDataMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssLocationPosDataMask_descriptor();
inline const ::std::string& PBGnssLocationPosDataMask_Name(PBGnssLocationPosDataMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssLocationPosDataMask_descriptor(), value);
}
inline bool PBGnssLocationPosDataMask_Parse(
    const ::std::string& name, PBGnssLocationPosDataMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssLocationPosDataMask>(
    PBGnssLocationPosDataMask_descriptor(), name, value);
}
enum PBGnssSvPolyStatusMaskValidity {
  PB_GNSS_SV_POLY_STATUS_INVALID_V02 = 0,
  PB_GNSS_SV_POLY_SRC_ALM_CORR_VALID_V02 = 1,
  PB_GNSS_SV_POLY_GLO_STR4_VALID_V02 = 2,
  PB_GNSS_SV_POLY_DELETE_VALID_V02 = 4,
  PB_GNSS_SV_POLY_SRC_GAL_FNAV_OR_INAV_VALID_V02 = 8,
  PBGnssSvPolyStatusMaskValidity_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssSvPolyStatusMaskValidity_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssSvPolyStatusMaskValidity_IsValid(int value);
const PBGnssSvPolyStatusMaskValidity PBGnssSvPolyStatusMaskValidity_MIN = PB_GNSS_SV_POLY_STATUS_INVALID_V02;
const PBGnssSvPolyStatusMaskValidity PBGnssSvPolyStatusMaskValidity_MAX = PB_GNSS_SV_POLY_SRC_GAL_FNAV_OR_INAV_VALID_V02;
const int PBGnssSvPolyStatusMaskValidity_ARRAYSIZE = PBGnssSvPolyStatusMaskValidity_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssSvPolyStatusMaskValidity_descriptor();
inline const ::std::string& PBGnssSvPolyStatusMaskValidity_Name(PBGnssSvPolyStatusMaskValidity value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssSvPolyStatusMaskValidity_descriptor(), value);
}
inline bool PBGnssSvPolyStatusMaskValidity_Parse(
    const ::std::string& name, PBGnssSvPolyStatusMaskValidity* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssSvPolyStatusMaskValidity>(
    PBGnssSvPolyStatusMaskValidity_descriptor(), name, value);
}
enum PBGnssSvPolyStatusMask {
  PB_GNSS_SV_POLY_INVALID_V02 = 0,
  PB_GNSS_SV_POLY_SRC_ALM_CORR_V02 = 1,
  PB_GNSS_SV_POLY_GLO_STR4_V02 = 2,
  PB_GNSS_SV_POLY_DELETE_V02 = 4,
  PB_GNSS_SV_POLY_SRC_GAL_FNAV_OR_INAV_V02 = 8,
  PBGnssSvPolyStatusMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssSvPolyStatusMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssSvPolyStatusMask_IsValid(int value);
const PBGnssSvPolyStatusMask PBGnssSvPolyStatusMask_MIN = PB_GNSS_SV_POLY_INVALID_V02;
const PBGnssSvPolyStatusMask PBGnssSvPolyStatusMask_MAX = PB_GNSS_SV_POLY_SRC_GAL_FNAV_OR_INAV_V02;
const int PBGnssSvPolyStatusMask_ARRAYSIZE = PBGnssSvPolyStatusMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssSvPolyStatusMask_descriptor();
inline const ::std::string& PBGnssSvPolyStatusMask_Name(PBGnssSvPolyStatusMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssSvPolyStatusMask_descriptor(), value);
}
inline bool PBGnssSvPolyStatusMask_Parse(
    const ::std::string& name, PBGnssSvPolyStatusMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssSvPolyStatusMask>(
    PBGnssSvPolyStatusMask_descriptor(), name, value);
}
enum PBUlpGnssSvPolyValidFlags {
  PB_ULP_GNSS_SV_POLY_BIT_INVALID = 0,
  PB_ULP_GNSS_SV_POLY_BIT_GLO_FREQ = 1,
  PB_ULP_GNSS_SV_POLY_BIT_T0 = 2,
  PB_ULP_GNSS_SV_POLY_BIT_IODE = 4,
  PB_ULP_GNSS_SV_POLY_BIT_FLAG = 8,
  PB_ULP_GNSS_SV_POLY_BIT_POLYCOEFF_XYZ0 = 16,
  PB_ULP_GNSS_SV_POLY_BIT_POLYCOEFF_XYZN = 32,
  PB_ULP_GNSS_SV_POLY_BIT_POLYCOEFF_OTHER = 64,
  PB_ULP_GNSS_SV_POLY_BIT_SV_POSUNC = 128,
  PB_ULP_GNSS_SV_POLY_BIT_IONODELAY = 256,
  PB_ULP_GNSS_SV_POLY_BIT_IONODOT = 512,
  PB_ULP_GNSS_SV_POLY_BIT_SBAS_IONODELAY = 1024,
  PB_ULP_GNSS_SV_POLY_BIT_SBAS_IONODOT = 2048,
  PB_ULP_GNSS_SV_POLY_BIT_TROPODELAY = 4096,
  PB_ULP_GNSS_SV_POLY_BIT_ELEVATION = 8192,
  PB_ULP_GNSS_SV_POLY_BIT_ELEVATIONDOT = 16384,
  PB_ULP_GNSS_SV_POLY_BIT_ELEVATIONUNC = 32768,
  PB_ULP_GNSS_SV_POLY_BIT_VELO_COEFF = 65536,
  PB_ULP_GNSS_SV_POLY_BIT_ENHANCED_IOD = 131072,
  PB_ULP_GNSS_SV_POLY_BIT_GPS_ISC_L1CA = 262144,
  PB_ULP_GNSS_SV_POLY_BIT_GPS_ISC_L2C = 524288,
  PB_ULP_GNSS_SV_POLY_BIT_GPS_ISC_L5I5 = 1048576,
  PB_ULP_GNSS_SV_POLY_BIT_GPS_ISC_L5Q5 = 2097152,
  PB_ULP_GNSS_SV_POLY_BIT_GPS_TGD = 4194304,
  PB_ULP_GNSS_SV_POLY_BIT_GLO_TGD_G1G2 = 8388608,
  PB_ULP_GNSS_SV_POLY_BIT_BDS_TGD_B1 = 16777216,
  PB_ULP_GNSS_SV_POLY_BIT_BDS_TGD_B2 = 33554432,
  PB_ULP_GNSS_SV_POLY_BIT_BDS_TGD_B2A = 67108864,
  PB_ULP_GNSS_SV_POLY_BIT_BDS_ISC_B2A = 134217728,
  PB_ULP_GNSS_SV_POLY_BIT_GAL_BGD_E1E5A = 268435456,
  PB_ULP_GNSS_SV_POLY_BIT_GAL_BGD_E1E5B = 536870912,
  PB_ULP_GNSS_SV_POLY_BIT_NAVIC_TGD_L5 = 1073741824,
  PBUlpGnssSvPolyValidFlags_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBUlpGnssSvPolyValidFlags_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBUlpGnssSvPolyValidFlags_IsValid(int value);
const PBUlpGnssSvPolyValidFlags PBUlpGnssSvPolyValidFlags_MIN = PB_ULP_GNSS_SV_POLY_BIT_INVALID;
const PBUlpGnssSvPolyValidFlags PBUlpGnssSvPolyValidFlags_MAX = PB_ULP_GNSS_SV_POLY_BIT_NAVIC_TGD_L5;
const int PBUlpGnssSvPolyValidFlags_ARRAYSIZE = PBUlpGnssSvPolyValidFlags_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBUlpGnssSvPolyValidFlags_descriptor();
inline const ::std::string& PBUlpGnssSvPolyValidFlags_Name(PBUlpGnssSvPolyValidFlags value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBUlpGnssSvPolyValidFlags_descriptor(), value);
}
inline bool PBUlpGnssSvPolyValidFlags_Parse(
    const ::std::string& name, PBUlpGnssSvPolyValidFlags* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBUlpGnssSvPolyValidFlags>(
    PBUlpGnssSvPolyValidFlags_descriptor(), name, value);
}
enum PBUlpGnssSvMeasurementValidFlags {
  PB_ULP_GNSS_SV_MEAS_BIT_INVALID = 0,
  PB_ULP_GNSS_SV_MEAS_BIT_GPS_TIME = 1,
  PB_ULP_GNSS_SV_MEAS_BIT_PSUEDO_RANGE = 2,
  PB_ULP_GNSS_SV_MEAS_BIT_MS_IN_WEEK = 4,
  PB_ULP_GNSS_SV_MEAS_BIT_SUB_MSEC = 8,
  PB_ULP_GNSS_SV_MEAS_BIT_CARRIER_PHASE = 16,
  PB_ULP_GNSS_SV_MEAS_BIT_DOPPLER_SHIFT = 32,
  PB_ULP_GNSS_SV_MEAS_BIT_CNO = 64,
  PB_ULP_GNSS_SV_MEAS_BIT_LOSS_OF_LOCK = 128,
  PBUlpGnssSvMeasurementValidFlags_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBUlpGnssSvMeasurementValidFlags_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBUlpGnssSvMeasurementValidFlags_IsValid(int value);
const PBUlpGnssSvMeasurementValidFlags PBUlpGnssSvMeasurementValidFlags_MIN = PB_ULP_GNSS_SV_MEAS_BIT_INVALID;
const PBUlpGnssSvMeasurementValidFlags PBUlpGnssSvMeasurementValidFlags_MAX = PB_ULP_GNSS_SV_MEAS_BIT_LOSS_OF_LOCK;
const int PBUlpGnssSvMeasurementValidFlags_ARRAYSIZE = PBUlpGnssSvMeasurementValidFlags_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBUlpGnssSvMeasurementValidFlags_descriptor();
inline const ::std::string& PBUlpGnssSvMeasurementValidFlags_Name(PBUlpGnssSvMeasurementValidFlags value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBUlpGnssSvMeasurementValidFlags_descriptor(), value);
}
inline bool PBUlpGnssSvMeasurementValidFlags_Parse(
    const ::std::string& name, PBUlpGnssSvMeasurementValidFlags* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBUlpGnssSvMeasurementValidFlags>(
    PBUlpGnssSvMeasurementValidFlags_descriptor(), name, value);
}
enum PBLocNavSolutionMask {
  PB_LOC_NAV_MASK_INVALID = 0,
  PB_LOC_NAV_MASK_SBAS_CORRECTION_IONO = 1,
  PB_LOC_NAV_MASK_SBAS_CORRECTION_FAST = 2,
  PB_LOC_NAV_MASK_SBAS_CORRECTION_LONG = 4,
  PB_LOC_NAV_MASK_SBAS_INTEGRITY = 8,
  PB_LOC_NAV_MASK_DGNSS_CORRECTION = 16,
  PB_LOC_NAV_MASK_RTK_CORRECTION = 32,
  PB_LOC_NAV_MASK_PPP_CORRECTION = 64,
  PB_LOC_NAV_MASK_RTK_FIXED_CORRECTION = 128,
  PBLocNavSolutionMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocNavSolutionMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocNavSolutionMask_IsValid(int value);
const PBLocNavSolutionMask PBLocNavSolutionMask_MIN = PB_LOC_NAV_MASK_INVALID;
const PBLocNavSolutionMask PBLocNavSolutionMask_MAX = PB_LOC_NAV_MASK_RTK_FIXED_CORRECTION;
const int PBLocNavSolutionMask_ARRAYSIZE = PBLocNavSolutionMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocNavSolutionMask_descriptor();
inline const ::std::string& PBLocNavSolutionMask_Name(PBLocNavSolutionMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocNavSolutionMask_descriptor(), value);
}
inline bool PBLocNavSolutionMask_Parse(
    const ::std::string& name, PBLocNavSolutionMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocNavSolutionMask>(
    PBLocNavSolutionMask_descriptor(), name, value);
}
enum PBLocSvInfoSource {
  PB_ULP_SVINFO_SOURCE_INVALID = 0,
  PB_ULP_SVINFO_IS_FROM_GNSS = 1,
  PB_ULP_SVINFO_IS_FROM_DR = 2,
  PBLocSvInfoSource_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocSvInfoSource_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocSvInfoSource_IsValid(int value);
const PBLocSvInfoSource PBLocSvInfoSource_MIN = PB_ULP_SVINFO_SOURCE_INVALID;
const PBLocSvInfoSource PBLocSvInfoSource_MAX = PB_ULP_SVINFO_IS_FROM_DR;
const int PBLocSvInfoSource_ARRAYSIZE = PBLocSvInfoSource_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocSvInfoSource_descriptor();
inline const ::std::string& PBLocSvInfoSource_Name(PBLocSvInfoSource value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocSvInfoSource_descriptor(), value);
}
inline bool PBLocSvInfoSource_Parse(
    const ::std::string& name, PBLocSvInfoSource* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocSvInfoSource>(
    PBLocSvInfoSource_descriptor(), name, value);
}
enum PBGnssEphAction {
  PB_GNSS_EPH_ACTION_UPDATE_SRC_UNKNOWN_V02 = 0,
  PB_GNSS_EPH_ACTION_UPDATE_SRC_OTA_V02 = 1,
  PB_GNSS_EPH_ACTION_UPDATE_SRC_NETWORK_V02 = 2,
  PB_GNSS_EPH_ACTION_UPDATE_MAX_V02 = 999,
  PB_GNSS_EPH_ACTION_DELETE_SRC_UNKNOWN_V02 = 1000,
  PB_GNSS_EPH_ACTION_DELETE_SRC_NETWORK_V02 = 1001,
  PB_GNSS_EPH_ACTION_DELETE_SRC_OTA_V02 = 1002,
  PB_GNSS_EPH_ACTION_DELETE_MAX_V02 = 1999,
  PBGnssEphAction_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssEphAction_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssEphAction_IsValid(int value);
const PBGnssEphAction PBGnssEphAction_MIN = PB_GNSS_EPH_ACTION_UPDATE_SRC_UNKNOWN_V02;
const PBGnssEphAction PBGnssEphAction_MAX = PB_GNSS_EPH_ACTION_DELETE_MAX_V02;
const int PBGnssEphAction_ARRAYSIZE = PBGnssEphAction_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssEphAction_descriptor();
inline const ::std::string& PBGnssEphAction_Name(PBGnssEphAction value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssEphAction_descriptor(), value);
}
inline bool PBGnssEphAction_Parse(
    const ::std::string& name, PBGnssEphAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssEphAction>(
    PBGnssEphAction_descriptor(), name, value);
}
enum PBGalEphSignalSource {
  PB_GAL_EPH_SIGNAL_SRC_UNKNOWN_V02 = 0,
  PB_GAL_EPH_SIGNAL_SRC_E1B_V02 = 1,
  PB_GAL_EPH_SIGNAL_SRC_E5A_V02 = 2,
  PB_GAL_EPH_SIGNAL_SRC_E5B_V02 = 3,
  PBGalEphSignalSource_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGalEphSignalSource_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGalEphSignalSource_IsValid(int value);
const PBGalEphSignalSource PBGalEphSignalSource_MIN = PB_GAL_EPH_SIGNAL_SRC_UNKNOWN_V02;
const PBGalEphSignalSource PBGalEphSignalSource_MAX = PB_GAL_EPH_SIGNAL_SRC_E5B_V02;
const int PBGalEphSignalSource_ARRAYSIZE = PBGalEphSignalSource_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGalEphSignalSource_descriptor();
inline const ::std::string& PBGalEphSignalSource_Name(PBGalEphSignalSource value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGalEphSignalSource_descriptor(), value);
}
inline bool PBGalEphSignalSource_Parse(
    const ::std::string& name, PBGalEphSignalSource* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGalEphSignalSource>(
    PBGalEphSignalSource_descriptor(), name, value);
}
enum PBGnssAdditionalSystemInfoMask {
  PB_GNSS_ADDITIONAL_SYSTEMINFO_INVALID = 0,
  PB_GNSS_ADDITIONAL_SYSTEMINFO_HAS_TAUC = 1,
  PB_GNSS_ADDITIONAL_SYSTEMINFO_HAS_LEAP_SEC = 2,
  PBGnssAdditionalSystemInfoMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssAdditionalSystemInfoMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssAdditionalSystemInfoMask_IsValid(int value);
const PBGnssAdditionalSystemInfoMask PBGnssAdditionalSystemInfoMask_MIN = PB_GNSS_ADDITIONAL_SYSTEMINFO_INVALID;
const PBGnssAdditionalSystemInfoMask PBGnssAdditionalSystemInfoMask_MAX = PB_GNSS_ADDITIONAL_SYSTEMINFO_HAS_LEAP_SEC;
const int PBGnssAdditionalSystemInfoMask_ARRAYSIZE = PBGnssAdditionalSystemInfoMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssAdditionalSystemInfoMask_descriptor();
inline const ::std::string& PBGnssAdditionalSystemInfoMask_Name(PBGnssAdditionalSystemInfoMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssAdditionalSystemInfoMask_descriptor(), value);
}
inline bool PBGnssAdditionalSystemInfoMask_Parse(
    const ::std::string& name, PBGnssAdditionalSystemInfoMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssAdditionalSystemInfoMask>(
    PBGnssAdditionalSystemInfoMask_descriptor(), name, value);
}
enum PBLocSvDgnssMeasStatusMask {
  PB_LOC_MASK_DGNSS_INVALID = 0,
  PB_LOC_MASK_DGNSS_EPOCH_TIME_VALID = 1,
  PB_LOC_MASK_DGNSS_MEAS_STATUS_PR_VALID = 2,
  PB_LOC_MASK_DGNSS_MEAS_STATUS_PRR_VALID = 4,
  PBLocSvDgnssMeasStatusMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocSvDgnssMeasStatusMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocSvDgnssMeasStatusMask_IsValid(int value);
const PBLocSvDgnssMeasStatusMask PBLocSvDgnssMeasStatusMask_MIN = PB_LOC_MASK_DGNSS_INVALID;
const PBLocSvDgnssMeasStatusMask PBLocSvDgnssMeasStatusMask_MAX = PB_LOC_MASK_DGNSS_MEAS_STATUS_PRR_VALID;
const int PBLocSvDgnssMeasStatusMask_ARRAYSIZE = PBLocSvDgnssMeasStatusMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocSvDgnssMeasStatusMask_descriptor();
inline const ::std::string& PBLocSvDgnssMeasStatusMask_Name(PBLocSvDgnssMeasStatusMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocSvDgnssMeasStatusMask_descriptor(), value);
}
inline bool PBLocSvDgnssMeasStatusMask_Parse(
    const ::std::string& name, PBLocSvDgnssMeasStatusMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocSvDgnssMeasStatusMask>(
    PBLocSvDgnssMeasStatusMask_descriptor(), name, value);
}
enum PBSvSearchStatus {
  PB_GNSS_SV_SRCH_STATUS_UNKNOWN = 0,
  PB_GNSS_SV_SRCH_STATUS_IDLE = 1,
  PB_GNSS_SV_SRCH_STATUS_SEARCH = 2,
  PB_GNSS_SV_SRCH_STATUS_TRACK = 3,
  PBSvSearchStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBSvSearchStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBSvSearchStatus_IsValid(int value);
const PBSvSearchStatus PBSvSearchStatus_MIN = PB_GNSS_SV_SRCH_STATUS_UNKNOWN;
const PBSvSearchStatus PBSvSearchStatus_MAX = PB_GNSS_SV_SRCH_STATUS_TRACK;
const int PBSvSearchStatus_ARRAYSIZE = PBSvSearchStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBSvSearchStatus_descriptor();
inline const ::std::string& PBSvSearchStatus_Name(PBSvSearchStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBSvSearchStatus_descriptor(), value);
}
inline bool PBSvSearchStatus_Parse(
    const ::std::string& name, PBSvSearchStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBSvSearchStatus>(
    PBSvSearchStatus_descriptor(), name, value);
}
enum PBSvInfoMask {
  PB_GNSS_SVINFO_MASK_UNKNOWN = 0,
  PB_GNSS_SVINFO_MASK_HAS_EPHEMERIS = 1,
  PB_GNSS_SVINFO_MASK_HAS_ALMANAC = 2,
  PBSvInfoMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBSvInfoMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBSvInfoMask_IsValid(int value);
const PBSvInfoMask PBSvInfoMask_MIN = PB_GNSS_SVINFO_MASK_UNKNOWN;
const PBSvInfoMask PBSvInfoMask_MAX = PB_GNSS_SVINFO_MASK_HAS_ALMANAC;
const int PBSvInfoMask_ARRAYSIZE = PBSvInfoMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBSvInfoMask_descriptor();
inline const ::std::string& PBSvInfoMask_Name(PBSvInfoMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBSvInfoMask_descriptor(), value);
}
inline bool PBSvInfoMask_Parse(
    const ::std::string& name, PBSvInfoMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBSvInfoMask>(
    PBSvInfoMask_descriptor(), name, value);
}
enum PBLocSourceofFreqEnumType {
  PB_GNSS_FREQ_SOURCE_INVALID = 0,
  PB_GNSS_FREQ_SOURCE_EXTERNAL = 1,
  PB_GNSS_FREQ_SOURCE_PE_CLK_REPORT = 2,
  PB_GNSS_FREQ_SOURCE_UNKNOWN = 3,
  PBLocSourceofFreqEnumType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocSourceofFreqEnumType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocSourceofFreqEnumType_IsValid(int value);
const PBLocSourceofFreqEnumType PBLocSourceofFreqEnumType_MIN = PB_GNSS_FREQ_SOURCE_INVALID;
const PBLocSourceofFreqEnumType PBLocSourceofFreqEnumType_MAX = PB_GNSS_FREQ_SOURCE_UNKNOWN;
const int PBLocSourceofFreqEnumType_ARRAYSIZE = PBLocSourceofFreqEnumType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocSourceofFreqEnumType_descriptor();
inline const ::std::string& PBLocSourceofFreqEnumType_Name(PBLocSourceofFreqEnumType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocSourceofFreqEnumType_descriptor(), value);
}
inline bool PBLocSourceofFreqEnumType_Parse(
    const ::std::string& name, PBLocSourceofFreqEnumType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocSourceofFreqEnumType>(
    PBLocSourceofFreqEnumType_descriptor(), name, value);
}
enum PBLocInterSystemBiasValidMaskType {
  PB_GNSS_SYS_TIME_UNKNOWN = 0,
  PB_GNSS_SYS_TIME_BIAS_VALID = 1,
  PB_GNSS_SYS_TIME_BIAS_UNC_VALID = 2,
  PBLocInterSystemBiasValidMaskType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocInterSystemBiasValidMaskType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocInterSystemBiasValidMaskType_IsValid(int value);
const PBLocInterSystemBiasValidMaskType PBLocInterSystemBiasValidMaskType_MIN = PB_GNSS_SYS_TIME_UNKNOWN;
const PBLocInterSystemBiasValidMaskType PBLocInterSystemBiasValidMaskType_MAX = PB_GNSS_SYS_TIME_BIAS_UNC_VALID;
const int PBLocInterSystemBiasValidMaskType_ARRAYSIZE = PBLocInterSystemBiasValidMaskType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocInterSystemBiasValidMaskType_descriptor();
inline const ::std::string& PBLocInterSystemBiasValidMaskType_Name(PBLocInterSystemBiasValidMaskType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocInterSystemBiasValidMaskType_descriptor(), value);
}
inline bool PBLocInterSystemBiasValidMaskType_Parse(
    const ::std::string& name, PBLocInterSystemBiasValidMaskType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocInterSystemBiasValidMaskType>(
    PBLocInterSystemBiasValidMaskType_descriptor(), name, value);
}
enum PBGnssSystemTimeStructTypeFlags {
  PB_GNSS_SYSTEM_TIME_FLAG_INVALID = 0,
  PB_GNSS_SYSTEM_TIME_WEEK_VALID = 1,
  PB_GNSS_SYSTEM_TIME_WEEK_MS_VALID = 2,
  PB_GNSS_SYSTEM_CLK_TIME_BIAS_VALID = 4,
  PB_GNSS_SYSTEM_CLK_TIME_BIAS_UNC_VALID = 8,
  PB_GNSS_SYSTEM_REF_FCOUNT_VALID = 16,
  PB_GNSS_SYSTEM_NUM_CLOCK_RESETS_VALID = 32,
  PBGnssSystemTimeStructTypeFlags_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssSystemTimeStructTypeFlags_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssSystemTimeStructTypeFlags_IsValid(int value);
const PBGnssSystemTimeStructTypeFlags PBGnssSystemTimeStructTypeFlags_MIN = PB_GNSS_SYSTEM_TIME_FLAG_INVALID;
const PBGnssSystemTimeStructTypeFlags PBGnssSystemTimeStructTypeFlags_MAX = PB_GNSS_SYSTEM_NUM_CLOCK_RESETS_VALID;
const int PBGnssSystemTimeStructTypeFlags_ARRAYSIZE = PBGnssSystemTimeStructTypeFlags_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssSystemTimeStructTypeFlags_descriptor();
inline const ::std::string& PBGnssSystemTimeStructTypeFlags_Name(PBGnssSystemTimeStructTypeFlags value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssSystemTimeStructTypeFlags_descriptor(), value);
}
inline bool PBGnssSystemTimeStructTypeFlags_Parse(
    const ::std::string& name, PBGnssSystemTimeStructTypeFlags* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssSystemTimeStructTypeFlags>(
    PBGnssSystemTimeStructTypeFlags_descriptor(), name, value);
}
enum PBGnssGloTimeInfoBits {
  PB_GNSS_CLO_TIME_UNKNOWN = 0,
  PB_GNSS_CLO_DAYS_VALID = 1,
  PB_GNSS_GLO_MSEC_VALID = 2,
  PB_GNSS_GLO_CLK_TIME_BIAS_VALID = 4,
  PB_GNSS_GLO_CLK_TIME_BIAS_UNC_VALID = 8,
  PB_GNSS_GLO_REF_FCOUNT_VALID = 16,
  PB_GNSS_GLO_NUM_CLOCK_RESETS_VALID = 32,
  PB_GNSS_GLO_FOUR_YEAR_VALID = 64,
  PBGnssGloTimeInfoBits_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssGloTimeInfoBits_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssGloTimeInfoBits_IsValid(int value);
const PBGnssGloTimeInfoBits PBGnssGloTimeInfoBits_MIN = PB_GNSS_CLO_TIME_UNKNOWN;
const PBGnssGloTimeInfoBits PBGnssGloTimeInfoBits_MAX = PB_GNSS_GLO_FOUR_YEAR_VALID;
const int PBGnssGloTimeInfoBits_ARRAYSIZE = PBGnssGloTimeInfoBits_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssGloTimeInfoBits_descriptor();
inline const ::std::string& PBGnssGloTimeInfoBits_Name(PBGnssGloTimeInfoBits value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssGloTimeInfoBits_descriptor(), value);
}
inline bool PBGnssGloTimeInfoBits_Parse(
    const ::std::string& name, PBGnssGloTimeInfoBits* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssGloTimeInfoBits>(
    PBGnssGloTimeInfoBits_descriptor(), name, value);
}
enum PBLeverArmTypeMask {
  PB_LEVER_ARM_TYPE_INVALID = 0,
  PB_LEVER_ARM_TYPE_GNSS_TO_VRP_BIT = 1,
  PB_LEVER_ARM_TYPE_DR_IMU_TO_GNSS_BIT = 2,
  PB_LEVER_ARM_TYPE_VEPP_IMU_TO_GNSS_BIT = 4,
  PBLeverArmTypeMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLeverArmTypeMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLeverArmTypeMask_IsValid(int value);
const PBLeverArmTypeMask PBLeverArmTypeMask_MIN = PB_LEVER_ARM_TYPE_INVALID;
const PBLeverArmTypeMask PBLeverArmTypeMask_MAX = PB_LEVER_ARM_TYPE_VEPP_IMU_TO_GNSS_BIT;
const int PBLeverArmTypeMask_ARRAYSIZE = PBLeverArmTypeMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLeverArmTypeMask_descriptor();
inline const ::std::string& PBLeverArmTypeMask_Name(PBLeverArmTypeMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLeverArmTypeMask_descriptor(), value);
}
inline bool PBLeverArmTypeMask_Parse(
    const ::std::string& name, PBLeverArmTypeMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLeverArmTypeMask>(
    PBLeverArmTypeMask_descriptor(), name, value);
}
enum PBQDgnssDataType {
  PB_QDGNSS_DATATYPE_INVALID = 0,
  PB_QDGNSS_REFERENCE_STATION_MSG_ID = 1,
  PB_QDGNSS_OBSERVATIONS_MSG_ID = 2,
  PB_QDGNSS_GLONASS_BIAS_MSG_ID = 3,
  PB_QDGNSS_SSR_ORBIT_CORRECTIONS_MSG_ID = 4,
  PB_QDGNSS_SSR_CLOCK_CORRECTIONS_MSG_ID = 5,
  PB_QDGNSS_SSR_HIGHRATE_CLOCK_CORRECTIONS_MSG_ID = 6,
  PB_QDGNSS_SSR_CODE_BIAS_MSG_ID = 7,
  PB_QDGNSS_SSR_USER_RANGE_ACCURACY_MSG_ID = 8,
  PB_QDGNSS_SSR_ORBIT_AND_CLOCK_MSG_ID = 9,
  PB_QDGNSS_GPS_EPHEMERIS_MSG_ID = 10,
  PB_QDGNSS_GLONASS_EPHEMERIS_MSG_ID = 11,
  PB_QDGNSS_GALILEO_EPHEMERIS_MSG_ID = 12,
  PB_QDGNSS_BDS_EPHEMERIS_MSG_ID = 13,
  PB_QDGNSS_QZSS_EPHEMERIS_MSG_ID = 14,
  PB_QDGNSS_SBAS_EPHEMERIS_MSG_ID = 15,
  PBQDgnssDataType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBQDgnssDataType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBQDgnssDataType_IsValid(int value);
const PBQDgnssDataType PBQDgnssDataType_MIN = PB_QDGNSS_DATATYPE_INVALID;
const PBQDgnssDataType PBQDgnssDataType_MAX = PB_QDGNSS_SBAS_EPHEMERIS_MSG_ID;
const int PBQDgnssDataType_ARRAYSIZE = PBQDgnssDataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBQDgnssDataType_descriptor();
inline const ::std::string& PBQDgnssDataType_Name(PBQDgnssDataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBQDgnssDataType_descriptor(), value);
}
inline bool PBQDgnssDataType_Parse(
    const ::std::string& name, PBQDgnssDataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBQDgnssDataType>(
    PBQDgnssDataType_descriptor(), name, value);
}
enum PBDGnssConstellationIdentifier {
  PB_DGNSS_CONSTELLATION_IDENTIFIER_GPS = 0,
  PB_DGNSS_CONSTELLATION_IDENTIFIER_SBAS = 1,
  PB_DGNSS_CONSTELLATION_IDENTIFIER_QZSS = 2,
  PB_DGNSS_CONSTELLATION_IDENTIFIER_GALILEO = 3,
  PB_DGNSS_CONSTELLATION_IDENTIFIER_GLONASS = 4,
  PB_DGNSS_CONSTELLATION_IDENTIFIER_BDS = 5,
  PBDGnssConstellationIdentifier_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBDGnssConstellationIdentifier_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBDGnssConstellationIdentifier_IsValid(int value);
const PBDGnssConstellationIdentifier PBDGnssConstellationIdentifier_MIN = PB_DGNSS_CONSTELLATION_IDENTIFIER_GPS;
const PBDGnssConstellationIdentifier PBDGnssConstellationIdentifier_MAX = PB_DGNSS_CONSTELLATION_IDENTIFIER_BDS;
const int PBDGnssConstellationIdentifier_ARRAYSIZE = PBDGnssConstellationIdentifier_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBDGnssConstellationIdentifier_descriptor();
inline const ::std::string& PBDGnssConstellationIdentifier_Name(PBDGnssConstellationIdentifier value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBDGnssConstellationIdentifier_descriptor(), value);
}
inline bool PBDGnssConstellationIdentifier_Parse(
    const ::std::string& name, PBDGnssConstellationIdentifier* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBDGnssConstellationIdentifier>(
    PBDGnssConstellationIdentifier_descriptor(), name, value);
}
enum PBDGnssConstellationBitMask {
  PB_DGNSS_CONSTELLATION_BIT_INVALID = 0,
  PB_DGNSS_CONSTELLATION_GPS_BIT = 1,
  PB_DGNSS_CONSTELLATION_SBAS_BIT = 2,
  PB_DGNSS_CONSTELLATION_QZSS_BIT = 4,
  PB_DGNSS_CONSTELLATION_GALILEO_BIT = 8,
  PB_DGNSS_CONSTELLATION_GLONASS_BIT = 16,
  PB_DGNSS_CONSTELLATION_BDS_BIT = 32,
  PBDGnssConstellationBitMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBDGnssConstellationBitMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBDGnssConstellationBitMask_IsValid(int value);
const PBDGnssConstellationBitMask PBDGnssConstellationBitMask_MIN = PB_DGNSS_CONSTELLATION_BIT_INVALID;
const PBDGnssConstellationBitMask PBDGnssConstellationBitMask_MAX = PB_DGNSS_CONSTELLATION_BDS_BIT;
const int PBDGnssConstellationBitMask_ARRAYSIZE = PBDGnssConstellationBitMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBDGnssConstellationBitMask_descriptor();
inline const ::std::string& PBDGnssConstellationBitMask_Name(PBDGnssConstellationBitMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBDGnssConstellationBitMask_descriptor(), value);
}
inline bool PBDGnssConstellationBitMask_Parse(
    const ::std::string& name, PBDGnssConstellationBitMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBDGnssConstellationBitMask>(
    PBDGnssConstellationBitMask_descriptor(), name, value);
}
enum PBDGnssGpsSignalIdentifier {
  PB_DGNSS_SIGNAL_GPS_L1CA = 0,
  PB_DGNSS_SIGNAL_GPS_L1P = 1,
  PB_DGNSS_SIGNAL_GPS_L1Z = 2,
  PB_DGNSS_SIGNAL_GPS_L1N = 3,
  PB_DGNSS_SIGNAL_GPS_L2CA = 4,
  PB_DGNSS_SIGNAL_GPS_L2P = 5,
  PB_DGNSS_SIGNAL_GPS_L2Z = 6,
  PB_DGNSS_SIGNAL_GPS_L2CM = 7,
  PB_DGNSS_SIGNAL_GPS_L2CL = 8,
  PB_DGNSS_SIGNAL_GPS_L2CML = 9,
  PB_DGNSS_SIGNAL_GPS_L2D = 10,
  PB_DGNSS_SIGNAL_GPS_L2N = 11,
  PB_DGNSS_SIGNAL_GPS_L5I = 12,
  PB_DGNSS_SIGNAL_GPS_L5Q = 13,
  PB_DGNSS_SIGNAL_GPS_L5IQ = 14,
  PB_DGNSS_SIGNAL_GPS_L1CD = 15,
  PB_DGNSS_SIGNAL_GPS_L1CP = 16,
  PB_DGNSS_SIGNAL_GPS_L1CDP = 17,
  PBDGnssGpsSignalIdentifier_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBDGnssGpsSignalIdentifier_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBDGnssGpsSignalIdentifier_IsValid(int value);
const PBDGnssGpsSignalIdentifier PBDGnssGpsSignalIdentifier_MIN = PB_DGNSS_SIGNAL_GPS_L1CA;
const PBDGnssGpsSignalIdentifier PBDGnssGpsSignalIdentifier_MAX = PB_DGNSS_SIGNAL_GPS_L1CDP;
const int PBDGnssGpsSignalIdentifier_ARRAYSIZE = PBDGnssGpsSignalIdentifier_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBDGnssGpsSignalIdentifier_descriptor();
inline const ::std::string& PBDGnssGpsSignalIdentifier_Name(PBDGnssGpsSignalIdentifier value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBDGnssGpsSignalIdentifier_descriptor(), value);
}
inline bool PBDGnssGpsSignalIdentifier_Parse(
    const ::std::string& name, PBDGnssGpsSignalIdentifier* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBDGnssGpsSignalIdentifier>(
    PBDGnssGpsSignalIdentifier_descriptor(), name, value);
}
enum PBDGnssGpsSignalBitMask {
  PB_DGNSS_SIGNAL_BIT_GPS_INVALID = 0,
  PB_DGNSS_SIGNAL_GPS_L1CA_BIT = 1,
  PB_DGNSS_SIGNAL_GPS_L1P_BIT = 2,
  PB_DGNSS_SIGNAL_GPS_L1Z_BIT = 4,
  PB_DGNSS_SIGNAL_GPS_L1N_BIT = 8,
  PB_DGNSS_SIGNAL_GPS_L2CA_BIT = 16,
  PB_DGNSS_SIGNAL_GPS_L2P_BIT = 32,
  PB_DGNSS_SIGNAL_GPS_L2Z_BIT = 64,
  PB_DGNSS_SIGNAL_GPS_L2CM_BIT = 128,
  PB_DGNSS_SIGNAL_GPS_L2CL_BIT = 256,
  PB_DGNSS_SIGNAL_GPS_L2CML_BIT = 512,
  PB_DGNSS_SIGNAL_GPS_L2D_BIT = 1024,
  PB_DGNSS_SIGNAL_GPS_L2N_BIT = 2048,
  PB_DGNSS_SIGNAL_GPS_L5I_BIT = 4096,
  PB_DGNSS_SIGNAL_GPS_L5Q_BIT = 8192,
  PB_DGNSS_SIGNAL_GPS_L5IQ_BIT = 16384,
  PB_DGNSS_SIGNAL_GPS_L1CD_BIT = 32768,
  PB_DGNSS_SIGNAL_GPS_L1CP_BIT = 65536,
  PB_DGNSS_SIGNAL_GPS_L1CDP_BIT = 131072,
  PBDGnssGpsSignalBitMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBDGnssGpsSignalBitMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBDGnssGpsSignalBitMask_IsValid(int value);
const PBDGnssGpsSignalBitMask PBDGnssGpsSignalBitMask_MIN = PB_DGNSS_SIGNAL_BIT_GPS_INVALID;
const PBDGnssGpsSignalBitMask PBDGnssGpsSignalBitMask_MAX = PB_DGNSS_SIGNAL_GPS_L1CDP_BIT;
const int PBDGnssGpsSignalBitMask_ARRAYSIZE = PBDGnssGpsSignalBitMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBDGnssGpsSignalBitMask_descriptor();
inline const ::std::string& PBDGnssGpsSignalBitMask_Name(PBDGnssGpsSignalBitMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBDGnssGpsSignalBitMask_descriptor(), value);
}
inline bool PBDGnssGpsSignalBitMask_Parse(
    const ::std::string& name, PBDGnssGpsSignalBitMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBDGnssGpsSignalBitMask>(
    PBDGnssGpsSignalBitMask_descriptor(), name, value);
}
enum PBDGnssGlonassSignalIdentifier {
  PB_DGNSS_SIGNAL_GLONASS_G1CA = 0,
  PB_DGNSS_SIGNAL_GLONASS_G1P = 1,
  PB_DGNSS_SIGNAL_GLONASS_G2CA = 2,
  PB_DGNSS_SIGNAL_GLONASS_G2P = 3,
  PB_DGNSS_SIGNAL_GLONASS_G3I = 4,
  PB_DGNSS_SIGNAL_GLONASS_G3Q = 5,
  PB_DGNSS_SIGNAL_GLONASS_G3IQ = 6,
  PBDGnssGlonassSignalIdentifier_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBDGnssGlonassSignalIdentifier_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBDGnssGlonassSignalIdentifier_IsValid(int value);
const PBDGnssGlonassSignalIdentifier PBDGnssGlonassSignalIdentifier_MIN = PB_DGNSS_SIGNAL_GLONASS_G1CA;
const PBDGnssGlonassSignalIdentifier PBDGnssGlonassSignalIdentifier_MAX = PB_DGNSS_SIGNAL_GLONASS_G3IQ;
const int PBDGnssGlonassSignalIdentifier_ARRAYSIZE = PBDGnssGlonassSignalIdentifier_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBDGnssGlonassSignalIdentifier_descriptor();
inline const ::std::string& PBDGnssGlonassSignalIdentifier_Name(PBDGnssGlonassSignalIdentifier value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBDGnssGlonassSignalIdentifier_descriptor(), value);
}
inline bool PBDGnssGlonassSignalIdentifier_Parse(
    const ::std::string& name, PBDGnssGlonassSignalIdentifier* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBDGnssGlonassSignalIdentifier>(
    PBDGnssGlonassSignalIdentifier_descriptor(), name, value);
}
enum PBDGnssGlonassSignalBitMask {
  PB_DGNSS_SIGNAL_GLONASS_INVALID = 0,
  PB_DGNSS_SIGNAL_GLONASS_G1CA_BIT = 1,
  PB_DGNSS_SIGNAL_GLONASS_G1P_BIT = 2,
  PB_DGNSS_SIGNAL_GLONASS_G2CA_BIT = 4,
  PB_DGNSS_SIGNAL_GLONASS_G2P_BIT = 8,
  PB_DGNSS_SIGNAL_GLONASS_G3I_BIT = 16,
  PB_DGNSS_SIGNAL_GLONASS_G3Q_BIT = 32,
  PB_DGNSS_SIGNAL_GLONASS_G3IQ_BIT = 64,
  PBDGnssGlonassSignalBitMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBDGnssGlonassSignalBitMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBDGnssGlonassSignalBitMask_IsValid(int value);
const PBDGnssGlonassSignalBitMask PBDGnssGlonassSignalBitMask_MIN = PB_DGNSS_SIGNAL_GLONASS_INVALID;
const PBDGnssGlonassSignalBitMask PBDGnssGlonassSignalBitMask_MAX = PB_DGNSS_SIGNAL_GLONASS_G3IQ_BIT;
const int PBDGnssGlonassSignalBitMask_ARRAYSIZE = PBDGnssGlonassSignalBitMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBDGnssGlonassSignalBitMask_descriptor();
inline const ::std::string& PBDGnssGlonassSignalBitMask_Name(PBDGnssGlonassSignalBitMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBDGnssGlonassSignalBitMask_descriptor(), value);
}
inline bool PBDGnssGlonassSignalBitMask_Parse(
    const ::std::string& name, PBDGnssGlonassSignalBitMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBDGnssGlonassSignalBitMask>(
    PBDGnssGlonassSignalBitMask_descriptor(), name, value);
}
enum PBDGnssGalileoSignalIdentifier {
  PB_DGNSS_SIGNAL_GALILEO_E1C = 0,
  PB_DGNSS_SIGNAL_GALILEO_E1A = 1,
  PB_DGNSS_SIGNAL_GALILEO_E1B = 2,
  PB_DGNSS_SIGNAL_GALILEO_E1BC = 3,
  PB_DGNSS_SIGNAL_GALILEO_E1ABC = 4,
  PB_DGNSS_SIGNAL_GALILEO_E6C = 5,
  PB_DGNSS_SIGNAL_GALILEO_E6A = 6,
  PB_DGNSS_SIGNAL_GALILEO_E6B = 7,
  PB_DGNSS_SIGNAL_GALILEO_E6BC = 8,
  PB_DGNSS_SIGNAL_GALILEO_E6ABC = 9,
  PB_DGNSS_SIGNAL_GALILEO_E5BI = 10,
  PB_DGNSS_SIGNAL_GALILEO_E5BQ = 11,
  PB_DGNSS_SIGNAL_GALILEO_E5BIQ = 12,
  PB_DGNSS_SIGNAL_GALILEO_E5ABI = 13,
  PB_DGNSS_SIGNAL_GALILEO_E5ABQ = 14,
  PB_DGNSS_SIGNAL_GALILEO_E5ABIQ = 15,
  PB_DGNSS_SIGNAL_GALILEO_E5AI = 16,
  PB_DGNSS_SIGNAL_GALILEO_E5AQ = 17,
  PB_DGNSS_SIGNAL_GALILEO_E5AIQ = 18,
  PBDGnssGalileoSignalIdentifier_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBDGnssGalileoSignalIdentifier_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBDGnssGalileoSignalIdentifier_IsValid(int value);
const PBDGnssGalileoSignalIdentifier PBDGnssGalileoSignalIdentifier_MIN = PB_DGNSS_SIGNAL_GALILEO_E1C;
const PBDGnssGalileoSignalIdentifier PBDGnssGalileoSignalIdentifier_MAX = PB_DGNSS_SIGNAL_GALILEO_E5AIQ;
const int PBDGnssGalileoSignalIdentifier_ARRAYSIZE = PBDGnssGalileoSignalIdentifier_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBDGnssGalileoSignalIdentifier_descriptor();
inline const ::std::string& PBDGnssGalileoSignalIdentifier_Name(PBDGnssGalileoSignalIdentifier value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBDGnssGalileoSignalIdentifier_descriptor(), value);
}
inline bool PBDGnssGalileoSignalIdentifier_Parse(
    const ::std::string& name, PBDGnssGalileoSignalIdentifier* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBDGnssGalileoSignalIdentifier>(
    PBDGnssGalileoSignalIdentifier_descriptor(), name, value);
}
enum PBDGnssGalileoSignalBitMask {
  PB_DGNSS_SIGNAL_GALILEO_INVALID = 0,
  PB_DGNSS_SIGNAL_GALILEO_E1C_BIT = 1,
  PB_DGNSS_SIGNAL_GALILEO_E1A_BIT = 2,
  PB_DGNSS_SIGNAL_GALILEO_E1B_BIT = 4,
  PB_DGNSS_SIGNAL_GALILEO_E1BC_BIT = 8,
  PB_DGNSS_SIGNAL_GALILEO_E1ABC_BIT = 16,
  PB_DGNSS_SIGNAL_GALILEO_E6C_BIT = 32,
  PB_DGNSS_SIGNAL_GALILEO_E6A_BIT = 64,
  PB_DGNSS_SIGNAL_GALILEO_E6B_BIT = 128,
  PB_DGNSS_SIGNAL_GALILEO_E6BC_BIT = 256,
  PB_DGNSS_SIGNAL_GALILEO_E6ABC_BIT = 512,
  PB_DGNSS_SIGNAL_GALILEO_E5BI_BIT = 1024,
  PB_DGNSS_SIGNAL_GALILEO_E5BQ_BIT = 2048,
  PB_DGNSS_SIGNAL_GALILEO_E5BIQ_BIT = 4096,
  PB_DGNSS_SIGNAL_GALILEO_E5ABI_BIT = 8192,
  PB_DGNSS_SIGNAL_GALILEO_E5ABQ_BIT = 16384,
  PB_DGNSS_SIGNAL_GALILEO_E5ABIQ_BIT = 32768,
  PB_DGNSS_SIGNAL_GALILEO_E5AI_BIT = 65536,
  PB_DGNSS_SIGNAL_GALILEO_E5AQ_BIT = 131072,
  PB_DGNSS_SIGNAL_GALILEO_E5AIQ_BIT = 262144,
  PBDGnssGalileoSignalBitMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBDGnssGalileoSignalBitMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBDGnssGalileoSignalBitMask_IsValid(int value);
const PBDGnssGalileoSignalBitMask PBDGnssGalileoSignalBitMask_MIN = PB_DGNSS_SIGNAL_GALILEO_INVALID;
const PBDGnssGalileoSignalBitMask PBDGnssGalileoSignalBitMask_MAX = PB_DGNSS_SIGNAL_GALILEO_E5AIQ_BIT;
const int PBDGnssGalileoSignalBitMask_ARRAYSIZE = PBDGnssGalileoSignalBitMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBDGnssGalileoSignalBitMask_descriptor();
inline const ::std::string& PBDGnssGalileoSignalBitMask_Name(PBDGnssGalileoSignalBitMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBDGnssGalileoSignalBitMask_descriptor(), value);
}
inline bool PBDGnssGalileoSignalBitMask_Parse(
    const ::std::string& name, PBDGnssGalileoSignalBitMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBDGnssGalileoSignalBitMask>(
    PBDGnssGalileoSignalBitMask_descriptor(), name, value);
}
enum PBDGnssQzssSignalIdentifier {
  PB_DGNSS_SIGNAL_QZSS_L1CA = 0,
  PB_DGNSS_SIGNAL_QZSS_LEXS = 1,
  PB_DGNSS_SIGNAL_QZSS_LEXL = 2,
  PB_DGNSS_SIGNAL_QZSS_LEXSL = 3,
  PB_DGNSS_SIGNAL_QZSS_L2CM = 4,
  PB_DGNSS_SIGNAL_QZSS_L2CL = 5,
  PB_DGNSS_SIGNAL_QZSS_L2CML = 6,
  PB_DGNSS_SIGNAL_QZSS_L5I = 7,
  PB_DGNSS_SIGNAL_QZSS_L5Q = 8,
  PB_DGNSS_SIGNAL_QZSS_L5IQ = 9,
  PB_DGNSS_SIGNAL_QZSS_L1CD = 10,
  PB_DGNSS_SIGNAL_QZSS_L1CP = 11,
  PB_DGNSS_SIGNAL_QZSS_L1CDP = 12,
  PB_DGNSS_SIGNAL_QZSS_L1S = 13,
  PBDGnssQzssSignalIdentifier_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBDGnssQzssSignalIdentifier_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBDGnssQzssSignalIdentifier_IsValid(int value);
const PBDGnssQzssSignalIdentifier PBDGnssQzssSignalIdentifier_MIN = PB_DGNSS_SIGNAL_QZSS_L1CA;
const PBDGnssQzssSignalIdentifier PBDGnssQzssSignalIdentifier_MAX = PB_DGNSS_SIGNAL_QZSS_L1S;
const int PBDGnssQzssSignalIdentifier_ARRAYSIZE = PBDGnssQzssSignalIdentifier_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBDGnssQzssSignalIdentifier_descriptor();
inline const ::std::string& PBDGnssQzssSignalIdentifier_Name(PBDGnssQzssSignalIdentifier value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBDGnssQzssSignalIdentifier_descriptor(), value);
}
inline bool PBDGnssQzssSignalIdentifier_Parse(
    const ::std::string& name, PBDGnssQzssSignalIdentifier* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBDGnssQzssSignalIdentifier>(
    PBDGnssQzssSignalIdentifier_descriptor(), name, value);
}
enum PBDGnssQzssSignalBitMask {
  PB_DGNSS_SIGNAL_QZSS_INVALID = 0,
  PB_DGNSS_SIGNAL_QZSS_L1CA_BIT = 1,
  PB_DGNSS_SIGNAL_QZSS_LEXS_BIT = 2,
  PB_DGNSS_SIGNAL_QZSS_LEXL_BIT = 4,
  PB_DGNSS_SIGNAL_QZSS_LEXSL_BIT = 8,
  PB_DGNSS_SIGNAL_QZSS_L2CM_BIT = 16,
  PB_DGNSS_SIGNAL_QZSS_L2CL_BIT = 32,
  PB_DGNSS_SIGNAL_QZSS_L2CML_BIT = 64,
  PB_DGNSS_SIGNAL_QZSS_L5I_BIT = 128,
  PB_DGNSS_SIGNAL_QZSS_L5Q_BIT = 256,
  PB_DGNSS_SIGNAL_QZSS_L5IQ_BIT = 512,
  PB_DGNSS_SIGNAL_QZSS_L1CD_BIT = 1024,
  PB_DGNSS_SIGNAL_QZSS_L1CP_BIT = 2048,
  PB_DGNSS_SIGNAL_QZSS_L1CDP_BIT = 4096,
  PB_DGNSS_SIGNAL_QZSS_L1S_BIT = 8192,
  PBDGnssQzssSignalBitMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBDGnssQzssSignalBitMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBDGnssQzssSignalBitMask_IsValid(int value);
const PBDGnssQzssSignalBitMask PBDGnssQzssSignalBitMask_MIN = PB_DGNSS_SIGNAL_QZSS_INVALID;
const PBDGnssQzssSignalBitMask PBDGnssQzssSignalBitMask_MAX = PB_DGNSS_SIGNAL_QZSS_L1S_BIT;
const int PBDGnssQzssSignalBitMask_ARRAYSIZE = PBDGnssQzssSignalBitMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBDGnssQzssSignalBitMask_descriptor();
inline const ::std::string& PBDGnssQzssSignalBitMask_Name(PBDGnssQzssSignalBitMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBDGnssQzssSignalBitMask_descriptor(), value);
}
inline bool PBDGnssQzssSignalBitMask_Parse(
    const ::std::string& name, PBDGnssQzssSignalBitMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBDGnssQzssSignalBitMask>(
    PBDGnssQzssSignalBitMask_descriptor(), name, value);
}
enum PBDGnssBdsSignalIdentifier {
  PB_DGNSS_SIGNAL_BDS_B12I = 0,
  PB_DGNSS_SIGNAL_BDS_B12Q = 1,
  PB_DGNSS_SIGNAL_BDS_B12IQ = 2,
  PB_DGNSS_SIGNAL_BDS_B3I = 3,
  PB_DGNSS_SIGNAL_BDS_B3Q = 4,
  PB_DGNSS_SIGNAL_BDS_B3IQ = 5,
  PB_DGNSS_SIGNAL_BDS_B3A = 6,
  PB_DGNSS_SIGNAL_BDS_B2I = 7,
  PB_DGNSS_SIGNAL_BDS_B2Q = 8,
  PB_DGNSS_SIGNAL_BDS_B2IQ = 9,
  PB_DGNSS_SIGNAL_BDS_B2AD = 10,
  PB_DGNSS_SIGNAL_BDS_B2AP = 11,
  PB_DGNSS_SIGNAL_BDS_B2ADP = 12,
  PB_DGNSS_SIGNAL_BDS_B1CD = 13,
  PB_DGNSS_SIGNAL_BDS_B1CP = 14,
  PB_DGNSS_SIGNAL_BDS_B1CDP = 15,
  PB_DGNSS_SIGNAL_BDS_B1A = 16,
  PB_DGNSS_SIGNAL_BDS_B1N = 17,
  PB_DGNSS_SIGNAL_BDS_B2BD = 18,
  PB_DGNSS_SIGNAL_BDS_B2BP = 19,
  PB_DGNSS_SIGNAL_BDS_B2BDP = 20,
  PB_DGNSS_SIGNAL_BDS_B2D = 21,
  PB_DGNSS_SIGNAL_BDS_B2P = 22,
  PB_DGNSS_SIGNAL_BDS_B2DP = 23,
  PBDGnssBdsSignalIdentifier_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBDGnssBdsSignalIdentifier_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBDGnssBdsSignalIdentifier_IsValid(int value);
const PBDGnssBdsSignalIdentifier PBDGnssBdsSignalIdentifier_MIN = PB_DGNSS_SIGNAL_BDS_B12I;
const PBDGnssBdsSignalIdentifier PBDGnssBdsSignalIdentifier_MAX = PB_DGNSS_SIGNAL_BDS_B2DP;
const int PBDGnssBdsSignalIdentifier_ARRAYSIZE = PBDGnssBdsSignalIdentifier_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBDGnssBdsSignalIdentifier_descriptor();
inline const ::std::string& PBDGnssBdsSignalIdentifier_Name(PBDGnssBdsSignalIdentifier value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBDGnssBdsSignalIdentifier_descriptor(), value);
}
inline bool PBDGnssBdsSignalIdentifier_Parse(
    const ::std::string& name, PBDGnssBdsSignalIdentifier* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBDGnssBdsSignalIdentifier>(
    PBDGnssBdsSignalIdentifier_descriptor(), name, value);
}
enum PBDGnssBdsSignalBitMask {
  PB_DGNSS_SIGNAL_BDS_INVALID = 0,
  PB_DGNSS_SIGNAL_BDS_B12I_BIT = 1,
  PB_DGNSS_SIGNAL_BDS_B12Q_BIT = 2,
  PB_DGNSS_SIGNAL_BDS_B12IQ_BIT = 4,
  PB_DGNSS_SIGNAL_BDS_B3I_BIT = 8,
  PB_DGNSS_SIGNAL_BDS_B3Q_BIT = 16,
  PB_DGNSS_SIGNAL_BDS_B3IQ_BIT = 32,
  PB_DGNSS_SIGNAL_BDS_B3A_BIT = 64,
  PB_DGNSS_SIGNAL_BDS_B2I_BIT = 128,
  PB_DGNSS_SIGNAL_BDS_B2Q_BIT = 256,
  PB_DGNSS_SIGNAL_BDS_B2IQ_BIT = 512,
  PB_DGNSS_SIGNAL_BDS_B2AD_BIT = 1024,
  PB_DGNSS_SIGNAL_BDS_B2AP_BIT = 2048,
  PB_DGNSS_SIGNAL_BDS_B2ADP_BIT = 4096,
  PB_DGNSS_SIGNAL_BDS_B1CD_BIT = 8192,
  PB_DGNSS_SIGNAL_BDS_B1CP_BIT = 16384,
  PB_DGNSS_SIGNAL_BDS_B1CDP_BIT = 32768,
  PB_DGNSS_SIGNAL_BDS_B1A_BIT = 65536,
  PB_DGNSS_SIGNAL_BDS_B1N_BIT = 131072,
  PB_DGNSS_SIGNAL_BDS_B2BD_BIT = 262144,
  PB_DGNSS_SIGNAL_BDS_B2BP_BIT = 524288,
  PB_DGNSS_SIGNAL_BDS_B2BDP_BIT = 1048576,
  PB_DGNSS_SIGNAL_BDS_B2D_BIT = 2097152,
  PB_DGNSS_SIGNAL_BDS_B2P_BIT = 4194304,
  PB_DGNSS_SIGNAL_BDS_B2DP_BIT = 8388608,
  PBDGnssBdsSignalBitMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBDGnssBdsSignalBitMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBDGnssBdsSignalBitMask_IsValid(int value);
const PBDGnssBdsSignalBitMask PBDGnssBdsSignalBitMask_MIN = PB_DGNSS_SIGNAL_BDS_INVALID;
const PBDGnssBdsSignalBitMask PBDGnssBdsSignalBitMask_MAX = PB_DGNSS_SIGNAL_BDS_B2DP_BIT;
const int PBDGnssBdsSignalBitMask_ARRAYSIZE = PBDGnssBdsSignalBitMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBDGnssBdsSignalBitMask_descriptor();
inline const ::std::string& PBDGnssBdsSignalBitMask_Name(PBDGnssBdsSignalBitMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBDGnssBdsSignalBitMask_descriptor(), value);
}
inline bool PBDGnssBdsSignalBitMask_Parse(
    const ::std::string& name, PBDGnssBdsSignalBitMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBDGnssBdsSignalBitMask>(
    PBDGnssBdsSignalBitMask_descriptor(), name, value);
}
enum PBDGnssSbasSignalIdentifier {
  PB_DGNSS_SIGNAL_SBAS_L1CA = 0,
  PB_DGNSS_SIGNAL_SBAS_L5I = 1,
  PB_DGNSS_SIGNAL_SBAS_L5Q = 2,
  PB_DGNSS_SIGNAL_SBAS_L5IQ = 3,
  PBDGnssSbasSignalIdentifier_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBDGnssSbasSignalIdentifier_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBDGnssSbasSignalIdentifier_IsValid(int value);
const PBDGnssSbasSignalIdentifier PBDGnssSbasSignalIdentifier_MIN = PB_DGNSS_SIGNAL_SBAS_L1CA;
const PBDGnssSbasSignalIdentifier PBDGnssSbasSignalIdentifier_MAX = PB_DGNSS_SIGNAL_SBAS_L5IQ;
const int PBDGnssSbasSignalIdentifier_ARRAYSIZE = PBDGnssSbasSignalIdentifier_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBDGnssSbasSignalIdentifier_descriptor();
inline const ::std::string& PBDGnssSbasSignalIdentifier_Name(PBDGnssSbasSignalIdentifier value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBDGnssSbasSignalIdentifier_descriptor(), value);
}
inline bool PBDGnssSbasSignalIdentifier_Parse(
    const ::std::string& name, PBDGnssSbasSignalIdentifier* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBDGnssSbasSignalIdentifier>(
    PBDGnssSbasSignalIdentifier_descriptor(), name, value);
}
enum PBDGnssSbasSignalBitMask {
  PB_DGNSS_SIGNAL_SBAS_INVALID = 0,
  PB_DGNSS_SIGNAL_SBAS_L1CA_BIT = 1,
  PB_DGNSS_SIGNAL_SBAS_L5I_BIT = 2,
  PB_DGNSS_SIGNAL_SBAS_L5Q_BIT = 4,
  PB_DGNSS_SIGNAL_SBAS_L5IQ_BIT = 8,
  PBDGnssSbasSignalBitMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBDGnssSbasSignalBitMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBDGnssSbasSignalBitMask_IsValid(int value);
const PBDGnssSbasSignalBitMask PBDGnssSbasSignalBitMask_MIN = PB_DGNSS_SIGNAL_SBAS_INVALID;
const PBDGnssSbasSignalBitMask PBDGnssSbasSignalBitMask_MAX = PB_DGNSS_SIGNAL_SBAS_L5IQ_BIT;
const int PBDGnssSbasSignalBitMask_ARRAYSIZE = PBDGnssSbasSignalBitMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBDGnssSbasSignalBitMask_descriptor();
inline const ::std::string& PBDGnssSbasSignalBitMask_Name(PBDGnssSbasSignalBitMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBDGnssSbasSignalBitMask_descriptor(), value);
}
inline bool PBDGnssSbasSignalBitMask_Parse(
    const ::std::string& name, PBDGnssSbasSignalBitMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBDGnssSbasSignalBitMask>(
    PBDGnssSbasSignalBitMask_descriptor(), name, value);
}
enum PBDGnssSignalStatusFlags {
  PB_DGNSS_SIGNAL_STATUS_INVALID = 0,
  PB_MEASUREMENT_COMPLETE = 1,
  PB_PSEUDORANGE_VALID = 2,
  PB_CARRIER_PHASE_VALID = 4,
  PB_PHASE_RANGE_RATE_VALID = 8,
  PB_HALF_CYCLE_AMBIGUITY_VALID = 16,
  PB_HALF_CYCLE_AMBIGUITY_UNKNOWN = 32,
  PBDGnssSignalStatusFlags_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBDGnssSignalStatusFlags_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBDGnssSignalStatusFlags_IsValid(int value);
const PBDGnssSignalStatusFlags PBDGnssSignalStatusFlags_MIN = PB_DGNSS_SIGNAL_STATUS_INVALID;
const PBDGnssSignalStatusFlags PBDGnssSignalStatusFlags_MAX = PB_HALF_CYCLE_AMBIGUITY_UNKNOWN;
const int PBDGnssSignalStatusFlags_ARRAYSIZE = PBDGnssSignalStatusFlags_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBDGnssSignalStatusFlags_descriptor();
inline const ::std::string& PBDGnssSignalStatusFlags_Name(PBDGnssSignalStatusFlags value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBDGnssSignalStatusFlags_descriptor(), value);
}
inline bool PBDGnssSignalStatusFlags_Parse(
    const ::std::string& name, PBDGnssSignalStatusFlags* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBDGnssSignalStatusFlags>(
    PBDGnssSignalStatusFlags_descriptor(), name, value);
}
enum PBExtendedSatelliteInformation {
  PB_DGNSS_GLONASS_FREQUENCY_CHANNEL_NUMBER_0 = 0,
  PB_DGNSS_GLONASS_FREQUENCY_CHANNEL_NUMBER_MINUS_7 = -7,
  PB_DGNSS_GLONASS_FREQUENCY_CHANNEL_NUMBER_MINUS_6 = -6,
  PB_DGNSS_GLONASS_FREQUENCY_CHANNEL_NUMBER_MINUS_5 = -5,
  PB_DGNSS_GLONASS_FREQUENCY_CHANNEL_NUMBER_MINUS_4 = -4,
  PB_DGNSS_GLONASS_FREQUENCY_CHANNEL_NUMBER_MINUS_3 = -3,
  PB_DGNSS_GLONASS_FREQUENCY_CHANNEL_NUMBER_MINUS_2 = -2,
  PB_DGNSS_GLONASS_FREQUENCY_CHANNEL_NUMBER_MINUS_1 = -1,
  PB_DGNSS_GLONASS_FREQUENCY_CHANNEL_NUMBER_1 = 1,
  PB_DGNSS_GLONASS_FREQUENCY_CHANNEL_NUMBER_2 = 2,
  PB_DGNSS_GLONASS_FREQUENCY_CHANNEL_NUMBER_3 = 3,
  PB_DGNSS_GLONASS_FREQUENCY_CHANNEL_NUMBER_4 = 4,
  PB_DGNSS_GLONASS_FREQUENCY_CHANNEL_NUMBER_5 = 5,
  PB_DGNSS_GLONASS_FREQUENCY_CHANNEL_NUMBER_6 = 6,
  PB_DGNSS_GLONASS_FREQUENCY_CHANNEL_RESERVED = 14,
  PB_DGNSS_GLONASS_FREQUENCY_CHANNEL_UNKNOWN = 15,
  PBExtendedSatelliteInformation_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBExtendedSatelliteInformation_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBExtendedSatelliteInformation_IsValid(int value);
const PBExtendedSatelliteInformation PBExtendedSatelliteInformation_MIN = PB_DGNSS_GLONASS_FREQUENCY_CHANNEL_NUMBER_MINUS_7;
const PBExtendedSatelliteInformation PBExtendedSatelliteInformation_MAX = PB_DGNSS_GLONASS_FREQUENCY_CHANNEL_UNKNOWN;
const int PBExtendedSatelliteInformation_ARRAYSIZE = PBExtendedSatelliteInformation_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBExtendedSatelliteInformation_descriptor();
inline const ::std::string& PBExtendedSatelliteInformation_Name(PBExtendedSatelliteInformation value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBExtendedSatelliteInformation_descriptor(), value);
}
inline bool PBExtendedSatelliteInformation_Parse(
    const ::std::string& name, PBExtendedSatelliteInformation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBExtendedSatelliteInformation>(
    PBExtendedSatelliteInformation_descriptor(), name, value);
}
// ===================================================================

class PBLocPosMode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBLocPosMode) */ {
 public:
  PBLocPosMode();
  virtual ~PBLocPosMode();

  PBLocPosMode(const PBLocPosMode& from);

  inline PBLocPosMode& operator=(const PBLocPosMode& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLocPosMode& default_instance();

  static inline const PBLocPosMode* internal_default_instance() {
    return reinterpret_cast<const PBLocPosMode*>(
               &_PBLocPosMode_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PBLocPosMode* other);

  // implements Message ----------------------------------------------

  inline PBLocPosMode* New() const PROTOBUF_FINAL { return New(NULL); }

  PBLocPosMode* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBLocPosMode& from);
  void MergeFrom(const PBLocPosMode& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBLocPosMode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string credentials = 7;
  void clear_credentials();
  static const int kCredentialsFieldNumber = 7;
  const ::std::string& credentials() const;
  void set_credentials(const ::std::string& value);
  #if LANG_CXX11
  void set_credentials(::std::string&& value);
  #endif
  void set_credentials(const char* value);
  void set_credentials(const char* value, size_t size);
  ::std::string* mutable_credentials();
  ::std::string* release_credentials();
  void set_allocated_credentials(::std::string* credentials);

  // string provider = 8;
  void clear_provider();
  static const int kProviderFieldNumber = 8;
  const ::std::string& provider() const;
  void set_provider(const ::std::string& value);
  #if LANG_CXX11
  void set_provider(::std::string&& value);
  #endif
  void set_provider(const char* value);
  void set_provider(const char* value, size_t size);
  ::std::string* mutable_provider();
  ::std::string* release_provider();
  void set_allocated_provider(::std::string* provider);

  // .PBLocPositionMode mode = 1;
  void clear_mode();
  static const int kModeFieldNumber = 1;
  ::PBLocPositionMode mode() const;
  void set_mode(::PBLocPositionMode value);

  // .PBLocGpsPositionRecurrence recurrence = 2;
  void clear_recurrence();
  static const int kRecurrenceFieldNumber = 2;
  ::PBLocGpsPositionRecurrence recurrence() const;
  void set_recurrence(::PBLocGpsPositionRecurrence value);

  // uint32 min_interval = 3;
  void clear_min_interval();
  static const int kMinIntervalFieldNumber = 3;
  ::google::protobuf::uint32 min_interval() const;
  void set_min_interval(::google::protobuf::uint32 value);

  // uint32 preferred_accuracy = 4;
  void clear_preferred_accuracy();
  static const int kPreferredAccuracyFieldNumber = 4;
  ::google::protobuf::uint32 preferred_accuracy() const;
  void set_preferred_accuracy(::google::protobuf::uint32 value);

  // uint32 preferred_time = 5;
  void clear_preferred_time();
  static const int kPreferredTimeFieldNumber = 5;
  ::google::protobuf::uint32 preferred_time() const;
  void set_preferred_time(::google::protobuf::uint32 value);

  // bool share_position = 6;
  void clear_share_position();
  static const int kSharePositionFieldNumber = 6;
  bool share_position() const;
  void set_share_position(bool value);

  // .PBGnssPowerMode powerMode = 9;
  void clear_powermode();
  static const int kPowerModeFieldNumber = 9;
  ::PBGnssPowerMode powermode() const;
  void set_powermode(::PBGnssPowerMode value);

  // uint32 timeBetweenMeasurements = 10;
  void clear_timebetweenmeasurements();
  static const int kTimeBetweenMeasurementsFieldNumber = 10;
  ::google::protobuf::uint32 timebetweenmeasurements() const;
  void set_timebetweenmeasurements(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBLocPosMode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr credentials_;
  ::google::protobuf::internal::ArenaStringPtr provider_;
  int mode_;
  int recurrence_;
  ::google::protobuf::uint32 min_interval_;
  ::google::protobuf::uint32 preferred_accuracy_;
  ::google::protobuf::uint32 preferred_time_;
  bool share_position_;
  int powermode_;
  ::google::protobuf::uint32 timebetweenmeasurements_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBUlpLocation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBUlpLocation) */ {
 public:
  PBUlpLocation();
  virtual ~PBUlpLocation();

  PBUlpLocation(const PBUlpLocation& from);

  inline PBUlpLocation& operator=(const PBUlpLocation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBUlpLocation& default_instance();

  static inline const PBUlpLocation* internal_default_instance() {
    return reinterpret_cast<const PBUlpLocation*>(
               &_PBUlpLocation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PBUlpLocation* other);

  // implements Message ----------------------------------------------

  inline PBUlpLocation* New() const PROTOBUF_FINAL { return New(NULL); }

  PBUlpLocation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBUlpLocation& from);
  void MergeFrom(const PBUlpLocation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBUlpLocation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBLocGpsLocation gpsLocation = 1;
  bool has_gpslocation() const;
  void clear_gpslocation();
  static const int kGpsLocationFieldNumber = 1;
  const ::PBLocGpsLocation& gpslocation() const;
  ::PBLocGpsLocation* mutable_gpslocation();
  ::PBLocGpsLocation* release_gpslocation();
  void set_allocated_gpslocation(::PBLocGpsLocation* gpslocation);

  // uint32 position_source = 2;
  void clear_position_source();
  static const int kPositionSourceFieldNumber = 2;
  ::google::protobuf::uint32 position_source() const;
  void set_position_source(::google::protobuf::uint32 value);

  // uint32 tech_mask = 3;
  void clear_tech_mask();
  static const int kTechMaskFieldNumber = 3;
  ::google::protobuf::uint32 tech_mask() const;
  void set_tech_mask(::google::protobuf::uint32 value);

  // bool unpropagatedPosition = 4;
  void clear_unpropagatedposition();
  static const int kUnpropagatedPositionFieldNumber = 4;
  bool unpropagatedposition() const;
  void set_unpropagatedposition(bool value);

  // @@protoc_insertion_point(class_scope:PBUlpLocation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBLocGpsLocation* gpslocation_;
  ::google::protobuf::uint32 position_source_;
  ::google::protobuf::uint32 tech_mask_;
  bool unpropagatedposition_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBLocGpsLocation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBLocGpsLocation) */ {
 public:
  PBLocGpsLocation();
  virtual ~PBLocGpsLocation();

  PBLocGpsLocation(const PBLocGpsLocation& from);

  inline PBLocGpsLocation& operator=(const PBLocGpsLocation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLocGpsLocation& default_instance();

  static inline const PBLocGpsLocation* internal_default_instance() {
    return reinterpret_cast<const PBLocGpsLocation*>(
               &_PBLocGpsLocation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(PBLocGpsLocation* other);

  // implements Message ----------------------------------------------

  inline PBLocGpsLocation* New() const PROTOBUF_FINAL { return New(NULL); }

  PBLocGpsLocation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBLocGpsLocation& from);
  void MergeFrom(const PBLocGpsLocation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBLocGpsLocation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 flags = 1;
  void clear_flags();
  static const int kFlagsFieldNumber = 1;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // uint32 spoof_mask = 2;
  void clear_spoof_mask();
  static const int kSpoofMaskFieldNumber = 2;
  ::google::protobuf::uint32 spoof_mask() const;
  void set_spoof_mask(::google::protobuf::uint32 value);

  // float latitude = 3;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 3;
  float latitude() const;
  void set_latitude(float value);

  // float longitude = 4;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 4;
  float longitude() const;
  void set_longitude(float value);

  // float altitude = 5;
  void clear_altitude();
  static const int kAltitudeFieldNumber = 5;
  float altitude() const;
  void set_altitude(float value);

  // float speed = 6;
  void clear_speed();
  static const int kSpeedFieldNumber = 6;
  float speed() const;
  void set_speed(float value);

  // float bearing = 7;
  void clear_bearing();
  static const int kBearingFieldNumber = 7;
  float bearing() const;
  void set_bearing(float value);

  // float accuracy = 8;
  void clear_accuracy();
  static const int kAccuracyFieldNumber = 8;
  float accuracy() const;
  void set_accuracy(float value);

  // uint64 timestamp = 10;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 10;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // float vertUncertainity = 9;
  void clear_vertuncertainity();
  static const int kVertUncertainityFieldNumber = 9;
  float vertuncertainity() const;
  void set_vertuncertainity(float value);

  // @@protoc_insertion_point(class_scope:PBLocGpsLocation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::uint32 spoof_mask_;
  float latitude_;
  float longitude_;
  float altitude_;
  float speed_;
  float bearing_;
  float accuracy_;
  ::google::protobuf::uint64 timestamp_;
  float vertuncertainity_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssSv : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssSv) */ {
 public:
  PBGnssSv();
  virtual ~PBGnssSv();

  PBGnssSv(const PBGnssSv& from);

  inline PBGnssSv& operator=(const PBGnssSv& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssSv& default_instance();

  static inline const PBGnssSv* internal_default_instance() {
    return reinterpret_cast<const PBGnssSv*>(
               &_PBGnssSv_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(PBGnssSv* other);

  // implements Message ----------------------------------------------

  inline PBGnssSv* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssSv* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssSv& from);
  void MergeFrom(const PBGnssSv& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssSv* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 svId = 1;
  void clear_svid();
  static const int kSvIdFieldNumber = 1;
  ::google::protobuf::uint32 svid() const;
  void set_svid(::google::protobuf::uint32 value);

  // .PBGnssSvType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::PBGnssSvType type() const;
  void set_type(::PBGnssSvType value);

  // float cN0Dbhz = 3;
  void clear_cn0dbhz();
  static const int kCN0DbhzFieldNumber = 3;
  float cn0dbhz() const;
  void set_cn0dbhz(float value);

  // float elevation = 4;
  void clear_elevation();
  static const int kElevationFieldNumber = 4;
  float elevation() const;
  void set_elevation(float value);

  // float azimuth = 5;
  void clear_azimuth();
  static const int kAzimuthFieldNumber = 5;
  float azimuth() const;
  void set_azimuth(float value);

  // uint32 gnssSvOptionsMask = 6;
  void clear_gnsssvoptionsmask();
  static const int kGnssSvOptionsMaskFieldNumber = 6;
  ::google::protobuf::uint32 gnsssvoptionsmask() const;
  void set_gnsssvoptionsmask(::google::protobuf::uint32 value);

  // float carrierFrequencyHz = 7;
  void clear_carrierfrequencyhz();
  static const int kCarrierFrequencyHzFieldNumber = 7;
  float carrierfrequencyhz() const;
  void set_carrierfrequencyhz(float value);

  // uint32 gnssSignalTypeMask = 8;
  void clear_gnsssignaltypemask();
  static const int kGnssSignalTypeMaskFieldNumber = 8;
  ::google::protobuf::uint32 gnsssignaltypemask() const;
  void set_gnsssignaltypemask(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBGnssSv)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 svid_;
  int type_;
  float cn0dbhz_;
  float elevation_;
  float azimuth_;
  ::google::protobuf::uint32 gnsssvoptionsmask_;
  float carrierfrequencyhz_;
  ::google::protobuf::uint32 gnsssignaltypemask_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssSvNotification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssSvNotification) */ {
 public:
  PBGnssSvNotification();
  virtual ~PBGnssSvNotification();

  PBGnssSvNotification(const PBGnssSvNotification& from);

  inline PBGnssSvNotification& operator=(const PBGnssSvNotification& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssSvNotification& default_instance();

  static inline const PBGnssSvNotification* internal_default_instance() {
    return reinterpret_cast<const PBGnssSvNotification*>(
               &_PBGnssSvNotification_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(PBGnssSvNotification* other);

  // implements Message ----------------------------------------------

  inline PBGnssSvNotification* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssSvNotification* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssSvNotification& from);
  void MergeFrom(const PBGnssSvNotification& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssSvNotification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PBGnssSv gnssSvs = 2;
  int gnsssvs_size() const;
  void clear_gnsssvs();
  static const int kGnssSvsFieldNumber = 2;
  const ::PBGnssSv& gnsssvs(int index) const;
  ::PBGnssSv* mutable_gnsssvs(int index);
  ::PBGnssSv* add_gnsssvs();
  ::google::protobuf::RepeatedPtrField< ::PBGnssSv >*
      mutable_gnsssvs();
  const ::google::protobuf::RepeatedPtrField< ::PBGnssSv >&
      gnsssvs() const;

  // bool gnssSignalTypeMaskValid = 1;
  void clear_gnsssignaltypemaskvalid();
  static const int kGnssSignalTypeMaskValidFieldNumber = 1;
  bool gnsssignaltypemaskvalid() const;
  void set_gnsssignaltypemaskvalid(bool value);

  // @@protoc_insertion_point(class_scope:PBGnssSvNotification)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::PBGnssSv > gnsssvs_;
  bool gnsssignaltypemaskvalid_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGpsLocationExtended : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGpsLocationExtended) */ {
 public:
  PBGpsLocationExtended();
  virtual ~PBGpsLocationExtended();

  PBGpsLocationExtended(const PBGpsLocationExtended& from);

  inline PBGpsLocationExtended& operator=(const PBGpsLocationExtended& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGpsLocationExtended& default_instance();

  static inline const PBGpsLocationExtended* internal_default_instance() {
    return reinterpret_cast<const PBGpsLocationExtended*>(
               &_PBGpsLocationExtended_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(PBGpsLocationExtended* other);

  // implements Message ----------------------------------------------

  inline PBGpsLocationExtended* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGpsLocationExtended* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGpsLocationExtended& from);
  void MergeFrom(const PBGpsLocationExtended& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGpsLocationExtended* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 referenceStation = 38;
  int referencestation_size() const;
  void clear_referencestation();
  static const int kReferenceStationFieldNumber = 38;
  ::google::protobuf::uint32 referencestation(int index) const;
  void set_referencestation(int index, ::google::protobuf::uint32 value);
  void add_referencestation(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      referencestation() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_referencestation();

  // repeated .PBGpsMeasUsageInfo measUsageInfo = 40;
  int measusageinfo_size() const;
  void clear_measusageinfo();
  static const int kMeasUsageInfoFieldNumber = 40;
  const ::PBGpsMeasUsageInfo& measusageinfo(int index) const;
  ::PBGpsMeasUsageInfo* mutable_measusageinfo(int index);
  ::PBGpsMeasUsageInfo* add_measusageinfo();
  ::google::protobuf::RepeatedPtrField< ::PBGpsMeasUsageInfo >*
      mutable_measusageinfo();
  const ::google::protobuf::RepeatedPtrField< ::PBGpsMeasUsageInfo >&
      measusageinfo() const;

  // .PBApTimeStampStructType timeStamp = 15;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimeStampFieldNumber = 15;
  const ::PBApTimeStampStructType& timestamp() const;
  ::PBApTimeStampStructType* mutable_timestamp();
  ::PBApTimeStampStructType* release_timestamp();
  void set_allocated_timestamp(::PBApTimeStampStructType* timestamp);

  // .PBGnssSvUsedInPosition gnss_sv_used_ids = 16;
  bool has_gnss_sv_used_ids() const;
  void clear_gnss_sv_used_ids();
  static const int kGnssSvUsedIdsFieldNumber = 16;
  const ::PBGnssSvUsedInPosition& gnss_sv_used_ids() const;
  ::PBGnssSvUsedInPosition* mutable_gnss_sv_used_ids();
  ::PBGnssSvUsedInPosition* release_gnss_sv_used_ids();
  void set_allocated_gnss_sv_used_ids(::PBGnssSvUsedInPosition* gnss_sv_used_ids);

  // .PBGnssSvMbUsedInPosition gnss_mb_sv_used_ids = 17;
  bool has_gnss_mb_sv_used_ids() const;
  void clear_gnss_mb_sv_used_ids();
  static const int kGnssMbSvUsedIdsFieldNumber = 17;
  const ::PBGnssSvMbUsedInPosition& gnss_mb_sv_used_ids() const;
  ::PBGnssSvMbUsedInPosition* mutable_gnss_mb_sv_used_ids();
  ::PBGnssSvMbUsedInPosition* release_gnss_mb_sv_used_ids();
  void set_allocated_gnss_mb_sv_used_ids(::PBGnssSvMbUsedInPosition* gnss_mb_sv_used_ids);

  // .PBGnssLocationPositionDynamics bodyFrameData = 21;
  bool has_bodyframedata() const;
  void clear_bodyframedata();
  static const int kBodyFrameDataFieldNumber = 21;
  const ::PBGnssLocationPositionDynamics& bodyframedata() const;
  ::PBGnssLocationPositionDynamics* mutable_bodyframedata();
  ::PBGnssLocationPositionDynamics* release_bodyframedata();
  void set_allocated_bodyframedata(::PBGnssLocationPositionDynamics* bodyframedata);

  // .PBGPSTimeStruct gpsTime = 22;
  bool has_gpstime() const;
  void clear_gpstime();
  static const int kGpsTimeFieldNumber = 22;
  const ::PBGPSTimeStruct& gpstime() const;
  ::PBGPSTimeStruct* mutable_gpstime();
  ::PBGPSTimeStruct* release_gpstime();
  void set_allocated_gpstime(::PBGPSTimeStruct* gpstime);

  // .PBGnssSystemTime gnssSystemTime = 23;
  bool has_gnsssystemtime() const;
  void clear_gnsssystemtime();
  static const int kGnssSystemTimeFieldNumber = 23;
  const ::PBGnssSystemTime& gnsssystemtime() const;
  ::PBGnssSystemTime* mutable_gnsssystemtime();
  ::PBGnssSystemTime* release_gnsssystemtime();
  void set_allocated_gnsssystemtime(::PBGnssSystemTime* gnsssystemtime);

  // .PBLocExtDOP extDOP = 24;
  bool has_extdop() const;
  void clear_extdop();
  static const int kExtDOPFieldNumber = 24;
  const ::PBLocExtDOP& extdop() const;
  ::PBLocExtDOP* mutable_extdop();
  ::PBLocExtDOP* release_extdop();
  void set_allocated_extdop(::PBLocExtDOP* extdop);

  // uint64 flags = 1;
  void clear_flags();
  static const int kFlagsFieldNumber = 1;
  ::google::protobuf::uint64 flags() const;
  void set_flags(::google::protobuf::uint64 value);

  // float altitudeMeanSeaLevel = 2;
  void clear_altitudemeansealevel();
  static const int kAltitudeMeanSeaLevelFieldNumber = 2;
  float altitudemeansealevel() const;
  void set_altitudemeansealevel(float value);

  // float pdop = 3;
  void clear_pdop();
  static const int kPdopFieldNumber = 3;
  float pdop() const;
  void set_pdop(float value);

  // float hdop = 4;
  void clear_hdop();
  static const int kHdopFieldNumber = 4;
  float hdop() const;
  void set_hdop(float value);

  // float vdop = 5;
  void clear_vdop();
  static const int kVdopFieldNumber = 5;
  float vdop() const;
  void set_vdop(float value);

  // float magneticDeviation = 6;
  void clear_magneticdeviation();
  static const int kMagneticDeviationFieldNumber = 6;
  float magneticdeviation() const;
  void set_magneticdeviation(float value);

  // float vert_unc = 7;
  void clear_vert_unc();
  static const int kVertUncFieldNumber = 7;
  float vert_unc() const;
  void set_vert_unc(float value);

  // float speed_unc = 8;
  void clear_speed_unc();
  static const int kSpeedUncFieldNumber = 8;
  float speed_unc() const;
  void set_speed_unc(float value);

  // float bearing_unc = 9;
  void clear_bearing_unc();
  static const int kBearingUncFieldNumber = 9;
  float bearing_unc() const;
  void set_bearing_unc(float value);

  // .PBLocReliability horizontal_reliability = 10;
  void clear_horizontal_reliability();
  static const int kHorizontalReliabilityFieldNumber = 10;
  ::PBLocReliability horizontal_reliability() const;
  void set_horizontal_reliability(::PBLocReliability value);

  // .PBLocReliability vertical_reliability = 11;
  void clear_vertical_reliability();
  static const int kVerticalReliabilityFieldNumber = 11;
  ::PBLocReliability vertical_reliability() const;
  void set_vertical_reliability(::PBLocReliability value);

  // float horUncEllipseSemiMajor = 12;
  void clear_horuncellipsesemimajor();
  static const int kHorUncEllipseSemiMajorFieldNumber = 12;
  float horuncellipsesemimajor() const;
  void set_horuncellipsesemimajor(float value);

  // float horUncEllipseSemiMinor = 13;
  void clear_horuncellipsesemiminor();
  static const int kHorUncEllipseSemiMinorFieldNumber = 13;
  float horuncellipsesemiminor() const;
  void set_horuncellipsesemiminor(float value);

  // float horUncEllipseOrientAzimuth = 14;
  void clear_horuncellipseorientazimuth();
  static const int kHorUncEllipseOrientAzimuthFieldNumber = 14;
  float horuncellipseorientazimuth() const;
  void set_horuncellipseorientazimuth(float value);

  // uint32 navSolutionMask = 18;
  void clear_navsolutionmask();
  static const int kNavSolutionMaskFieldNumber = 18;
  ::google::protobuf::uint32 navsolutionmask() const;
  void set_navsolutionmask(::google::protobuf::uint32 value);

  // uint32 tech_mask = 19;
  void clear_tech_mask();
  static const int kTechMaskFieldNumber = 19;
  ::google::protobuf::uint32 tech_mask() const;
  void set_tech_mask(::google::protobuf::uint32 value);

  // .PBLocSvInfoSource sv_source = 20;
  void clear_sv_source();
  static const int kSvSourceFieldNumber = 20;
  ::PBLocSvInfoSource sv_source() const;
  void set_sv_source(::PBLocSvInfoSource value);

  // float northStdDeviation = 25;
  void clear_northstddeviation();
  static const int kNorthStdDeviationFieldNumber = 25;
  float northstddeviation() const;
  void set_northstddeviation(float value);

  // float eastStdDeviation = 26;
  void clear_eaststddeviation();
  static const int kEastStdDeviationFieldNumber = 26;
  float eaststddeviation() const;
  void set_eaststddeviation(float value);

  // float northVelocity = 27;
  void clear_northvelocity();
  static const int kNorthVelocityFieldNumber = 27;
  float northvelocity() const;
  void set_northvelocity(float value);

  // float eastVelocity = 28;
  void clear_eastvelocity();
  static const int kEastVelocityFieldNumber = 28;
  float eastvelocity() const;
  void set_eastvelocity(float value);

  // float upVelocity = 29;
  void clear_upvelocity();
  static const int kUpVelocityFieldNumber = 29;
  float upvelocity() const;
  void set_upvelocity(float value);

  // float northVelocityStdDeviation = 30;
  void clear_northvelocitystddeviation();
  static const int kNorthVelocityStdDeviationFieldNumber = 30;
  float northvelocitystddeviation() const;
  void set_northvelocitystddeviation(float value);

  // float eastVelocityStdDeviation = 31;
  void clear_eastvelocitystddeviation();
  static const int kEastVelocityStdDeviationFieldNumber = 31;
  float eastvelocitystddeviation() const;
  void set_eastvelocitystddeviation(float value);

  // float upVelocityStdDeviation = 32;
  void clear_upvelocitystddeviation();
  static const int kUpVelocityStdDeviationFieldNumber = 32;
  float upvelocitystddeviation() const;
  void set_upvelocitystddeviation(float value);

  // float clockbiasMeter = 33;
  void clear_clockbiasmeter();
  static const int kClockbiasMeterFieldNumber = 33;
  float clockbiasmeter() const;
  void set_clockbiasmeter(float value);

  // float clockBiasStdDeviationMeter = 34;
  void clear_clockbiasstddeviationmeter();
  static const int kClockBiasStdDeviationMeterFieldNumber = 34;
  float clockbiasstddeviationmeter() const;
  void set_clockbiasstddeviationmeter(float value);

  // float clockDrift = 35;
  void clear_clockdrift();
  static const int kClockDriftFieldNumber = 35;
  float clockdrift() const;
  void set_clockdrift(float value);

  // float clockDriftStdDeviation = 36;
  void clear_clockdriftstddeviation();
  static const int kClockDriftStdDeviationFieldNumber = 36;
  float clockdriftstddeviation() const;
  void set_clockdriftstddeviation(float value);

  // uint32 numValidRefStations = 37;
  void clear_numvalidrefstations();
  static const int kNumValidRefStationsFieldNumber = 37;
  ::google::protobuf::uint32 numvalidrefstations() const;
  void set_numvalidrefstations(::google::protobuf::uint32 value);

  // uint32 numOfMeasReceived = 39;
  void clear_numofmeasreceived();
  static const int kNumOfMeasReceivedFieldNumber = 39;
  ::google::protobuf::uint32 numofmeasreceived() const;
  void set_numofmeasreceived(::google::protobuf::uint32 value);

  // uint32 leapSeconds = 41;
  void clear_leapseconds();
  static const int kLeapSecondsFieldNumber = 41;
  ::google::protobuf::uint32 leapseconds() const;
  void set_leapseconds(::google::protobuf::uint32 value);

  // float timeUncMs = 42;
  void clear_timeuncms();
  static const int kTimeUncMsFieldNumber = 42;
  float timeuncms() const;
  void set_timeuncms(float value);

  // float headingRateDeg = 43;
  void clear_headingratedeg();
  static const int kHeadingRateDegFieldNumber = 43;
  float headingratedeg() const;
  void set_headingratedeg(float value);

  // uint32 calibrationConfidence = 44;
  void clear_calibrationconfidence();
  static const int kCalibrationConfidenceFieldNumber = 44;
  ::google::protobuf::uint32 calibrationconfidence() const;
  void set_calibrationconfidence(::google::protobuf::uint32 value);

  // uint32 calibrationStatus = 45;
  void clear_calibrationstatus();
  static const int kCalibrationStatusFieldNumber = 45;
  ::google::protobuf::uint32 calibrationstatus() const;
  void set_calibrationstatus(::google::protobuf::uint32 value);

  // .PBLocOutputEngineType locOutputEngType = 46;
  void clear_locoutputengtype();
  static const int kLocOutputEngTypeFieldNumber = 46;
  ::PBLocOutputEngineType locoutputengtype() const;
  void set_locoutputengtype(::PBLocOutputEngineType value);

  // uint32 locOutputEngMask = 47;
  void clear_locoutputengmask();
  static const int kLocOutputEngMaskFieldNumber = 47;
  ::google::protobuf::uint32 locoutputengmask() const;
  void set_locoutputengmask(::google::protobuf::uint32 value);

  // .PBLocDgnssCorrectionSourceType dgnssCorrectionSourceType = 48;
  void clear_dgnsscorrectionsourcetype();
  static const int kDgnssCorrectionSourceTypeFieldNumber = 48;
  ::PBLocDgnssCorrectionSourceType dgnsscorrectionsourcetype() const;
  void set_dgnsscorrectionsourcetype(::PBLocDgnssCorrectionSourceType value);

  // uint32 dgnssCorrectionSourceID = 49;
  void clear_dgnsscorrectionsourceid();
  static const int kDgnssCorrectionSourceIDFieldNumber = 49;
  ::google::protobuf::uint32 dgnsscorrectionsourceid() const;
  void set_dgnsscorrectionsourceid(::google::protobuf::uint32 value);

  // uint32 dgnssConstellationUsageMask = 50;
  void clear_dgnssconstellationusagemask();
  static const int kDgnssConstellationUsageMaskFieldNumber = 50;
  ::google::protobuf::uint32 dgnssconstellationusagemask() const;
  void set_dgnssconstellationusagemask(::google::protobuf::uint32 value);

  // uint32 dgnssRefStationId = 51;
  void clear_dgnssrefstationid();
  static const int kDgnssRefStationIdFieldNumber = 51;
  ::google::protobuf::uint32 dgnssrefstationid() const;
  void set_dgnssrefstationid(::google::protobuf::uint32 value);

  // uint32 dgnssDataAgeMsec = 52;
  void clear_dgnssdataagemsec();
  static const int kDgnssDataAgeMsecFieldNumber = 52;
  ::google::protobuf::uint32 dgnssdataagemsec() const;
  void set_dgnssdataagemsec(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBGpsLocationExtended)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > referencestation_;
  mutable int _referencestation_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::PBGpsMeasUsageInfo > measusageinfo_;
  ::PBApTimeStampStructType* timestamp_;
  ::PBGnssSvUsedInPosition* gnss_sv_used_ids_;
  ::PBGnssSvMbUsedInPosition* gnss_mb_sv_used_ids_;
  ::PBGnssLocationPositionDynamics* bodyframedata_;
  ::PBGPSTimeStruct* gpstime_;
  ::PBGnssSystemTime* gnsssystemtime_;
  ::PBLocExtDOP* extdop_;
  ::google::protobuf::uint64 flags_;
  float altitudemeansealevel_;
  float pdop_;
  float hdop_;
  float vdop_;
  float magneticdeviation_;
  float vert_unc_;
  float speed_unc_;
  float bearing_unc_;
  int horizontal_reliability_;
  int vertical_reliability_;
  float horuncellipsesemimajor_;
  float horuncellipsesemiminor_;
  float horuncellipseorientazimuth_;
  ::google::protobuf::uint32 navsolutionmask_;
  ::google::protobuf::uint32 tech_mask_;
  int sv_source_;
  float northstddeviation_;
  float eaststddeviation_;
  float northvelocity_;
  float eastvelocity_;
  float upvelocity_;
  float northvelocitystddeviation_;
  float eastvelocitystddeviation_;
  float upvelocitystddeviation_;
  float clockbiasmeter_;
  float clockbiasstddeviationmeter_;
  float clockdrift_;
  float clockdriftstddeviation_;
  ::google::protobuf::uint32 numvalidrefstations_;
  ::google::protobuf::uint32 numofmeasreceived_;
  ::google::protobuf::uint32 leapseconds_;
  float timeuncms_;
  float headingratedeg_;
  ::google::protobuf::uint32 calibrationconfidence_;
  ::google::protobuf::uint32 calibrationstatus_;
  int locoutputengtype_;
  ::google::protobuf::uint32 locoutputengmask_;
  int dgnsscorrectionsourcetype_;
  ::google::protobuf::uint32 dgnsscorrectionsourceid_;
  ::google::protobuf::uint32 dgnssconstellationusagemask_;
  ::google::protobuf::uint32 dgnssrefstationid_;
  ::google::protobuf::uint32 dgnssdataagemsec_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssAidingData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssAidingData) */ {
 public:
  PBGnssAidingData();
  virtual ~PBGnssAidingData();

  PBGnssAidingData(const PBGnssAidingData& from);

  inline PBGnssAidingData& operator=(const PBGnssAidingData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssAidingData& default_instance();

  static inline const PBGnssAidingData* internal_default_instance() {
    return reinterpret_cast<const PBGnssAidingData*>(
               &_PBGnssAidingData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(PBGnssAidingData* other);

  // implements Message ----------------------------------------------

  inline PBGnssAidingData* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssAidingData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssAidingData& from);
  void MergeFrom(const PBGnssAidingData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssAidingData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBGnssAidingDataSv sv = 2;
  bool has_sv() const;
  void clear_sv();
  static const int kSvFieldNumber = 2;
  const ::PBGnssAidingDataSv& sv() const;
  ::PBGnssAidingDataSv* mutable_sv();
  ::PBGnssAidingDataSv* release_sv();
  void set_allocated_sv(::PBGnssAidingDataSv* sv);

  // .PBGnssAidingDataCommon common = 3;
  bool has_common() const;
  void clear_common();
  static const int kCommonFieldNumber = 3;
  const ::PBGnssAidingDataCommon& common() const;
  ::PBGnssAidingDataCommon* mutable_common();
  ::PBGnssAidingDataCommon* release_common();
  void set_allocated_common(::PBGnssAidingDataCommon* common);

  // bool deleteAll = 1;
  void clear_deleteall();
  static const int kDeleteAllFieldNumber = 1;
  bool deleteall() const;
  void set_deleteall(bool value);

  // uint32 posEngineMask = 4;
  void clear_posenginemask();
  static const int kPosEngineMaskFieldNumber = 4;
  ::google::protobuf::uint32 posenginemask() const;
  void set_posenginemask(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBGnssAidingData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBGnssAidingDataSv* sv_;
  ::PBGnssAidingDataCommon* common_;
  bool deleteall_;
  ::google::protobuf::uint32 posenginemask_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssAidingDataSv : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssAidingDataSv) */ {
 public:
  PBGnssAidingDataSv();
  virtual ~PBGnssAidingDataSv();

  PBGnssAidingDataSv(const PBGnssAidingDataSv& from);

  inline PBGnssAidingDataSv& operator=(const PBGnssAidingDataSv& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssAidingDataSv& default_instance();

  static inline const PBGnssAidingDataSv* internal_default_instance() {
    return reinterpret_cast<const PBGnssAidingDataSv*>(
               &_PBGnssAidingDataSv_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(PBGnssAidingDataSv* other);

  // implements Message ----------------------------------------------

  inline PBGnssAidingDataSv* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssAidingDataSv* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssAidingDataSv& from);
  void MergeFrom(const PBGnssAidingDataSv& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssAidingDataSv* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 svMask = 1;
  void clear_svmask();
  static const int kSvMaskFieldNumber = 1;
  ::google::protobuf::uint32 svmask() const;
  void set_svmask(::google::protobuf::uint32 value);

  // uint32 svTypeMask = 2;
  void clear_svtypemask();
  static const int kSvTypeMaskFieldNumber = 2;
  ::google::protobuf::uint32 svtypemask() const;
  void set_svtypemask(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBGnssAidingDataSv)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 svmask_;
  ::google::protobuf::uint32 svtypemask_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssAidingDataCommon : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssAidingDataCommon) */ {
 public:
  PBGnssAidingDataCommon();
  virtual ~PBGnssAidingDataCommon();

  PBGnssAidingDataCommon(const PBGnssAidingDataCommon& from);

  inline PBGnssAidingDataCommon& operator=(const PBGnssAidingDataCommon& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssAidingDataCommon& default_instance();

  static inline const PBGnssAidingDataCommon* internal_default_instance() {
    return reinterpret_cast<const PBGnssAidingDataCommon*>(
               &_PBGnssAidingDataCommon_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(PBGnssAidingDataCommon* other);

  // implements Message ----------------------------------------------

  inline PBGnssAidingDataCommon* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssAidingDataCommon* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssAidingDataCommon& from);
  void MergeFrom(const PBGnssAidingDataCommon& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssAidingDataCommon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 mask = 1;
  void clear_mask();
  static const int kMaskFieldNumber = 1;
  ::google::protobuf::uint32 mask() const;
  void set_mask(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBGnssAidingDataCommon)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 mask_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssSvMeasurementSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssSvMeasurementSet) */ {
 public:
  PBGnssSvMeasurementSet();
  virtual ~PBGnssSvMeasurementSet();

  PBGnssSvMeasurementSet(const PBGnssSvMeasurementSet& from);

  inline PBGnssSvMeasurementSet& operator=(const PBGnssSvMeasurementSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssSvMeasurementSet& default_instance();

  static inline const PBGnssSvMeasurementSet* internal_default_instance() {
    return reinterpret_cast<const PBGnssSvMeasurementSet*>(
               &_PBGnssSvMeasurementSet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(PBGnssSvMeasurementSet* other);

  // implements Message ----------------------------------------------

  inline PBGnssSvMeasurementSet* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssSvMeasurementSet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssSvMeasurementSet& from);
  void MergeFrom(const PBGnssSvMeasurementSet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssSvMeasurementSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PBSVMeasurementStructType svMeas = 5;
  int svmeas_size() const;
  void clear_svmeas();
  static const int kSvMeasFieldNumber = 5;
  const ::PBSVMeasurementStructType& svmeas(int index) const;
  ::PBSVMeasurementStructType* mutable_svmeas(int index);
  ::PBSVMeasurementStructType* add_svmeas();
  ::google::protobuf::RepeatedPtrField< ::PBSVMeasurementStructType >*
      mutable_svmeas();
  const ::google::protobuf::RepeatedPtrField< ::PBSVMeasurementStructType >&
      svmeas() const;

  // .PBGnssSvMeasurementHeader svMeasSetHeader = 3;
  bool has_svmeassetheader() const;
  void clear_svmeassetheader();
  static const int kSvMeasSetHeaderFieldNumber = 3;
  const ::PBGnssSvMeasurementHeader& svmeassetheader() const;
  ::PBGnssSvMeasurementHeader* mutable_svmeassetheader();
  ::PBGnssSvMeasurementHeader* release_svmeassetheader();
  void set_allocated_svmeassetheader(::PBGnssSvMeasurementHeader* svmeassetheader);

  // uint64 ptpTimeNs = 2;
  void clear_ptptimens();
  static const int kPtpTimeNsFieldNumber = 2;
  ::google::protobuf::uint64 ptptimens() const;
  void set_ptptimens(::google::protobuf::uint64 value);

  // bool isNhz = 1;
  void clear_isnhz();
  static const int kIsNhzFieldNumber = 1;
  bool isnhz() const;
  void set_isnhz(bool value);

  // uint32 svMeasCount = 4;
  void clear_svmeascount();
  static const int kSvMeasCountFieldNumber = 4;
  ::google::protobuf::uint32 svmeascount() const;
  void set_svmeascount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBGnssSvMeasurementSet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::PBSVMeasurementStructType > svmeas_;
  ::PBGnssSvMeasurementHeader* svmeassetheader_;
  ::google::protobuf::uint64 ptptimens_;
  bool isnhz_;
  ::google::protobuf::uint32 svmeascount_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssLocDgnssSVMeasurement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssLocDgnssSVMeasurement) */ {
 public:
  PBGnssLocDgnssSVMeasurement();
  virtual ~PBGnssLocDgnssSVMeasurement();

  PBGnssLocDgnssSVMeasurement(const PBGnssLocDgnssSVMeasurement& from);

  inline PBGnssLocDgnssSVMeasurement& operator=(const PBGnssLocDgnssSVMeasurement& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssLocDgnssSVMeasurement& default_instance();

  static inline const PBGnssLocDgnssSVMeasurement* internal_default_instance() {
    return reinterpret_cast<const PBGnssLocDgnssSVMeasurement*>(
               &_PBGnssLocDgnssSVMeasurement_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(PBGnssLocDgnssSVMeasurement* other);

  // implements Message ----------------------------------------------

  inline PBGnssLocDgnssSVMeasurement* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssLocDgnssSVMeasurement* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssLocDgnssSVMeasurement& from);
  void MergeFrom(const PBGnssLocDgnssSVMeasurement& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssLocDgnssSVMeasurement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 dgnssMeasStatus = 1;
  void clear_dgnssmeasstatus();
  static const int kDgnssMeasStatusFieldNumber = 1;
  ::google::protobuf::uint32 dgnssmeasstatus() const;
  void set_dgnssmeasstatus(::google::protobuf::uint32 value);

  // uint32 diffDataEpochTimeMsec = 2;
  void clear_diffdataepochtimemsec();
  static const int kDiffDataEpochTimeMsecFieldNumber = 2;
  ::google::protobuf::uint32 diffdataepochtimemsec() const;
  void set_diffdataepochtimemsec(::google::protobuf::uint32 value);

  // float prCorrMeters = 3;
  void clear_prcorrmeters();
  static const int kPrCorrMetersFieldNumber = 3;
  float prcorrmeters() const;
  void set_prcorrmeters(float value);

  // float prrCorrMetersPerSec = 4;
  void clear_prrcorrmeterspersec();
  static const int kPrrCorrMetersPerSecFieldNumber = 4;
  float prrcorrmeterspersec() const;
  void set_prrcorrmeterspersec(float value);

  // @@protoc_insertion_point(class_scope:PBGnssLocDgnssSVMeasurement)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 dgnssmeasstatus_;
  ::google::protobuf::uint32 diffdataepochtimemsec_;
  float prcorrmeters_;
  float prrcorrmeterspersec_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBSVMeasurementStructType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBSVMeasurementStructType) */ {
 public:
  PBSVMeasurementStructType();
  virtual ~PBSVMeasurementStructType();

  PBSVMeasurementStructType(const PBSVMeasurementStructType& from);

  inline PBSVMeasurementStructType& operator=(const PBSVMeasurementStructType& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSVMeasurementStructType& default_instance();

  static inline const PBSVMeasurementStructType* internal_default_instance() {
    return reinterpret_cast<const PBSVMeasurementStructType*>(
               &_PBSVMeasurementStructType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(PBSVMeasurementStructType* other);

  // implements Message ----------------------------------------------

  inline PBSVMeasurementStructType* New() const PROTOBUF_FINAL { return New(NULL); }

  PBSVMeasurementStructType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBSVMeasurementStructType& from);
  void MergeFrom(const PBSVMeasurementStructType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBSVMeasurementStructType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBSVTimeSpeedInfo svTimeSpeed = 14;
  bool has_svtimespeed() const;
  void clear_svtimespeed();
  static const int kSvTimeSpeedFieldNumber = 14;
  const ::PBSVTimeSpeedInfo& svtimespeed() const;
  ::PBSVTimeSpeedInfo* mutable_svtimespeed();
  ::PBSVTimeSpeedInfo* release_svtimespeed();
  void set_allocated_svtimespeed(::PBSVTimeSpeedInfo* svtimespeed);

  // .PBGnssLocDgnssSVMeasurement dgnssSvMeas = 32;
  bool has_dgnsssvmeas() const;
  void clear_dgnsssvmeas();
  static const int kDgnssSvMeasFieldNumber = 32;
  const ::PBGnssLocDgnssSVMeasurement& dgnsssvmeas() const;
  ::PBGnssLocDgnssSVMeasurement* mutable_dgnsssvmeas();
  ::PBGnssLocDgnssSVMeasurement* release_dgnsssvmeas();
  void set_allocated_dgnsssvmeas(::PBGnssLocDgnssSVMeasurement* dgnsssvmeas);

  // .PBGnss_LocSvSystemEnumType gnssSystem = 1;
  void clear_gnsssystem();
  static const int kGnssSystemFieldNumber = 1;
  ::PBGnss_LocSvSystemEnumType gnsssystem() const;
  void set_gnsssystem(::PBGnss_LocSvSystemEnumType value);

  // fixed32 gnssSignalTypeMask = 2;
  void clear_gnsssignaltypemask();
  static const int kGnssSignalTypeMaskFieldNumber = 2;
  ::google::protobuf::uint32 gnsssignaltypemask() const;
  void set_gnsssignaltypemask(::google::protobuf::uint32 value);

  // uint32 gnssSvId = 3;
  void clear_gnsssvid();
  static const int kGnssSvIdFieldNumber = 3;
  ::google::protobuf::uint32 gnsssvid() const;
  void set_gnsssvid(::google::protobuf::uint32 value);

  // uint32 gloFrequency = 4;
  void clear_glofrequency();
  static const int kGloFrequencyFieldNumber = 4;
  ::google::protobuf::uint32 glofrequency() const;
  void set_glofrequency(::google::protobuf::uint32 value);

  // .PBSvSearchStatus svStatus = 5;
  void clear_svstatus();
  static const int kSvStatusFieldNumber = 5;
  ::PBSvSearchStatus svstatus() const;
  void set_svstatus(::PBSvSearchStatus value);

  // uint32 svInfoMask = 8;
  void clear_svinfomask();
  static const int kSvInfoMaskFieldNumber = 8;
  ::google::protobuf::uint32 svinfomask() const;
  void set_svinfomask(::google::protobuf::uint32 value);

  // uint64 measurementStatus = 9;
  void clear_measurementstatus();
  static const int kMeasurementStatusFieldNumber = 9;
  ::google::protobuf::uint64 measurementstatus() const;
  void set_measurementstatus(::google::protobuf::uint64 value);

  // uint32 CNo = 10;
  void clear_cno();
  static const int kCNoFieldNumber = 10;
  ::google::protobuf::uint32 cno() const;
  void set_cno(::google::protobuf::uint32 value);

  // bool healthStatusValid = 6;
  void clear_healthstatusvalid();
  static const int kHealthStatusValidFieldNumber = 6;
  bool healthstatusvalid() const;
  void set_healthstatusvalid(bool value);

  // bool healthStatus = 7;
  void clear_healthstatus();
  static const int kHealthStatusFieldNumber = 7;
  bool healthstatus() const;
  void set_healthstatus(bool value);

  // bool lossOfLock = 12;
  void clear_lossoflock();
  static const int kLossOfLockFieldNumber = 12;
  bool lossoflock() const;
  void set_lossoflock(bool value);

  // bool multipathEstValid = 16;
  void clear_multipathestvalid();
  static const int kMultipathEstValidFieldNumber = 16;
  bool multipathestvalid() const;
  void set_multipathestvalid(bool value);

  // uint32 gloRfLoss = 11;
  void clear_glorfloss();
  static const int kGloRfLossFieldNumber = 11;
  ::google::protobuf::uint32 glorfloss() const;
  void set_glorfloss(::google::protobuf::uint32 value);

  // int32 measLatency = 13;
  void clear_measlatency();
  static const int kMeasLatencyFieldNumber = 13;
  ::google::protobuf::int32 measlatency() const;
  void set_measlatency(::google::protobuf::int32 value);

  // float dopplerAccel = 15;
  void clear_doppleraccel();
  static const int kDopplerAccelFieldNumber = 15;
  float doppleraccel() const;
  void set_doppleraccel(float value);

  // float multipathEstimate = 17;
  void clear_multipathestimate();
  static const int kMultipathEstimateFieldNumber = 17;
  float multipathestimate() const;
  void set_multipathestimate(float value);

  // float fineSpeed = 19;
  void clear_finespeed();
  static const int kFineSpeedFieldNumber = 19;
  float finespeed() const;
  void set_finespeed(float value);

  // float fineSpeedUnc = 21;
  void clear_finespeedunc();
  static const int kFineSpeedUncFieldNumber = 21;
  float finespeedunc() const;
  void set_finespeedunc(float value);

  // bool fineSpeedValid = 18;
  void clear_finespeedvalid();
  static const int kFineSpeedValidFieldNumber = 18;
  bool finespeedvalid() const;
  void set_finespeedvalid(bool value);

  // bool fineSpeedUncValid = 20;
  void clear_finespeeduncvalid();
  static const int kFineSpeedUncValidFieldNumber = 20;
  bool finespeeduncvalid() const;
  void set_finespeeduncvalid(bool value);

  // bool carrierPhaseValid = 22;
  void clear_carrierphasevalid();
  static const int kCarrierPhaseValidFieldNumber = 22;
  bool carrierphasevalid() const;
  void set_carrierphasevalid(bool value);

  // bool cycleSlipCountValid = 24;
  void clear_cycleslipcountvalid();
  static const int kCycleSlipCountValidFieldNumber = 24;
  bool cycleslipcountvalid() const;
  void set_cycleslipcountvalid(bool value);

  // uint32 cycleSlipCount = 25;
  void clear_cycleslipcount();
  static const int kCycleSlipCountFieldNumber = 25;
  ::google::protobuf::uint32 cycleslipcount() const;
  void set_cycleslipcount(::google::protobuf::uint32 value);

  // double carrierPhase = 23;
  void clear_carrierphase();
  static const int kCarrierPhaseFieldNumber = 23;
  double carrierphase() const;
  void set_carrierphase(double value);

  // float svAzimuth = 27;
  void clear_svazimuth();
  static const int kSvAzimuthFieldNumber = 27;
  float svazimuth() const;
  void set_svazimuth(float value);

  // float svElevation = 28;
  void clear_svelevation();
  static const int kSvElevationFieldNumber = 28;
  float svelevation() const;
  void set_svelevation(float value);

  // uint64 validMeasStatusMask = 29;
  void clear_validmeasstatusmask();
  static const int kValidMeasStatusMaskFieldNumber = 29;
  ::google::protobuf::uint64 validmeasstatusmask() const;
  void set_validmeasstatusmask(::google::protobuf::uint64 value);

  // bool svDirectionValid = 26;
  void clear_svdirectionvalid();
  static const int kSvDirectionValidFieldNumber = 26;
  bool svdirectionvalid() const;
  void set_svdirectionvalid(bool value);

  // bool carrierPhaseUncValid = 30;
  void clear_carrierphaseuncvalid();
  static const int kCarrierPhaseUncValidFieldNumber = 30;
  bool carrierphaseuncvalid() const;
  void set_carrierphaseuncvalid(bool value);

  // float carrierPhaseUnc = 31;
  void clear_carrierphaseunc();
  static const int kCarrierPhaseUncFieldNumber = 31;
  float carrierphaseunc() const;
  void set_carrierphaseunc(float value);

  // @@protoc_insertion_point(class_scope:PBSVMeasurementStructType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBSVTimeSpeedInfo* svtimespeed_;
  ::PBGnssLocDgnssSVMeasurement* dgnsssvmeas_;
  int gnsssystem_;
  ::google::protobuf::uint32 gnsssignaltypemask_;
  ::google::protobuf::uint32 gnsssvid_;
  ::google::protobuf::uint32 glofrequency_;
  int svstatus_;
  ::google::protobuf::uint32 svinfomask_;
  ::google::protobuf::uint64 measurementstatus_;
  ::google::protobuf::uint32 cno_;
  bool healthstatusvalid_;
  bool healthstatus_;
  bool lossoflock_;
  bool multipathestvalid_;
  ::google::protobuf::uint32 glorfloss_;
  ::google::protobuf::int32 measlatency_;
  float doppleraccel_;
  float multipathestimate_;
  float finespeed_;
  float finespeedunc_;
  bool finespeedvalid_;
  bool finespeeduncvalid_;
  bool carrierphasevalid_;
  bool cycleslipcountvalid_;
  ::google::protobuf::uint32 cycleslipcount_;
  double carrierphase_;
  float svazimuth_;
  float svelevation_;
  ::google::protobuf::uint64 validmeasstatusmask_;
  bool svdirectionvalid_;
  bool carrierphaseuncvalid_;
  float carrierphaseunc_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssSvPolynomial : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssSvPolynomial) */ {
 public:
  PBGnssSvPolynomial();
  virtual ~PBGnssSvPolynomial();

  PBGnssSvPolynomial(const PBGnssSvPolynomial& from);

  inline PBGnssSvPolynomial& operator=(const PBGnssSvPolynomial& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssSvPolynomial& default_instance();

  static inline const PBGnssSvPolynomial* internal_default_instance() {
    return reinterpret_cast<const PBGnssSvPolynomial*>(
               &_PBGnssSvPolynomial_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(PBGnssSvPolynomial* other);

  // implements Message ----------------------------------------------

  inline PBGnssSvPolynomial* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssSvPolynomial* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssSvPolynomial& from);
  void MergeFrom(const PBGnssSvPolynomial& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssSvPolynomial* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float polyCoeffXYZ0 = 8;
  int polycoeffxyz0_size() const;
  void clear_polycoeffxyz0();
  static const int kPolyCoeffXYZ0FieldNumber = 8;
  float polycoeffxyz0(int index) const;
  void set_polycoeffxyz0(int index, float value);
  void add_polycoeffxyz0(float value);
  const ::google::protobuf::RepeatedField< float >&
      polycoeffxyz0() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_polycoeffxyz0();

  // repeated float polyCoefXYZN = 9;
  int polycoefxyzn_size() const;
  void clear_polycoefxyzn();
  static const int kPolyCoefXYZNFieldNumber = 9;
  float polycoefxyzn(int index) const;
  void set_polycoefxyzn(int index, float value);
  void add_polycoefxyzn(float value);
  const ::google::protobuf::RepeatedField< float >&
      polycoefxyzn() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_polycoefxyzn();

  // repeated float polyCoefOther = 10;
  int polycoefother_size() const;
  void clear_polycoefother();
  static const int kPolyCoefOtherFieldNumber = 10;
  float polycoefother(int index) const;
  void set_polycoefother(int index, float value);
  void add_polycoefother(float value);
  const ::google::protobuf::RepeatedField< float >&
      polycoefother() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_polycoefother();

  // repeated float velCoef = 20;
  int velcoef_size() const;
  void clear_velcoef();
  static const int kVelCoefFieldNumber = 20;
  float velcoef(int index) const;
  void set_velcoef(int index, float value);
  void add_velcoef(float value);
  const ::google::protobuf::RepeatedField< float >&
      velcoef() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_velcoef();

  // uint32 gnssSvId = 1;
  void clear_gnsssvid();
  static const int kGnssSvIdFieldNumber = 1;
  ::google::protobuf::uint32 gnsssvid() const;
  void set_gnsssvid(::google::protobuf::uint32 value);

  // uint32 freqNum = 2;
  void clear_freqnum();
  static const int kFreqNumFieldNumber = 2;
  ::google::protobuf::uint32 freqnum() const;
  void set_freqnum(::google::protobuf::uint32 value);

  // uint32 svPolyStatusMaskValidity = 3;
  void clear_svpolystatusmaskvalidity();
  static const int kSvPolyStatusMaskValidityFieldNumber = 3;
  ::google::protobuf::uint32 svpolystatusmaskvalidity() const;
  void set_svpolystatusmaskvalidity(::google::protobuf::uint32 value);

  // uint32 svPolyStatusMask = 4;
  void clear_svpolystatusmask();
  static const int kSvPolyStatusMaskFieldNumber = 4;
  ::google::protobuf::uint32 svpolystatusmask() const;
  void set_svpolystatusmask(::google::protobuf::uint32 value);

  // uint32 is_valid = 5;
  void clear_is_valid();
  static const int kIsValidFieldNumber = 5;
  ::google::protobuf::uint32 is_valid() const;
  void set_is_valid(::google::protobuf::uint32 value);

  // uint32 iode = 6;
  void clear_iode();
  static const int kIodeFieldNumber = 6;
  ::google::protobuf::uint32 iode() const;
  void set_iode(::google::protobuf::uint32 value);

  // float T0 = 7;
  void clear_t0();
  static const int kT0FieldNumber = 7;
  float t0() const;
  void set_t0(float value);

  // float svPosUnc = 11;
  void clear_svposunc();
  static const int kSvPosUncFieldNumber = 11;
  float svposunc() const;
  void set_svposunc(float value);

  // float ionoDelay = 12;
  void clear_ionodelay();
  static const int kIonoDelayFieldNumber = 12;
  float ionodelay() const;
  void set_ionodelay(float value);

  // float ionoDot = 13;
  void clear_ionodot();
  static const int kIonoDotFieldNumber = 13;
  float ionodot() const;
  void set_ionodot(float value);

  // float sbasIonoDelay = 14;
  void clear_sbasionodelay();
  static const int kSbasIonoDelayFieldNumber = 14;
  float sbasionodelay() const;
  void set_sbasionodelay(float value);

  // float sbasIonoDot = 15;
  void clear_sbasionodot();
  static const int kSbasIonoDotFieldNumber = 15;
  float sbasionodot() const;
  void set_sbasionodot(float value);

  // float tropoDelay = 16;
  void clear_tropodelay();
  static const int kTropoDelayFieldNumber = 16;
  float tropodelay() const;
  void set_tropodelay(float value);

  // float elevation = 17;
  void clear_elevation();
  static const int kElevationFieldNumber = 17;
  float elevation() const;
  void set_elevation(float value);

  // float elevationDot = 18;
  void clear_elevationdot();
  static const int kElevationDotFieldNumber = 18;
  float elevationdot() const;
  void set_elevationdot(float value);

  // float elevationUnc = 19;
  void clear_elevationunc();
  static const int kElevationUncFieldNumber = 19;
  float elevationunc() const;
  void set_elevationunc(float value);

  // uint32 enhancedIOD = 21;
  void clear_enhancediod();
  static const int kEnhancedIODFieldNumber = 21;
  ::google::protobuf::uint32 enhancediod() const;
  void set_enhancediod(::google::protobuf::uint32 value);

  // float gpsIscL1ca = 22;
  void clear_gpsiscl1ca();
  static const int kGpsIscL1CaFieldNumber = 22;
  float gpsiscl1ca() const;
  void set_gpsiscl1ca(float value);

  // float gpsIscL2c = 23;
  void clear_gpsiscl2c();
  static const int kGpsIscL2CFieldNumber = 23;
  float gpsiscl2c() const;
  void set_gpsiscl2c(float value);

  // float gpsIscL5I5 = 24;
  void clear_gpsiscl5i5();
  static const int kGpsIscL5I5FieldNumber = 24;
  float gpsiscl5i5() const;
  void set_gpsiscl5i5(float value);

  // float gpsIscL5Q5 = 25;
  void clear_gpsiscl5q5();
  static const int kGpsIscL5Q5FieldNumber = 25;
  float gpsiscl5q5() const;
  void set_gpsiscl5q5(float value);

  // float gpsTgd = 26;
  void clear_gpstgd();
  static const int kGpsTgdFieldNumber = 26;
  float gpstgd() const;
  void set_gpstgd(float value);

  // float gloTgdG1G2 = 27;
  void clear_glotgdg1g2();
  static const int kGloTgdG1G2FieldNumber = 27;
  float glotgdg1g2() const;
  void set_glotgdg1g2(float value);

  // float bdsTgdB1 = 28;
  void clear_bdstgdb1();
  static const int kBdsTgdB1FieldNumber = 28;
  float bdstgdb1() const;
  void set_bdstgdb1(float value);

  // float bdsTgdB2 = 29;
  void clear_bdstgdb2();
  static const int kBdsTgdB2FieldNumber = 29;
  float bdstgdb2() const;
  void set_bdstgdb2(float value);

  // float bdsTgdB2a = 30;
  void clear_bdstgdb2a();
  static const int kBdsTgdB2AFieldNumber = 30;
  float bdstgdb2a() const;
  void set_bdstgdb2a(float value);

  // float bdsIscB2a = 31;
  void clear_bdsiscb2a();
  static const int kBdsIscB2AFieldNumber = 31;
  float bdsiscb2a() const;
  void set_bdsiscb2a(float value);

  // float galBgdE1E5a = 32;
  void clear_galbgde1e5a();
  static const int kGalBgdE1E5AFieldNumber = 32;
  float galbgde1e5a() const;
  void set_galbgde1e5a(float value);

  // float galBgdE1E5b = 33;
  void clear_galbgde1e5b();
  static const int kGalBgdE1E5BFieldNumber = 33;
  float galbgde1e5b() const;
  void set_galbgde1e5b(float value);

  // float navicTgdL5 = 34;
  void clear_navictgdl5();
  static const int kNavicTgdL5FieldNumber = 34;
  float navictgdl5() const;
  void set_navictgdl5(float value);

  // @@protoc_insertion_point(class_scope:PBGnssSvPolynomial)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > polycoeffxyz0_;
  mutable int _polycoeffxyz0_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > polycoefxyzn_;
  mutable int _polycoefxyzn_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > polycoefother_;
  mutable int _polycoefother_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > velcoef_;
  mutable int _velcoef_cached_byte_size_;
  ::google::protobuf::uint32 gnsssvid_;
  ::google::protobuf::uint32 freqnum_;
  ::google::protobuf::uint32 svpolystatusmaskvalidity_;
  ::google::protobuf::uint32 svpolystatusmask_;
  ::google::protobuf::uint32 is_valid_;
  ::google::protobuf::uint32 iode_;
  float t0_;
  float svposunc_;
  float ionodelay_;
  float ionodot_;
  float sbasionodelay_;
  float sbasionodot_;
  float tropodelay_;
  float elevation_;
  float elevationdot_;
  float elevationunc_;
  ::google::protobuf::uint32 enhancediod_;
  float gpsiscl1ca_;
  float gpsiscl2c_;
  float gpsiscl5i5_;
  float gpsiscl5q5_;
  float gpstgd_;
  float glotgdg1g2_;
  float bdstgdb1_;
  float bdstgdb2_;
  float bdstgdb2a_;
  float bdsiscb2a_;
  float galbgde1e5a_;
  float galbgde1e5b_;
  float navictgdl5_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssSvEphemerisReport : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssSvEphemerisReport) */ {
 public:
  PBGnssSvEphemerisReport();
  virtual ~PBGnssSvEphemerisReport();

  PBGnssSvEphemerisReport(const PBGnssSvEphemerisReport& from);

  inline PBGnssSvEphemerisReport& operator=(const PBGnssSvEphemerisReport& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssSvEphemerisReport& default_instance();

  enum EphInfoCase {
    kGpsEphemeris = 4,
    kGlonassEphemeris = 5,
    kBdsEphemeris = 6,
    kGalileoEphemeris = 7,
    kQzssEphemeris = 8,
    EPHINFO_NOT_SET = 0,
  };

  static inline const PBGnssSvEphemerisReport* internal_default_instance() {
    return reinterpret_cast<const PBGnssSvEphemerisReport*>(
               &_PBGnssSvEphemerisReport_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(PBGnssSvEphemerisReport* other);

  // implements Message ----------------------------------------------

  inline PBGnssSvEphemerisReport* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssSvEphemerisReport* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssSvEphemerisReport& from);
  void MergeFrom(const PBGnssSvEphemerisReport& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssSvEphemerisReport* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBGnssSystemTimeStructType systemTime = 3;
  bool has_systemtime() const;
  void clear_systemtime();
  static const int kSystemTimeFieldNumber = 3;
  const ::PBGnssSystemTimeStructType& systemtime() const;
  ::PBGnssSystemTimeStructType* mutable_systemtime();
  ::PBGnssSystemTimeStructType* release_systemtime();
  void set_allocated_systemtime(::PBGnssSystemTimeStructType* systemtime);

  // .PBGnss_LocSvSystemEnumType gnssConstellation = 1;
  void clear_gnssconstellation();
  static const int kGnssConstellationFieldNumber = 1;
  ::PBGnss_LocSvSystemEnumType gnssconstellation() const;
  void set_gnssconstellation(::PBGnss_LocSvSystemEnumType value);

  // bool isSystemTimeValid = 2;
  void clear_issystemtimevalid();
  static const int kIsSystemTimeValidFieldNumber = 2;
  bool issystemtimevalid() const;
  void set_issystemtimevalid(bool value);

  // .PBGpsEphemerisResponse gpsEphemeris = 4;
  bool has_gpsephemeris() const;
  void clear_gpsephemeris();
  static const int kGpsEphemerisFieldNumber = 4;
  const ::PBGpsEphemerisResponse& gpsephemeris() const;
  ::PBGpsEphemerisResponse* mutable_gpsephemeris();
  ::PBGpsEphemerisResponse* release_gpsephemeris();
  void set_allocated_gpsephemeris(::PBGpsEphemerisResponse* gpsephemeris);

  // .PBGlonassEphemerisResponse glonassEphemeris = 5;
  bool has_glonassephemeris() const;
  void clear_glonassephemeris();
  static const int kGlonassEphemerisFieldNumber = 5;
  const ::PBGlonassEphemerisResponse& glonassephemeris() const;
  ::PBGlonassEphemerisResponse* mutable_glonassephemeris();
  ::PBGlonassEphemerisResponse* release_glonassephemeris();
  void set_allocated_glonassephemeris(::PBGlonassEphemerisResponse* glonassephemeris);

  // .PBBdsEphemerisResponse bdsEphemeris = 6;
  bool has_bdsephemeris() const;
  void clear_bdsephemeris();
  static const int kBdsEphemerisFieldNumber = 6;
  const ::PBBdsEphemerisResponse& bdsephemeris() const;
  ::PBBdsEphemerisResponse* mutable_bdsephemeris();
  ::PBBdsEphemerisResponse* release_bdsephemeris();
  void set_allocated_bdsephemeris(::PBBdsEphemerisResponse* bdsephemeris);

  // .PBGalileoEphemerisResponse galileoEphemeris = 7;
  bool has_galileoephemeris() const;
  void clear_galileoephemeris();
  static const int kGalileoEphemerisFieldNumber = 7;
  const ::PBGalileoEphemerisResponse& galileoephemeris() const;
  ::PBGalileoEphemerisResponse* mutable_galileoephemeris();
  ::PBGalileoEphemerisResponse* release_galileoephemeris();
  void set_allocated_galileoephemeris(::PBGalileoEphemerisResponse* galileoephemeris);

  // .PBQzssEphemerisResponse qzssEphemeris = 8;
  bool has_qzssephemeris() const;
  void clear_qzssephemeris();
  static const int kQzssEphemerisFieldNumber = 8;
  const ::PBQzssEphemerisResponse& qzssephemeris() const;
  ::PBQzssEphemerisResponse* mutable_qzssephemeris();
  ::PBQzssEphemerisResponse* release_qzssephemeris();
  void set_allocated_qzssephemeris(::PBQzssEphemerisResponse* qzssephemeris);

  EphInfoCase ephInfo_case() const;
  // @@protoc_insertion_point(class_scope:PBGnssSvEphemerisReport)
 private:
  void set_has_gpsephemeris();
  void set_has_glonassephemeris();
  void set_has_bdsephemeris();
  void set_has_galileoephemeris();
  void set_has_qzssephemeris();

  inline bool has_ephInfo() const;
  void clear_ephInfo();
  inline void clear_has_ephInfo();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBGnssSystemTimeStructType* systemtime_;
  int gnssconstellation_;
  bool issystemtimevalid_;
  union EphInfoUnion {
    EphInfoUnion() {}
    ::PBGpsEphemerisResponse* gpsephemeris_;
    ::PBGlonassEphemerisResponse* glonassephemeris_;
    ::PBBdsEphemerisResponse* bdsephemeris_;
    ::PBGalileoEphemerisResponse* galileoephemeris_;
    ::PBQzssEphemerisResponse* qzssephemeris_;
  } ephInfo_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGpsEphemerisResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGpsEphemerisResponse) */ {
 public:
  PBGpsEphemerisResponse();
  virtual ~PBGpsEphemerisResponse();

  PBGpsEphemerisResponse(const PBGpsEphemerisResponse& from);

  inline PBGpsEphemerisResponse& operator=(const PBGpsEphemerisResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGpsEphemerisResponse& default_instance();

  static inline const PBGpsEphemerisResponse* internal_default_instance() {
    return reinterpret_cast<const PBGpsEphemerisResponse*>(
               &_PBGpsEphemerisResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(PBGpsEphemerisResponse* other);

  // implements Message ----------------------------------------------

  inline PBGpsEphemerisResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGpsEphemerisResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGpsEphemerisResponse& from);
  void MergeFrom(const PBGpsEphemerisResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGpsEphemerisResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PBGpsEphemeris gpsEphemerisData = 2;
  int gpsephemerisdata_size() const;
  void clear_gpsephemerisdata();
  static const int kGpsEphemerisDataFieldNumber = 2;
  const ::PBGpsEphemeris& gpsephemerisdata(int index) const;
  ::PBGpsEphemeris* mutable_gpsephemerisdata(int index);
  ::PBGpsEphemeris* add_gpsephemerisdata();
  ::google::protobuf::RepeatedPtrField< ::PBGpsEphemeris >*
      mutable_gpsephemerisdata();
  const ::google::protobuf::RepeatedPtrField< ::PBGpsEphemeris >&
      gpsephemerisdata() const;

  // uint32 numOfEphemeris = 1;
  void clear_numofephemeris();
  static const int kNumOfEphemerisFieldNumber = 1;
  ::google::protobuf::uint32 numofephemeris() const;
  void set_numofephemeris(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBGpsEphemerisResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::PBGpsEphemeris > gpsephemerisdata_;
  ::google::protobuf::uint32 numofephemeris_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGlonassEphemerisResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGlonassEphemerisResponse) */ {
 public:
  PBGlonassEphemerisResponse();
  virtual ~PBGlonassEphemerisResponse();

  PBGlonassEphemerisResponse(const PBGlonassEphemerisResponse& from);

  inline PBGlonassEphemerisResponse& operator=(const PBGlonassEphemerisResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGlonassEphemerisResponse& default_instance();

  static inline const PBGlonassEphemerisResponse* internal_default_instance() {
    return reinterpret_cast<const PBGlonassEphemerisResponse*>(
               &_PBGlonassEphemerisResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(PBGlonassEphemerisResponse* other);

  // implements Message ----------------------------------------------

  inline PBGlonassEphemerisResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGlonassEphemerisResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGlonassEphemerisResponse& from);
  void MergeFrom(const PBGlonassEphemerisResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGlonassEphemerisResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PBGlonassEphemeris gloEphemerisData = 2;
  int gloephemerisdata_size() const;
  void clear_gloephemerisdata();
  static const int kGloEphemerisDataFieldNumber = 2;
  const ::PBGlonassEphemeris& gloephemerisdata(int index) const;
  ::PBGlonassEphemeris* mutable_gloephemerisdata(int index);
  ::PBGlonassEphemeris* add_gloephemerisdata();
  ::google::protobuf::RepeatedPtrField< ::PBGlonassEphemeris >*
      mutable_gloephemerisdata();
  const ::google::protobuf::RepeatedPtrField< ::PBGlonassEphemeris >&
      gloephemerisdata() const;

  // uint32 numOfEphemeris = 1;
  void clear_numofephemeris();
  static const int kNumOfEphemerisFieldNumber = 1;
  ::google::protobuf::uint32 numofephemeris() const;
  void set_numofephemeris(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBGlonassEphemerisResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::PBGlonassEphemeris > gloephemerisdata_;
  ::google::protobuf::uint32 numofephemeris_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBBdsEphemerisResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBBdsEphemerisResponse) */ {
 public:
  PBBdsEphemerisResponse();
  virtual ~PBBdsEphemerisResponse();

  PBBdsEphemerisResponse(const PBBdsEphemerisResponse& from);

  inline PBBdsEphemerisResponse& operator=(const PBBdsEphemerisResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBdsEphemerisResponse& default_instance();

  static inline const PBBdsEphemerisResponse* internal_default_instance() {
    return reinterpret_cast<const PBBdsEphemerisResponse*>(
               &_PBBdsEphemerisResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(PBBdsEphemerisResponse* other);

  // implements Message ----------------------------------------------

  inline PBBdsEphemerisResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  PBBdsEphemerisResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBBdsEphemerisResponse& from);
  void MergeFrom(const PBBdsEphemerisResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBBdsEphemerisResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PBBdsEphemeris bdsEphemerisData = 2;
  int bdsephemerisdata_size() const;
  void clear_bdsephemerisdata();
  static const int kBdsEphemerisDataFieldNumber = 2;
  const ::PBBdsEphemeris& bdsephemerisdata(int index) const;
  ::PBBdsEphemeris* mutable_bdsephemerisdata(int index);
  ::PBBdsEphemeris* add_bdsephemerisdata();
  ::google::protobuf::RepeatedPtrField< ::PBBdsEphemeris >*
      mutable_bdsephemerisdata();
  const ::google::protobuf::RepeatedPtrField< ::PBBdsEphemeris >&
      bdsephemerisdata() const;

  // uint32 numOfEphemeris = 1;
  void clear_numofephemeris();
  static const int kNumOfEphemerisFieldNumber = 1;
  ::google::protobuf::uint32 numofephemeris() const;
  void set_numofephemeris(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBBdsEphemerisResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::PBBdsEphemeris > bdsephemerisdata_;
  ::google::protobuf::uint32 numofephemeris_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGalileoEphemerisResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGalileoEphemerisResponse) */ {
 public:
  PBGalileoEphemerisResponse();
  virtual ~PBGalileoEphemerisResponse();

  PBGalileoEphemerisResponse(const PBGalileoEphemerisResponse& from);

  inline PBGalileoEphemerisResponse& operator=(const PBGalileoEphemerisResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGalileoEphemerisResponse& default_instance();

  static inline const PBGalileoEphemerisResponse* internal_default_instance() {
    return reinterpret_cast<const PBGalileoEphemerisResponse*>(
               &_PBGalileoEphemerisResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(PBGalileoEphemerisResponse* other);

  // implements Message ----------------------------------------------

  inline PBGalileoEphemerisResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGalileoEphemerisResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGalileoEphemerisResponse& from);
  void MergeFrom(const PBGalileoEphemerisResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGalileoEphemerisResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PBGalileoEphemeris galEphemerisData = 2;
  int galephemerisdata_size() const;
  void clear_galephemerisdata();
  static const int kGalEphemerisDataFieldNumber = 2;
  const ::PBGalileoEphemeris& galephemerisdata(int index) const;
  ::PBGalileoEphemeris* mutable_galephemerisdata(int index);
  ::PBGalileoEphemeris* add_galephemerisdata();
  ::google::protobuf::RepeatedPtrField< ::PBGalileoEphemeris >*
      mutable_galephemerisdata();
  const ::google::protobuf::RepeatedPtrField< ::PBGalileoEphemeris >&
      galephemerisdata() const;

  // uint32 numOfEphemeris = 1;
  void clear_numofephemeris();
  static const int kNumOfEphemerisFieldNumber = 1;
  ::google::protobuf::uint32 numofephemeris() const;
  void set_numofephemeris(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBGalileoEphemerisResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::PBGalileoEphemeris > galephemerisdata_;
  ::google::protobuf::uint32 numofephemeris_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBQzssEphemerisResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBQzssEphemerisResponse) */ {
 public:
  PBQzssEphemerisResponse();
  virtual ~PBQzssEphemerisResponse();

  PBQzssEphemerisResponse(const PBQzssEphemerisResponse& from);

  inline PBQzssEphemerisResponse& operator=(const PBQzssEphemerisResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBQzssEphemerisResponse& default_instance();

  static inline const PBQzssEphemerisResponse* internal_default_instance() {
    return reinterpret_cast<const PBQzssEphemerisResponse*>(
               &_PBQzssEphemerisResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(PBQzssEphemerisResponse* other);

  // implements Message ----------------------------------------------

  inline PBQzssEphemerisResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  PBQzssEphemerisResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBQzssEphemerisResponse& from);
  void MergeFrom(const PBQzssEphemerisResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBQzssEphemerisResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PBGpsEphemeris qzssEphemerisData = 2;
  int qzssephemerisdata_size() const;
  void clear_qzssephemerisdata();
  static const int kQzssEphemerisDataFieldNumber = 2;
  const ::PBGpsEphemeris& qzssephemerisdata(int index) const;
  ::PBGpsEphemeris* mutable_qzssephemerisdata(int index);
  ::PBGpsEphemeris* add_qzssephemerisdata();
  ::google::protobuf::RepeatedPtrField< ::PBGpsEphemeris >*
      mutable_qzssephemerisdata();
  const ::google::protobuf::RepeatedPtrField< ::PBGpsEphemeris >&
      qzssephemerisdata() const;

  // uint32 numOfEphemeris = 1;
  void clear_numofephemeris();
  static const int kNumOfEphemerisFieldNumber = 1;
  ::google::protobuf::uint32 numofephemeris() const;
  void set_numofephemeris(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBQzssEphemerisResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::PBGpsEphemeris > qzssephemerisdata_;
  ::google::protobuf::uint32 numofephemeris_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssEphCommon : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssEphCommon) */ {
 public:
  PBGnssEphCommon();
  virtual ~PBGnssEphCommon();

  PBGnssEphCommon(const PBGnssEphCommon& from);

  inline PBGnssEphCommon& operator=(const PBGnssEphCommon& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssEphCommon& default_instance();

  static inline const PBGnssEphCommon* internal_default_instance() {
    return reinterpret_cast<const PBGnssEphCommon*>(
               &_PBGnssEphCommon_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(PBGnssEphCommon* other);

  // implements Message ----------------------------------------------

  inline PBGnssEphCommon* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssEphCommon* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssEphCommon& from);
  void MergeFrom(const PBGnssEphCommon& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssEphCommon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 gnssSvId = 1;
  void clear_gnsssvid();
  static const int kGnssSvIdFieldNumber = 1;
  ::google::protobuf::uint32 gnsssvid() const;
  void set_gnsssvid(::google::protobuf::uint32 value);

  // .PBGnssEphAction updateAction = 2;
  void clear_updateaction();
  static const int kUpdateActionFieldNumber = 2;
  ::PBGnssEphAction updateaction() const;
  void set_updateaction(::PBGnssEphAction value);

  // uint32 IODE = 3;
  void clear_iode();
  static const int kIODEFieldNumber = 3;
  ::google::protobuf::uint32 iode() const;
  void set_iode(::google::protobuf::uint32 value);

  // float aSqrt = 4;
  void clear_asqrt();
  static const int kASqrtFieldNumber = 4;
  float asqrt() const;
  void set_asqrt(float value);

  // float deltaN = 5;
  void clear_deltan();
  static const int kDeltaNFieldNumber = 5;
  float deltan() const;
  void set_deltan(float value);

  // float m0 = 6;
  void clear_m0();
  static const int kM0FieldNumber = 6;
  float m0() const;
  void set_m0(float value);

  // float eccentricity = 7;
  void clear_eccentricity();
  static const int kEccentricityFieldNumber = 7;
  float eccentricity() const;
  void set_eccentricity(float value);

  // float omega0 = 8;
  void clear_omega0();
  static const int kOmega0FieldNumber = 8;
  float omega0() const;
  void set_omega0(float value);

  // float i0 = 9;
  void clear_i0();
  static const int kI0FieldNumber = 9;
  float i0() const;
  void set_i0(float value);

  // float omega = 10;
  void clear_omega();
  static const int kOmegaFieldNumber = 10;
  float omega() const;
  void set_omega(float value);

  // float omegaDot = 11;
  void clear_omegadot();
  static const int kOmegaDotFieldNumber = 11;
  float omegadot() const;
  void set_omegadot(float value);

  // float iDot = 12;
  void clear_idot();
  static const int kIDotFieldNumber = 12;
  float idot() const;
  void set_idot(float value);

  // float cUc = 13;
  void clear_cuc();
  static const int kCUcFieldNumber = 13;
  float cuc() const;
  void set_cuc(float value);

  // float cUs = 14;
  void clear_cus();
  static const int kCUsFieldNumber = 14;
  float cus() const;
  void set_cus(float value);

  // float cRc = 15;
  void clear_crc();
  static const int kCRcFieldNumber = 15;
  float crc() const;
  void set_crc(float value);

  // float cRs = 16;
  void clear_crs();
  static const int kCRsFieldNumber = 16;
  float crs() const;
  void set_crs(float value);

  // float cIc = 17;
  void clear_cic();
  static const int kCIcFieldNumber = 17;
  float cic() const;
  void set_cic(float value);

  // float cIs = 18;
  void clear_cis();
  static const int kCIsFieldNumber = 18;
  float cis() const;
  void set_cis(float value);

  // uint32 toe = 19;
  void clear_toe();
  static const int kToeFieldNumber = 19;
  ::google::protobuf::uint32 toe() const;
  void set_toe(::google::protobuf::uint32 value);

  // uint32 toc = 20;
  void clear_toc();
  static const int kTocFieldNumber = 20;
  ::google::protobuf::uint32 toc() const;
  void set_toc(::google::protobuf::uint32 value);

  // float af0 = 21;
  void clear_af0();
  static const int kAf0FieldNumber = 21;
  float af0() const;
  void set_af0(float value);

  // float af1 = 22;
  void clear_af1();
  static const int kAf1FieldNumber = 22;
  float af1() const;
  void set_af1(float value);

  // float af2 = 23;
  void clear_af2();
  static const int kAf2FieldNumber = 23;
  float af2() const;
  void set_af2(float value);

  // @@protoc_insertion_point(class_scope:PBGnssEphCommon)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gnsssvid_;
  int updateaction_;
  ::google::protobuf::uint32 iode_;
  float asqrt_;
  float deltan_;
  float m0_;
  float eccentricity_;
  float omega0_;
  float i0_;
  float omega_;
  float omegadot_;
  float idot_;
  float cuc_;
  float cus_;
  float crc_;
  float crs_;
  float cic_;
  float cis_;
  ::google::protobuf::uint32 toe_;
  ::google::protobuf::uint32 toc_;
  float af0_;
  float af1_;
  float af2_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGpsEphemeris : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGpsEphemeris) */ {
 public:
  PBGpsEphemeris();
  virtual ~PBGpsEphemeris();

  PBGpsEphemeris(const PBGpsEphemeris& from);

  inline PBGpsEphemeris& operator=(const PBGpsEphemeris& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGpsEphemeris& default_instance();

  static inline const PBGpsEphemeris* internal_default_instance() {
    return reinterpret_cast<const PBGpsEphemeris*>(
               &_PBGpsEphemeris_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(PBGpsEphemeris* other);

  // implements Message ----------------------------------------------

  inline PBGpsEphemeris* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGpsEphemeris* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGpsEphemeris& from);
  void MergeFrom(const PBGpsEphemeris& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGpsEphemeris* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBGnssEphCommon commonEphemerisData = 1;
  bool has_commonephemerisdata() const;
  void clear_commonephemerisdata();
  static const int kCommonEphemerisDataFieldNumber = 1;
  const ::PBGnssEphCommon& commonephemerisdata() const;
  ::PBGnssEphCommon* mutable_commonephemerisdata();
  ::PBGnssEphCommon* release_commonephemerisdata();
  void set_allocated_commonephemerisdata(::PBGnssEphCommon* commonephemerisdata);

  // uint32 signalHealth = 2;
  void clear_signalhealth();
  static const int kSignalHealthFieldNumber = 2;
  ::google::protobuf::uint32 signalhealth() const;
  void set_signalhealth(::google::protobuf::uint32 value);

  // uint32 URAI = 3;
  void clear_urai();
  static const int kURAIFieldNumber = 3;
  ::google::protobuf::uint32 urai() const;
  void set_urai(::google::protobuf::uint32 value);

  // uint32 codeL2 = 4;
  void clear_codel2();
  static const int kCodeL2FieldNumber = 4;
  ::google::protobuf::uint32 codel2() const;
  void set_codel2(::google::protobuf::uint32 value);

  // uint32 dataFlagL2P = 5;
  void clear_dataflagl2p();
  static const int kDataFlagL2PFieldNumber = 5;
  ::google::protobuf::uint32 dataflagl2p() const;
  void set_dataflagl2p(::google::protobuf::uint32 value);

  // float tgd = 6;
  void clear_tgd();
  static const int kTgdFieldNumber = 6;
  float tgd() const;
  void set_tgd(float value);

  // uint32 fitInterval = 7;
  void clear_fitinterval();
  static const int kFitIntervalFieldNumber = 7;
  ::google::protobuf::uint32 fitinterval() const;
  void set_fitinterval(::google::protobuf::uint32 value);

  // uint32 IODC = 8;
  void clear_iodc();
  static const int kIODCFieldNumber = 8;
  ::google::protobuf::uint32 iodc() const;
  void set_iodc(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBGpsEphemeris)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBGnssEphCommon* commonephemerisdata_;
  ::google::protobuf::uint32 signalhealth_;
  ::google::protobuf::uint32 urai_;
  ::google::protobuf::uint32 codel2_;
  ::google::protobuf::uint32 dataflagl2p_;
  float tgd_;
  ::google::protobuf::uint32 fitinterval_;
  ::google::protobuf::uint32 iodc_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGlonassEphemeris : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGlonassEphemeris) */ {
 public:
  PBGlonassEphemeris();
  virtual ~PBGlonassEphemeris();

  PBGlonassEphemeris(const PBGlonassEphemeris& from);

  inline PBGlonassEphemeris& operator=(const PBGlonassEphemeris& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGlonassEphemeris& default_instance();

  static inline const PBGlonassEphemeris* internal_default_instance() {
    return reinterpret_cast<const PBGlonassEphemeris*>(
               &_PBGlonassEphemeris_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(PBGlonassEphemeris* other);

  // implements Message ----------------------------------------------

  inline PBGlonassEphemeris* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGlonassEphemeris* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGlonassEphemeris& from);
  void MergeFrom(const PBGlonassEphemeris& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGlonassEphemeris* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float position = 13;
  int position_size() const;
  void clear_position();
  static const int kPositionFieldNumber = 13;
  float position(int index) const;
  void set_position(int index, float value);
  void add_position(float value);
  const ::google::protobuf::RepeatedField< float >&
      position() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_position();

  // repeated float velocity = 14;
  int velocity_size() const;
  void clear_velocity();
  static const int kVelocityFieldNumber = 14;
  float velocity(int index) const;
  void set_velocity(int index, float value);
  void add_velocity(float value);
  const ::google::protobuf::RepeatedField< float >&
      velocity() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_velocity();

  // repeated float acceleration = 15;
  int acceleration_size() const;
  void clear_acceleration();
  static const int kAccelerationFieldNumber = 15;
  float acceleration(int index) const;
  void set_acceleration(int index, float value);
  void add_acceleration(float value);
  const ::google::protobuf::RepeatedField< float >&
      acceleration() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_acceleration();

  // uint32 gnssSvId = 1;
  void clear_gnsssvid();
  static const int kGnssSvIdFieldNumber = 1;
  ::google::protobuf::uint32 gnsssvid() const;
  void set_gnsssvid(::google::protobuf::uint32 value);

  // .PBGnssEphAction updateAction = 2;
  void clear_updateaction();
  static const int kUpdateActionFieldNumber = 2;
  ::PBGnssEphAction updateaction() const;
  void set_updateaction(::PBGnssEphAction value);

  // uint32 bnHealth = 3;
  void clear_bnhealth();
  static const int kBnHealthFieldNumber = 3;
  ::google::protobuf::uint32 bnhealth() const;
  void set_bnhealth(::google::protobuf::uint32 value);

  // uint32 lnHealth = 4;
  void clear_lnhealth();
  static const int kLnHealthFieldNumber = 4;
  ::google::protobuf::uint32 lnhealth() const;
  void set_lnhealth(::google::protobuf::uint32 value);

  // uint32 tb = 5;
  void clear_tb();
  static const int kTbFieldNumber = 5;
  ::google::protobuf::uint32 tb() const;
  void set_tb(::google::protobuf::uint32 value);

  // uint32 ft = 6;
  void clear_ft();
  static const int kFtFieldNumber = 6;
  ::google::protobuf::uint32 ft() const;
  void set_ft(::google::protobuf::uint32 value);

  // uint32 gloM = 7;
  void clear_glom();
  static const int kGloMFieldNumber = 7;
  ::google::protobuf::uint32 glom() const;
  void set_glom(::google::protobuf::uint32 value);

  // uint32 enAge = 8;
  void clear_enage();
  static const int kEnAgeFieldNumber = 8;
  ::google::protobuf::uint32 enage() const;
  void set_enage(::google::protobuf::uint32 value);

  // uint32 gloFrequency = 9;
  void clear_glofrequency();
  static const int kGloFrequencyFieldNumber = 9;
  ::google::protobuf::uint32 glofrequency() const;
  void set_glofrequency(::google::protobuf::uint32 value);

  // uint32 p1 = 10;
  void clear_p1();
  static const int kP1FieldNumber = 10;
  ::google::protobuf::uint32 p1() const;
  void set_p1(::google::protobuf::uint32 value);

  // uint32 p2 = 11;
  void clear_p2();
  static const int kP2FieldNumber = 11;
  ::google::protobuf::uint32 p2() const;
  void set_p2(::google::protobuf::uint32 value);

  // float deltaTau = 12;
  void clear_deltatau();
  static const int kDeltaTauFieldNumber = 12;
  float deltatau() const;
  void set_deltatau(float value);

  // float tauN = 16;
  void clear_taun();
  static const int kTauNFieldNumber = 16;
  float taun() const;
  void set_taun(float value);

  // float gamma = 17;
  void clear_gamma();
  static const int kGammaFieldNumber = 17;
  float gamma() const;
  void set_gamma(float value);

  // float toe = 18;
  void clear_toe();
  static const int kToeFieldNumber = 18;
  float toe() const;
  void set_toe(float value);

  // uint32 nt = 19;
  void clear_nt();
  static const int kNtFieldNumber = 19;
  ::google::protobuf::uint32 nt() const;
  void set_nt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBGlonassEphemeris)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > position_;
  mutable int _position_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > velocity_;
  mutable int _velocity_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > acceleration_;
  mutable int _acceleration_cached_byte_size_;
  ::google::protobuf::uint32 gnsssvid_;
  int updateaction_;
  ::google::protobuf::uint32 bnhealth_;
  ::google::protobuf::uint32 lnhealth_;
  ::google::protobuf::uint32 tb_;
  ::google::protobuf::uint32 ft_;
  ::google::protobuf::uint32 glom_;
  ::google::protobuf::uint32 enage_;
  ::google::protobuf::uint32 glofrequency_;
  ::google::protobuf::uint32 p1_;
  ::google::protobuf::uint32 p2_;
  float deltatau_;
  float taun_;
  float gamma_;
  float toe_;
  ::google::protobuf::uint32 nt_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBBdsEphemeris : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBBdsEphemeris) */ {
 public:
  PBBdsEphemeris();
  virtual ~PBBdsEphemeris();

  PBBdsEphemeris(const PBBdsEphemeris& from);

  inline PBBdsEphemeris& operator=(const PBBdsEphemeris& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBdsEphemeris& default_instance();

  static inline const PBBdsEphemeris* internal_default_instance() {
    return reinterpret_cast<const PBBdsEphemeris*>(
               &_PBBdsEphemeris_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(PBBdsEphemeris* other);

  // implements Message ----------------------------------------------

  inline PBBdsEphemeris* New() const PROTOBUF_FINAL { return New(NULL); }

  PBBdsEphemeris* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBBdsEphemeris& from);
  void MergeFrom(const PBBdsEphemeris& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBBdsEphemeris* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBGnssEphCommon commonEphemerisData = 1;
  bool has_commonephemerisdata() const;
  void clear_commonephemerisdata();
  static const int kCommonEphemerisDataFieldNumber = 1;
  const ::PBGnssEphCommon& commonephemerisdata() const;
  ::PBGnssEphCommon* mutable_commonephemerisdata();
  ::PBGnssEphCommon* release_commonephemerisdata();
  void set_allocated_commonephemerisdata(::PBGnssEphCommon* commonephemerisdata);

  // uint32 svHealth = 2;
  void clear_svhealth();
  static const int kSvHealthFieldNumber = 2;
  ::google::protobuf::uint32 svhealth() const;
  void set_svhealth(::google::protobuf::uint32 value);

  // uint32 AODC = 3;
  void clear_aodc();
  static const int kAODCFieldNumber = 3;
  ::google::protobuf::uint32 aodc() const;
  void set_aodc(::google::protobuf::uint32 value);

  // float tgd1 = 4;
  void clear_tgd1();
  static const int kTgd1FieldNumber = 4;
  float tgd1() const;
  void set_tgd1(float value);

  // float tgd2 = 5;
  void clear_tgd2();
  static const int kTgd2FieldNumber = 5;
  float tgd2() const;
  void set_tgd2(float value);

  // uint32 URAI = 6;
  void clear_urai();
  static const int kURAIFieldNumber = 6;
  ::google::protobuf::uint32 urai() const;
  void set_urai(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBBdsEphemeris)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBGnssEphCommon* commonephemerisdata_;
  ::google::protobuf::uint32 svhealth_;
  ::google::protobuf::uint32 aodc_;
  float tgd1_;
  float tgd2_;
  ::google::protobuf::uint32 urai_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGalileoEphemeris : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGalileoEphemeris) */ {
 public:
  PBGalileoEphemeris();
  virtual ~PBGalileoEphemeris();

  PBGalileoEphemeris(const PBGalileoEphemeris& from);

  inline PBGalileoEphemeris& operator=(const PBGalileoEphemeris& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGalileoEphemeris& default_instance();

  static inline const PBGalileoEphemeris* internal_default_instance() {
    return reinterpret_cast<const PBGalileoEphemeris*>(
               &_PBGalileoEphemeris_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(PBGalileoEphemeris* other);

  // implements Message ----------------------------------------------

  inline PBGalileoEphemeris* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGalileoEphemeris* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGalileoEphemeris& from);
  void MergeFrom(const PBGalileoEphemeris& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGalileoEphemeris* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBGnssEphCommon commonEphemerisData = 1;
  bool has_commonephemerisdata() const;
  void clear_commonephemerisdata();
  static const int kCommonEphemerisDataFieldNumber = 1;
  const ::PBGnssEphCommon& commonephemerisdata() const;
  ::PBGnssEphCommon* mutable_commonephemerisdata();
  ::PBGnssEphCommon* release_commonephemerisdata();
  void set_allocated_commonephemerisdata(::PBGnssEphCommon* commonephemerisdata);

  // .PBGalEphSignalSource dataSourceSignal = 2;
  void clear_datasourcesignal();
  static const int kDataSourceSignalFieldNumber = 2;
  ::PBGalEphSignalSource datasourcesignal() const;
  void set_datasourcesignal(::PBGalEphSignalSource value);

  // uint32 sisIndex = 3;
  void clear_sisindex();
  static const int kSisIndexFieldNumber = 3;
  ::google::protobuf::uint32 sisindex() const;
  void set_sisindex(::google::protobuf::uint32 value);

  // float bgdE1E5a = 4;
  void clear_bgde1e5a();
  static const int kBgdE1E5AFieldNumber = 4;
  float bgde1e5a() const;
  void set_bgde1e5a(float value);

  // float bgdE1E5b = 5;
  void clear_bgde1e5b();
  static const int kBgdE1E5BFieldNumber = 5;
  float bgde1e5b() const;
  void set_bgde1e5b(float value);

  // uint32 svHealth = 6;
  void clear_svhealth();
  static const int kSvHealthFieldNumber = 6;
  ::google::protobuf::uint32 svhealth() const;
  void set_svhealth(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBGalileoEphemeris)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBGnssEphCommon* commonephemerisdata_;
  int datasourcesignal_;
  ::google::protobuf::uint32 sisindex_;
  float bgde1e5a_;
  float bgde1e5b_;
  ::google::protobuf::uint32 svhealth_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssKlobucharIonoModel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssKlobucharIonoModel) */ {
 public:
  PBGnssKlobucharIonoModel();
  virtual ~PBGnssKlobucharIonoModel();

  PBGnssKlobucharIonoModel(const PBGnssKlobucharIonoModel& from);

  inline PBGnssKlobucharIonoModel& operator=(const PBGnssKlobucharIonoModel& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssKlobucharIonoModel& default_instance();

  static inline const PBGnssKlobucharIonoModel* internal_default_instance() {
    return reinterpret_cast<const PBGnssKlobucharIonoModel*>(
               &_PBGnssKlobucharIonoModel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(PBGnssKlobucharIonoModel* other);

  // implements Message ----------------------------------------------

  inline PBGnssKlobucharIonoModel* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssKlobucharIonoModel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssKlobucharIonoModel& from);
  void MergeFrom(const PBGnssKlobucharIonoModel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssKlobucharIonoModel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBGnssSystemTimeStructType systemTime = 2;
  bool has_systemtime() const;
  void clear_systemtime();
  static const int kSystemTimeFieldNumber = 2;
  const ::PBGnssSystemTimeStructType& systemtime() const;
  ::PBGnssSystemTimeStructType* mutable_systemtime();
  ::PBGnssSystemTimeStructType* release_systemtime();
  void set_allocated_systemtime(::PBGnssSystemTimeStructType* systemtime);

  // bool isSystemTimeValid = 1;
  void clear_issystemtimevalid();
  static const int kIsSystemTimeValidFieldNumber = 1;
  bool issystemtimevalid() const;
  void set_issystemtimevalid(bool value);

  // .PBGnss_LocSvSystemEnumType gnssConstellation = 3;
  void clear_gnssconstellation();
  static const int kGnssConstellationFieldNumber = 3;
  ::PBGnss_LocSvSystemEnumType gnssconstellation() const;
  void set_gnssconstellation(::PBGnss_LocSvSystemEnumType value);

  // float alpha0 = 4;
  void clear_alpha0();
  static const int kAlpha0FieldNumber = 4;
  float alpha0() const;
  void set_alpha0(float value);

  // float alpha1 = 5;
  void clear_alpha1();
  static const int kAlpha1FieldNumber = 5;
  float alpha1() const;
  void set_alpha1(float value);

  // float alpha2 = 6;
  void clear_alpha2();
  static const int kAlpha2FieldNumber = 6;
  float alpha2() const;
  void set_alpha2(float value);

  // float alpha3 = 7;
  void clear_alpha3();
  static const int kAlpha3FieldNumber = 7;
  float alpha3() const;
  void set_alpha3(float value);

  // float beta0 = 8;
  void clear_beta0();
  static const int kBeta0FieldNumber = 8;
  float beta0() const;
  void set_beta0(float value);

  // float beta1 = 9;
  void clear_beta1();
  static const int kBeta1FieldNumber = 9;
  float beta1() const;
  void set_beta1(float value);

  // float beta2 = 10;
  void clear_beta2();
  static const int kBeta2FieldNumber = 10;
  float beta2() const;
  void set_beta2(float value);

  // float beta3 = 11;
  void clear_beta3();
  static const int kBeta3FieldNumber = 11;
  float beta3() const;
  void set_beta3(float value);

  // @@protoc_insertion_point(class_scope:PBGnssKlobucharIonoModel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBGnssSystemTimeStructType* systemtime_;
  bool issystemtimevalid_;
  int gnssconstellation_;
  float alpha0_;
  float alpha1_;
  float alpha2_;
  float alpha3_;
  float beta0_;
  float beta1_;
  float beta2_;
  float beta3_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssAdditionalSystemInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssAdditionalSystemInfo) */ {
 public:
  PBGnssAdditionalSystemInfo();
  virtual ~PBGnssAdditionalSystemInfo();

  PBGnssAdditionalSystemInfo(const PBGnssAdditionalSystemInfo& from);

  inline PBGnssAdditionalSystemInfo& operator=(const PBGnssAdditionalSystemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssAdditionalSystemInfo& default_instance();

  static inline const PBGnssAdditionalSystemInfo* internal_default_instance() {
    return reinterpret_cast<const PBGnssAdditionalSystemInfo*>(
               &_PBGnssAdditionalSystemInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(PBGnssAdditionalSystemInfo* other);

  // implements Message ----------------------------------------------

  inline PBGnssAdditionalSystemInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssAdditionalSystemInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssAdditionalSystemInfo& from);
  void MergeFrom(const PBGnssAdditionalSystemInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssAdditionalSystemInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBGnssSystemTimeStructType systemTime = 2;
  bool has_systemtime() const;
  void clear_systemtime();
  static const int kSystemTimeFieldNumber = 2;
  const ::PBGnssSystemTimeStructType& systemtime() const;
  ::PBGnssSystemTimeStructType* mutable_systemtime();
  ::PBGnssSystemTimeStructType* release_systemtime();
  void set_allocated_systemtime(::PBGnssSystemTimeStructType* systemtime);

  // bool isSystemTimeValid = 1;
  void clear_issystemtimevalid();
  static const int kIsSystemTimeValidFieldNumber = 1;
  bool issystemtimevalid() const;
  void set_issystemtimevalid(bool value);

  // uint32 validityMask = 3;
  void clear_validitymask();
  static const int kValidityMaskFieldNumber = 3;
  ::google::protobuf::uint32 validitymask() const;
  void set_validitymask(::google::protobuf::uint32 value);

  // float tauC = 4;
  void clear_tauc();
  static const int kTauCFieldNumber = 4;
  float tauc() const;
  void set_tauc(float value);

  // uint32 leapSec = 5;
  void clear_leapsec();
  static const int kLeapSecFieldNumber = 5;
  ::google::protobuf::uint32 leapsec() const;
  void set_leapsec(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBGnssAdditionalSystemInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBGnssSystemTimeStructType* systemtime_;
  bool issystemtimevalid_;
  ::google::protobuf::uint32 validitymask_;
  float tauc_;
  ::google::protobuf::uint32 leapsec_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGpsMeasUsageInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGpsMeasUsageInfo) */ {
 public:
  PBGpsMeasUsageInfo();
  virtual ~PBGpsMeasUsageInfo();

  PBGpsMeasUsageInfo(const PBGpsMeasUsageInfo& from);

  inline PBGpsMeasUsageInfo& operator=(const PBGpsMeasUsageInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGpsMeasUsageInfo& default_instance();

  static inline const PBGpsMeasUsageInfo* internal_default_instance() {
    return reinterpret_cast<const PBGpsMeasUsageInfo*>(
               &_PBGpsMeasUsageInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(PBGpsMeasUsageInfo* other);

  // implements Message ----------------------------------------------

  inline PBGpsMeasUsageInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGpsMeasUsageInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGpsMeasUsageInfo& from);
  void MergeFrom(const PBGpsMeasUsageInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGpsMeasUsageInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 gnssSignalType = 1;
  void clear_gnsssignaltype();
  static const int kGnssSignalTypeFieldNumber = 1;
  ::google::protobuf::uint32 gnsssignaltype() const;
  void set_gnsssignaltype(::google::protobuf::uint32 value);

  // .PBGnss_LocSvSystemEnumType gnssConstellation = 2;
  void clear_gnssconstellation();
  static const int kGnssConstellationFieldNumber = 2;
  ::PBGnss_LocSvSystemEnumType gnssconstellation() const;
  void set_gnssconstellation(::PBGnss_LocSvSystemEnumType value);

  // uint32 gnssSvId = 3;
  void clear_gnsssvid();
  static const int kGnssSvIdFieldNumber = 3;
  ::google::protobuf::uint32 gnsssvid() const;
  void set_gnsssvid(::google::protobuf::uint32 value);

  // uint32 gloFrequency = 4;
  void clear_glofrequency();
  static const int kGloFrequencyFieldNumber = 4;
  ::google::protobuf::uint32 glofrequency() const;
  void set_glofrequency(::google::protobuf::uint32 value);

  // .PBCarrierPhaseAmbiguityType carrierPhaseAmbiguityType = 5;
  void clear_carrierphaseambiguitytype();
  static const int kCarrierPhaseAmbiguityTypeFieldNumber = 5;
  ::PBCarrierPhaseAmbiguityType carrierphaseambiguitytype() const;
  void set_carrierphaseambiguitytype(::PBCarrierPhaseAmbiguityType value);

  // uint32 measUsageStatusMask = 6;
  void clear_measusagestatusmask();
  static const int kMeasUsageStatusMaskFieldNumber = 6;
  ::google::protobuf::uint32 measusagestatusmask() const;
  void set_measusagestatusmask(::google::protobuf::uint32 value);

  // uint32 validityMask = 7;
  void clear_validitymask();
  static const int kValidityMaskFieldNumber = 7;
  ::google::protobuf::uint32 validitymask() const;
  void set_validitymask(::google::protobuf::uint32 value);

  // float pseudorangeResidual = 8;
  void clear_pseudorangeresidual();
  static const int kPseudorangeResidualFieldNumber = 8;
  float pseudorangeresidual() const;
  void set_pseudorangeresidual(float value);

  // float dopplerResidual = 9;
  void clear_dopplerresidual();
  static const int kDopplerResidualFieldNumber = 9;
  float dopplerresidual() const;
  void set_dopplerresidual(float value);

  // float carrierPhaseResidual = 10;
  void clear_carrierphaseresidual();
  static const int kCarrierPhaseResidualFieldNumber = 10;
  float carrierphaseresidual() const;
  void set_carrierphaseresidual(float value);

  // float carrierPhasAmbiguity = 11;
  void clear_carrierphasambiguity();
  static const int kCarrierPhasAmbiguityFieldNumber = 11;
  float carrierphasambiguity() const;
  void set_carrierphasambiguity(float value);

  // @@protoc_insertion_point(class_scope:PBGpsMeasUsageInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gnsssignaltype_;
  int gnssconstellation_;
  ::google::protobuf::uint32 gnsssvid_;
  ::google::protobuf::uint32 glofrequency_;
  int carrierphaseambiguitytype_;
  ::google::protobuf::uint32 measusagestatusmask_;
  ::google::protobuf::uint32 validitymask_;
  float pseudorangeresidual_;
  float dopplerresidual_;
  float carrierphaseresidual_;
  float carrierphasambiguity_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBLocExtDOP : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBLocExtDOP) */ {
 public:
  PBLocExtDOP();
  virtual ~PBLocExtDOP();

  PBLocExtDOP(const PBLocExtDOP& from);

  inline PBLocExtDOP& operator=(const PBLocExtDOP& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLocExtDOP& default_instance();

  static inline const PBLocExtDOP* internal_default_instance() {
    return reinterpret_cast<const PBLocExtDOP*>(
               &_PBLocExtDOP_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(PBLocExtDOP* other);

  // implements Message ----------------------------------------------

  inline PBLocExtDOP* New() const PROTOBUF_FINAL { return New(NULL); }

  PBLocExtDOP* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBLocExtDOP& from);
  void MergeFrom(const PBLocExtDOP& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBLocExtDOP* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float PDOP = 1;
  void clear_pdop();
  static const int kPDOPFieldNumber = 1;
  float pdop() const;
  void set_pdop(float value);

  // float HDOP = 2;
  void clear_hdop();
  static const int kHDOPFieldNumber = 2;
  float hdop() const;
  void set_hdop(float value);

  // float VDOP = 3;
  void clear_vdop();
  static const int kVDOPFieldNumber = 3;
  float vdop() const;
  void set_vdop(float value);

  // float GDOP = 4;
  void clear_gdop();
  static const int kGDOPFieldNumber = 4;
  float gdop() const;
  void set_gdop(float value);

  // float TDOP = 5;
  void clear_tdop();
  static const int kTDOPFieldNumber = 5;
  float tdop() const;
  void set_tdop(float value);

  // @@protoc_insertion_point(class_scope:PBLocExtDOP)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float pdop_;
  float hdop_;
  float vdop_;
  float gdop_;
  float tdop_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBSystemTimeStructUnion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBSystemTimeStructUnion) */ {
 public:
  PBSystemTimeStructUnion();
  virtual ~PBSystemTimeStructUnion();

  PBSystemTimeStructUnion(const PBSystemTimeStructUnion& from);

  inline PBSystemTimeStructUnion& operator=(const PBSystemTimeStructUnion& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSystemTimeStructUnion& default_instance();

  enum SysTimeUnionCase {
    kGpsSystemTime = 1,
    kGalSystemTime = 2,
    kBdsSystemTime = 3,
    kQzssSystemTime = 4,
    kGloSystemTime = 5,
    SYSTIMEUNION_NOT_SET = 0,
  };

  static inline const PBSystemTimeStructUnion* internal_default_instance() {
    return reinterpret_cast<const PBSystemTimeStructUnion*>(
               &_PBSystemTimeStructUnion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(PBSystemTimeStructUnion* other);

  // implements Message ----------------------------------------------

  inline PBSystemTimeStructUnion* New() const PROTOBUF_FINAL { return New(NULL); }

  PBSystemTimeStructUnion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBSystemTimeStructUnion& from);
  void MergeFrom(const PBSystemTimeStructUnion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBSystemTimeStructUnion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBGnssSystemTimeStructType gpsSystemTime = 1;
  bool has_gpssystemtime() const;
  void clear_gpssystemtime();
  static const int kGpsSystemTimeFieldNumber = 1;
  const ::PBGnssSystemTimeStructType& gpssystemtime() const;
  ::PBGnssSystemTimeStructType* mutable_gpssystemtime();
  ::PBGnssSystemTimeStructType* release_gpssystemtime();
  void set_allocated_gpssystemtime(::PBGnssSystemTimeStructType* gpssystemtime);

  // .PBGnssSystemTimeStructType galSystemTime = 2;
  bool has_galsystemtime() const;
  void clear_galsystemtime();
  static const int kGalSystemTimeFieldNumber = 2;
  const ::PBGnssSystemTimeStructType& galsystemtime() const;
  ::PBGnssSystemTimeStructType* mutable_galsystemtime();
  ::PBGnssSystemTimeStructType* release_galsystemtime();
  void set_allocated_galsystemtime(::PBGnssSystemTimeStructType* galsystemtime);

  // .PBGnssSystemTimeStructType bdsSystemTime = 3;
  bool has_bdssystemtime() const;
  void clear_bdssystemtime();
  static const int kBdsSystemTimeFieldNumber = 3;
  const ::PBGnssSystemTimeStructType& bdssystemtime() const;
  ::PBGnssSystemTimeStructType* mutable_bdssystemtime();
  ::PBGnssSystemTimeStructType* release_bdssystemtime();
  void set_allocated_bdssystemtime(::PBGnssSystemTimeStructType* bdssystemtime);

  // .PBGnssSystemTimeStructType qzssSystemTime = 4;
  bool has_qzsssystemtime() const;
  void clear_qzsssystemtime();
  static const int kQzssSystemTimeFieldNumber = 4;
  const ::PBGnssSystemTimeStructType& qzsssystemtime() const;
  ::PBGnssSystemTimeStructType* mutable_qzsssystemtime();
  ::PBGnssSystemTimeStructType* release_qzsssystemtime();
  void set_allocated_qzsssystemtime(::PBGnssSystemTimeStructType* qzsssystemtime);

  // .PBGnssGloTimeStructType gloSystemTime = 5;
  bool has_glosystemtime() const;
  void clear_glosystemtime();
  static const int kGloSystemTimeFieldNumber = 5;
  const ::PBGnssGloTimeStructType& glosystemtime() const;
  ::PBGnssGloTimeStructType* mutable_glosystemtime();
  ::PBGnssGloTimeStructType* release_glosystemtime();
  void set_allocated_glosystemtime(::PBGnssGloTimeStructType* glosystemtime);

  SysTimeUnionCase sysTimeUnion_case() const;
  // @@protoc_insertion_point(class_scope:PBSystemTimeStructUnion)
 private:
  void set_has_gpssystemtime();
  void set_has_galsystemtime();
  void set_has_bdssystemtime();
  void set_has_qzsssystemtime();
  void set_has_glosystemtime();

  inline bool has_sysTimeUnion() const;
  void clear_sysTimeUnion();
  inline void clear_has_sysTimeUnion();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union SysTimeUnionUnion {
    SysTimeUnionUnion() {}
    ::PBGnssSystemTimeStructType* gpssystemtime_;
    ::PBGnssSystemTimeStructType* galsystemtime_;
    ::PBGnssSystemTimeStructType* bdssystemtime_;
    ::PBGnssSystemTimeStructType* qzsssystemtime_;
    ::PBGnssGloTimeStructType* glosystemtime_;
  } sysTimeUnion_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssSystemTime : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssSystemTime) */ {
 public:
  PBGnssSystemTime();
  virtual ~PBGnssSystemTime();

  PBGnssSystemTime(const PBGnssSystemTime& from);

  inline PBGnssSystemTime& operator=(const PBGnssSystemTime& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssSystemTime& default_instance();

  static inline const PBGnssSystemTime* internal_default_instance() {
    return reinterpret_cast<const PBGnssSystemTime*>(
               &_PBGnssSystemTime_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(PBGnssSystemTime* other);

  // implements Message ----------------------------------------------

  inline PBGnssSystemTime* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssSystemTime* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssSystemTime& from);
  void MergeFrom(const PBGnssSystemTime& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssSystemTime* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBSystemTimeStructUnion u = 2;
  bool has_u() const;
  void clear_u();
  static const int kUFieldNumber = 2;
  const ::PBSystemTimeStructUnion& u() const;
  ::PBSystemTimeStructUnion* mutable_u();
  ::PBSystemTimeStructUnion* release_u();
  void set_allocated_u(::PBSystemTimeStructUnion* u);

  // .PBGnss_LocSvSystemEnumType gnssSystemTimeSrc = 1;
  void clear_gnsssystemtimesrc();
  static const int kGnssSystemTimeSrcFieldNumber = 1;
  ::PBGnss_LocSvSystemEnumType gnsssystemtimesrc() const;
  void set_gnsssystemtimesrc(::PBGnss_LocSvSystemEnumType value);

  // @@protoc_insertion_point(class_scope:PBGnssSystemTime)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBSystemTimeStructUnion* u_;
  int gnsssystemtimesrc_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGPSTimeStruct : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGPSTimeStruct) */ {
 public:
  PBGPSTimeStruct();
  virtual ~PBGPSTimeStruct();

  PBGPSTimeStruct(const PBGPSTimeStruct& from);

  inline PBGPSTimeStruct& operator=(const PBGPSTimeStruct& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGPSTimeStruct& default_instance();

  static inline const PBGPSTimeStruct* internal_default_instance() {
    return reinterpret_cast<const PBGPSTimeStruct*>(
               &_PBGPSTimeStruct_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(PBGPSTimeStruct* other);

  // implements Message ----------------------------------------------

  inline PBGPSTimeStruct* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGPSTimeStruct* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGPSTimeStruct& from);
  void MergeFrom(const PBGPSTimeStruct& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGPSTimeStruct* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 gpsWeek = 1;
  void clear_gpsweek();
  static const int kGpsWeekFieldNumber = 1;
  ::google::protobuf::uint32 gpsweek() const;
  void set_gpsweek(::google::protobuf::uint32 value);

  // uint32 gpsTimeOfWeekMs = 2;
  void clear_gpstimeofweekms();
  static const int kGpsTimeOfWeekMsFieldNumber = 2;
  ::google::protobuf::uint32 gpstimeofweekms() const;
  void set_gpstimeofweekms(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBGPSTimeStruct)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gpsweek_;
  ::google::protobuf::uint32 gpstimeofweekms_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssLocationPositionDynamics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssLocationPositionDynamics) */ {
 public:
  PBGnssLocationPositionDynamics();
  virtual ~PBGnssLocationPositionDynamics();

  PBGnssLocationPositionDynamics(const PBGnssLocationPositionDynamics& from);

  inline PBGnssLocationPositionDynamics& operator=(const PBGnssLocationPositionDynamics& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssLocationPositionDynamics& default_instance();

  static inline const PBGnssLocationPositionDynamics* internal_default_instance() {
    return reinterpret_cast<const PBGnssLocationPositionDynamics*>(
               &_PBGnssLocationPositionDynamics_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(PBGnssLocationPositionDynamics* other);

  // implements Message ----------------------------------------------

  inline PBGnssLocationPositionDynamics* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssLocationPositionDynamics* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssLocationPositionDynamics& from);
  void MergeFrom(const PBGnssLocationPositionDynamics& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssLocationPositionDynamics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 bodyFrameDataMask = 1;
  void clear_bodyframedatamask();
  static const int kBodyFrameDataMaskFieldNumber = 1;
  ::google::protobuf::uint32 bodyframedatamask() const;
  void set_bodyframedatamask(::google::protobuf::uint32 value);

  // float longAccel = 2;
  void clear_longaccel();
  static const int kLongAccelFieldNumber = 2;
  float longaccel() const;
  void set_longaccel(float value);

  // float latAccel = 3;
  void clear_lataccel();
  static const int kLatAccelFieldNumber = 3;
  float lataccel() const;
  void set_lataccel(float value);

  // float vertAccel = 4;
  void clear_vertaccel();
  static const int kVertAccelFieldNumber = 4;
  float vertaccel() const;
  void set_vertaccel(float value);

  // float yawRate = 5;
  void clear_yawrate();
  static const int kYawRateFieldNumber = 5;
  float yawrate() const;
  void set_yawrate(float value);

  // float pitch = 6;
  void clear_pitch();
  static const int kPitchFieldNumber = 6;
  float pitch() const;
  void set_pitch(float value);

  // float longAccelUnc = 7;
  void clear_longaccelunc();
  static const int kLongAccelUncFieldNumber = 7;
  float longaccelunc() const;
  void set_longaccelunc(float value);

  // float latAccelUnc = 8;
  void clear_lataccelunc();
  static const int kLatAccelUncFieldNumber = 8;
  float lataccelunc() const;
  void set_lataccelunc(float value);

  // float vertAccelUnc = 9;
  void clear_vertaccelunc();
  static const int kVertAccelUncFieldNumber = 9;
  float vertaccelunc() const;
  void set_vertaccelunc(float value);

  // float yawRateUnc = 10;
  void clear_yawrateunc();
  static const int kYawRateUncFieldNumber = 10;
  float yawrateunc() const;
  void set_yawrateunc(float value);

  // float pitchUnc = 11;
  void clear_pitchunc();
  static const int kPitchUncFieldNumber = 11;
  float pitchunc() const;
  void set_pitchunc(float value);

  // float pitchRate = 12;
  void clear_pitchrate();
  static const int kPitchRateFieldNumber = 12;
  float pitchrate() const;
  void set_pitchrate(float value);

  // float pitchRateUnc = 13;
  void clear_pitchrateunc();
  static const int kPitchRateUncFieldNumber = 13;
  float pitchrateunc() const;
  void set_pitchrateunc(float value);

  // float roll = 14;
  void clear_roll();
  static const int kRollFieldNumber = 14;
  float roll() const;
  void set_roll(float value);

  // float rollUnc = 15;
  void clear_rollunc();
  static const int kRollUncFieldNumber = 15;
  float rollunc() const;
  void set_rollunc(float value);

  // float rollRate = 16;
  void clear_rollrate();
  static const int kRollRateFieldNumber = 16;
  float rollrate() const;
  void set_rollrate(float value);

  // float rollRateUnc = 17;
  void clear_rollrateunc();
  static const int kRollRateUncFieldNumber = 17;
  float rollrateunc() const;
  void set_rollrateunc(float value);

  // float yaw = 18;
  void clear_yaw();
  static const int kYawFieldNumber = 18;
  float yaw() const;
  void set_yaw(float value);

  // float yawUnc = 19;
  void clear_yawunc();
  static const int kYawUncFieldNumber = 19;
  float yawunc() const;
  void set_yawunc(float value);

  // @@protoc_insertion_point(class_scope:PBGnssLocationPositionDynamics)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 bodyframedatamask_;
  float longaccel_;
  float lataccel_;
  float vertaccel_;
  float yawrate_;
  float pitch_;
  float longaccelunc_;
  float lataccelunc_;
  float vertaccelunc_;
  float yawrateunc_;
  float pitchunc_;
  float pitchrate_;
  float pitchrateunc_;
  float roll_;
  float rollunc_;
  float rollrate_;
  float rollrateunc_;
  float yaw_;
  float yawunc_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssSvUsedInPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssSvUsedInPosition) */ {
 public:
  PBGnssSvUsedInPosition();
  virtual ~PBGnssSvUsedInPosition();

  PBGnssSvUsedInPosition(const PBGnssSvUsedInPosition& from);

  inline PBGnssSvUsedInPosition& operator=(const PBGnssSvUsedInPosition& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssSvUsedInPosition& default_instance();

  static inline const PBGnssSvUsedInPosition* internal_default_instance() {
    return reinterpret_cast<const PBGnssSvUsedInPosition*>(
               &_PBGnssSvUsedInPosition_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(PBGnssSvUsedInPosition* other);

  // implements Message ----------------------------------------------

  inline PBGnssSvUsedInPosition* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssSvUsedInPosition* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssSvUsedInPosition& from);
  void MergeFrom(const PBGnssSvUsedInPosition& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssSvUsedInPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 gps_sv_used_ids_mask = 1;
  void clear_gps_sv_used_ids_mask();
  static const int kGpsSvUsedIdsMaskFieldNumber = 1;
  ::google::protobuf::uint64 gps_sv_used_ids_mask() const;
  void set_gps_sv_used_ids_mask(::google::protobuf::uint64 value);

  // uint64 glo_sv_used_ids_mask = 2;
  void clear_glo_sv_used_ids_mask();
  static const int kGloSvUsedIdsMaskFieldNumber = 2;
  ::google::protobuf::uint64 glo_sv_used_ids_mask() const;
  void set_glo_sv_used_ids_mask(::google::protobuf::uint64 value);

  // uint64 gal_sv_used_ids_mask = 3;
  void clear_gal_sv_used_ids_mask();
  static const int kGalSvUsedIdsMaskFieldNumber = 3;
  ::google::protobuf::uint64 gal_sv_used_ids_mask() const;
  void set_gal_sv_used_ids_mask(::google::protobuf::uint64 value);

  // uint64 bds_sv_used_ids_mask = 4;
  void clear_bds_sv_used_ids_mask();
  static const int kBdsSvUsedIdsMaskFieldNumber = 4;
  ::google::protobuf::uint64 bds_sv_used_ids_mask() const;
  void set_bds_sv_used_ids_mask(::google::protobuf::uint64 value);

  // uint64 qzss_sv_used_ids_mask = 5;
  void clear_qzss_sv_used_ids_mask();
  static const int kQzssSvUsedIdsMaskFieldNumber = 5;
  ::google::protobuf::uint64 qzss_sv_used_ids_mask() const;
  void set_qzss_sv_used_ids_mask(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:PBGnssSvUsedInPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 gps_sv_used_ids_mask_;
  ::google::protobuf::uint64 glo_sv_used_ids_mask_;
  ::google::protobuf::uint64 gal_sv_used_ids_mask_;
  ::google::protobuf::uint64 bds_sv_used_ids_mask_;
  ::google::protobuf::uint64 qzss_sv_used_ids_mask_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssSvMbUsedInPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssSvMbUsedInPosition) */ {
 public:
  PBGnssSvMbUsedInPosition();
  virtual ~PBGnssSvMbUsedInPosition();

  PBGnssSvMbUsedInPosition(const PBGnssSvMbUsedInPosition& from);

  inline PBGnssSvMbUsedInPosition& operator=(const PBGnssSvMbUsedInPosition& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssSvMbUsedInPosition& default_instance();

  static inline const PBGnssSvMbUsedInPosition* internal_default_instance() {
    return reinterpret_cast<const PBGnssSvMbUsedInPosition*>(
               &_PBGnssSvMbUsedInPosition_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(PBGnssSvMbUsedInPosition* other);

  // implements Message ----------------------------------------------

  inline PBGnssSvMbUsedInPosition* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssSvMbUsedInPosition* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssSvMbUsedInPosition& from);
  void MergeFrom(const PBGnssSvMbUsedInPosition& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssSvMbUsedInPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 gps_l1ca_sv_used_ids_mask = 1;
  void clear_gps_l1ca_sv_used_ids_mask();
  static const int kGpsL1CaSvUsedIdsMaskFieldNumber = 1;
  ::google::protobuf::uint64 gps_l1ca_sv_used_ids_mask() const;
  void set_gps_l1ca_sv_used_ids_mask(::google::protobuf::uint64 value);

  // uint64 gps_l1c_sv_used_ids_mask = 2;
  void clear_gps_l1c_sv_used_ids_mask();
  static const int kGpsL1CSvUsedIdsMaskFieldNumber = 2;
  ::google::protobuf::uint64 gps_l1c_sv_used_ids_mask() const;
  void set_gps_l1c_sv_used_ids_mask(::google::protobuf::uint64 value);

  // uint64 gps_l2_sv_used_ids_mask = 3;
  void clear_gps_l2_sv_used_ids_mask();
  static const int kGpsL2SvUsedIdsMaskFieldNumber = 3;
  ::google::protobuf::uint64 gps_l2_sv_used_ids_mask() const;
  void set_gps_l2_sv_used_ids_mask(::google::protobuf::uint64 value);

  // uint64 gps_l5_sv_used_ids_mask = 4;
  void clear_gps_l5_sv_used_ids_mask();
  static const int kGpsL5SvUsedIdsMaskFieldNumber = 4;
  ::google::protobuf::uint64 gps_l5_sv_used_ids_mask() const;
  void set_gps_l5_sv_used_ids_mask(::google::protobuf::uint64 value);

  // uint64 glo_g1_sv_used_ids_mask = 5;
  void clear_glo_g1_sv_used_ids_mask();
  static const int kGloG1SvUsedIdsMaskFieldNumber = 5;
  ::google::protobuf::uint64 glo_g1_sv_used_ids_mask() const;
  void set_glo_g1_sv_used_ids_mask(::google::protobuf::uint64 value);

  // uint64 glo_g2_sv_used_ids_mask = 6;
  void clear_glo_g2_sv_used_ids_mask();
  static const int kGloG2SvUsedIdsMaskFieldNumber = 6;
  ::google::protobuf::uint64 glo_g2_sv_used_ids_mask() const;
  void set_glo_g2_sv_used_ids_mask(::google::protobuf::uint64 value);

  // uint64 gal_e1_sv_used_ids_mask = 7;
  void clear_gal_e1_sv_used_ids_mask();
  static const int kGalE1SvUsedIdsMaskFieldNumber = 7;
  ::google::protobuf::uint64 gal_e1_sv_used_ids_mask() const;
  void set_gal_e1_sv_used_ids_mask(::google::protobuf::uint64 value);

  // uint64 gal_e5a_sv_used_ids_mask = 8;
  void clear_gal_e5a_sv_used_ids_mask();
  static const int kGalE5ASvUsedIdsMaskFieldNumber = 8;
  ::google::protobuf::uint64 gal_e5a_sv_used_ids_mask() const;
  void set_gal_e5a_sv_used_ids_mask(::google::protobuf::uint64 value);

  // uint64 gal_e5b_sv_used_ids_mask = 9;
  void clear_gal_e5b_sv_used_ids_mask();
  static const int kGalE5BSvUsedIdsMaskFieldNumber = 9;
  ::google::protobuf::uint64 gal_e5b_sv_used_ids_mask() const;
  void set_gal_e5b_sv_used_ids_mask(::google::protobuf::uint64 value);

  // uint64 bds_b1i_sv_used_ids_mask = 10;
  void clear_bds_b1i_sv_used_ids_mask();
  static const int kBdsB1ISvUsedIdsMaskFieldNumber = 10;
  ::google::protobuf::uint64 bds_b1i_sv_used_ids_mask() const;
  void set_bds_b1i_sv_used_ids_mask(::google::protobuf::uint64 value);

  // uint64 bds_b1c_sv_used_ids_mask = 11;
  void clear_bds_b1c_sv_used_ids_mask();
  static const int kBdsB1CSvUsedIdsMaskFieldNumber = 11;
  ::google::protobuf::uint64 bds_b1c_sv_used_ids_mask() const;
  void set_bds_b1c_sv_used_ids_mask(::google::protobuf::uint64 value);

  // uint64 bds_b2i_sv_used_ids_mask = 12;
  void clear_bds_b2i_sv_used_ids_mask();
  static const int kBdsB2ISvUsedIdsMaskFieldNumber = 12;
  ::google::protobuf::uint64 bds_b2i_sv_used_ids_mask() const;
  void set_bds_b2i_sv_used_ids_mask(::google::protobuf::uint64 value);

  // uint64 bds_b2ai_sv_used_ids_mask = 13;
  void clear_bds_b2ai_sv_used_ids_mask();
  static const int kBdsB2AiSvUsedIdsMaskFieldNumber = 13;
  ::google::protobuf::uint64 bds_b2ai_sv_used_ids_mask() const;
  void set_bds_b2ai_sv_used_ids_mask(::google::protobuf::uint64 value);

  // uint64 qzss_l1ca_sv_used_ids_mask = 14;
  void clear_qzss_l1ca_sv_used_ids_mask();
  static const int kQzssL1CaSvUsedIdsMaskFieldNumber = 14;
  ::google::protobuf::uint64 qzss_l1ca_sv_used_ids_mask() const;
  void set_qzss_l1ca_sv_used_ids_mask(::google::protobuf::uint64 value);

  // uint64 qzss_l1s_sv_used_ids_mask = 15;
  void clear_qzss_l1s_sv_used_ids_mask();
  static const int kQzssL1SSvUsedIdsMaskFieldNumber = 15;
  ::google::protobuf::uint64 qzss_l1s_sv_used_ids_mask() const;
  void set_qzss_l1s_sv_used_ids_mask(::google::protobuf::uint64 value);

  // uint64 qzss_l2_sv_used_ids_mask = 16;
  void clear_qzss_l2_sv_used_ids_mask();
  static const int kQzssL2SvUsedIdsMaskFieldNumber = 16;
  ::google::protobuf::uint64 qzss_l2_sv_used_ids_mask() const;
  void set_qzss_l2_sv_used_ids_mask(::google::protobuf::uint64 value);

  // uint64 qzss_l5_sv_used_ids_mask = 17;
  void clear_qzss_l5_sv_used_ids_mask();
  static const int kQzssL5SvUsedIdsMaskFieldNumber = 17;
  ::google::protobuf::uint64 qzss_l5_sv_used_ids_mask() const;
  void set_qzss_l5_sv_used_ids_mask(::google::protobuf::uint64 value);

  // uint64 sbas_l1_sv_used_ids_mask = 18;
  void clear_sbas_l1_sv_used_ids_mask();
  static const int kSbasL1SvUsedIdsMaskFieldNumber = 18;
  ::google::protobuf::uint64 sbas_l1_sv_used_ids_mask() const;
  void set_sbas_l1_sv_used_ids_mask(::google::protobuf::uint64 value);

  // uint64 bds_b2aq_sv_used_ids_mask = 19;
  void clear_bds_b2aq_sv_used_ids_mask();
  static const int kBdsB2AqSvUsedIdsMaskFieldNumber = 19;
  ::google::protobuf::uint64 bds_b2aq_sv_used_ids_mask() const;
  void set_bds_b2aq_sv_used_ids_mask(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:PBGnssSvMbUsedInPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 gps_l1ca_sv_used_ids_mask_;
  ::google::protobuf::uint64 gps_l1c_sv_used_ids_mask_;
  ::google::protobuf::uint64 gps_l2_sv_used_ids_mask_;
  ::google::protobuf::uint64 gps_l5_sv_used_ids_mask_;
  ::google::protobuf::uint64 glo_g1_sv_used_ids_mask_;
  ::google::protobuf::uint64 glo_g2_sv_used_ids_mask_;
  ::google::protobuf::uint64 gal_e1_sv_used_ids_mask_;
  ::google::protobuf::uint64 gal_e5a_sv_used_ids_mask_;
  ::google::protobuf::uint64 gal_e5b_sv_used_ids_mask_;
  ::google::protobuf::uint64 bds_b1i_sv_used_ids_mask_;
  ::google::protobuf::uint64 bds_b1c_sv_used_ids_mask_;
  ::google::protobuf::uint64 bds_b2i_sv_used_ids_mask_;
  ::google::protobuf::uint64 bds_b2ai_sv_used_ids_mask_;
  ::google::protobuf::uint64 qzss_l1ca_sv_used_ids_mask_;
  ::google::protobuf::uint64 qzss_l1s_sv_used_ids_mask_;
  ::google::protobuf::uint64 qzss_l2_sv_used_ids_mask_;
  ::google::protobuf::uint64 qzss_l5_sv_used_ids_mask_;
  ::google::protobuf::uint64 sbas_l1_sv_used_ids_mask_;
  ::google::protobuf::uint64 bds_b2aq_sv_used_ids_mask_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBTimespec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBTimespec) */ {
 public:
  PBTimespec();
  virtual ~PBTimespec();

  PBTimespec(const PBTimespec& from);

  inline PBTimespec& operator=(const PBTimespec& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTimespec& default_instance();

  static inline const PBTimespec* internal_default_instance() {
    return reinterpret_cast<const PBTimespec*>(
               &_PBTimespec_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(PBTimespec* other);

  // implements Message ----------------------------------------------

  inline PBTimespec* New() const PROTOBUF_FINAL { return New(NULL); }

  PBTimespec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBTimespec& from);
  void MergeFrom(const PBTimespec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBTimespec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 tv_sec = 1;
  void clear_tv_sec();
  static const int kTvSecFieldNumber = 1;
  ::google::protobuf::uint32 tv_sec() const;
  void set_tv_sec(::google::protobuf::uint32 value);

  // uint32 tv_nsec = 2;
  void clear_tv_nsec();
  static const int kTvNsecFieldNumber = 2;
  ::google::protobuf::uint32 tv_nsec() const;
  void set_tv_nsec(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBTimespec)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 tv_sec_;
  ::google::protobuf::uint32 tv_nsec_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBLeapSecondInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBLeapSecondInfo) */ {
 public:
  PBLeapSecondInfo();
  virtual ~PBLeapSecondInfo();

  PBLeapSecondInfo(const PBLeapSecondInfo& from);

  inline PBLeapSecondInfo& operator=(const PBLeapSecondInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLeapSecondInfo& default_instance();

  static inline const PBLeapSecondInfo* internal_default_instance() {
    return reinterpret_cast<const PBLeapSecondInfo*>(
               &_PBLeapSecondInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(PBLeapSecondInfo* other);

  // implements Message ----------------------------------------------

  inline PBLeapSecondInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PBLeapSecondInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBLeapSecondInfo& from);
  void MergeFrom(const PBLeapSecondInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBLeapSecondInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 leapSec = 1;
  void clear_leapsec();
  static const int kLeapSecFieldNumber = 1;
  ::google::protobuf::uint32 leapsec() const;
  void set_leapsec(::google::protobuf::uint32 value);

  // uint32 leapSecUnc = 2;
  void clear_leapsecunc();
  static const int kLeapSecUncFieldNumber = 2;
  ::google::protobuf::uint32 leapsecunc() const;
  void set_leapsecunc(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBLeapSecondInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 leapsec_;
  ::google::protobuf::uint32 leapsecunc_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBApTimeStampStructType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBApTimeStampStructType) */ {
 public:
  PBApTimeStampStructType();
  virtual ~PBApTimeStampStructType();

  PBApTimeStampStructType(const PBApTimeStampStructType& from);

  inline PBApTimeStampStructType& operator=(const PBApTimeStampStructType& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBApTimeStampStructType& default_instance();

  static inline const PBApTimeStampStructType* internal_default_instance() {
    return reinterpret_cast<const PBApTimeStampStructType*>(
               &_PBApTimeStampStructType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(PBApTimeStampStructType* other);

  // implements Message ----------------------------------------------

  inline PBApTimeStampStructType* New() const PROTOBUF_FINAL { return New(NULL); }

  PBApTimeStampStructType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBApTimeStampStructType& from);
  void MergeFrom(const PBApTimeStampStructType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBApTimeStampStructType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBTimespec apTimeStamp = 1;
  bool has_aptimestamp() const;
  void clear_aptimestamp();
  static const int kApTimeStampFieldNumber = 1;
  const ::PBTimespec& aptimestamp() const;
  ::PBTimespec* mutable_aptimestamp();
  ::PBTimespec* release_aptimestamp();
  void set_allocated_aptimestamp(::PBTimespec* aptimestamp);

  // float apTimeStampUncMs = 2;
  void clear_aptimestampuncms();
  static const int kApTimeStampUncMsFieldNumber = 2;
  float aptimestampuncms() const;
  void set_aptimestampuncms(float value);

  // @@protoc_insertion_point(class_scope:PBApTimeStampStructType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBTimespec* aptimestamp_;
  float aptimestampuncms_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBLocRcvrClockFreqInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBLocRcvrClockFreqInfo) */ {
 public:
  PBLocRcvrClockFreqInfo();
  virtual ~PBLocRcvrClockFreqInfo();

  PBLocRcvrClockFreqInfo(const PBLocRcvrClockFreqInfo& from);

  inline PBLocRcvrClockFreqInfo& operator=(const PBLocRcvrClockFreqInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLocRcvrClockFreqInfo& default_instance();

  static inline const PBLocRcvrClockFreqInfo* internal_default_instance() {
    return reinterpret_cast<const PBLocRcvrClockFreqInfo*>(
               &_PBLocRcvrClockFreqInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(PBLocRcvrClockFreqInfo* other);

  // implements Message ----------------------------------------------

  inline PBLocRcvrClockFreqInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PBLocRcvrClockFreqInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBLocRcvrClockFreqInfo& from);
  void MergeFrom(const PBLocRcvrClockFreqInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBLocRcvrClockFreqInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float clockDrift = 1;
  void clear_clockdrift();
  static const int kClockDriftFieldNumber = 1;
  float clockdrift() const;
  void set_clockdrift(float value);

  // float clockDriftUnc = 2;
  void clear_clockdriftunc();
  static const int kClockDriftUncFieldNumber = 2;
  float clockdriftunc() const;
  void set_clockdriftunc(float value);

  // .PBLocSourceofFreqEnumType sourceOfFreq = 3;
  void clear_sourceoffreq();
  static const int kSourceOfFreqFieldNumber = 3;
  ::PBLocSourceofFreqEnumType sourceoffreq() const;
  void set_sourceoffreq(::PBLocSourceofFreqEnumType value);

  // @@protoc_insertion_point(class_scope:PBLocRcvrClockFreqInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float clockdrift_;
  float clockdriftunc_;
  int sourceoffreq_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssInterSystemBias : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssInterSystemBias) */ {
 public:
  PBGnssInterSystemBias();
  virtual ~PBGnssInterSystemBias();

  PBGnssInterSystemBias(const PBGnssInterSystemBias& from);

  inline PBGnssInterSystemBias& operator=(const PBGnssInterSystemBias& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssInterSystemBias& default_instance();

  static inline const PBGnssInterSystemBias* internal_default_instance() {
    return reinterpret_cast<const PBGnssInterSystemBias*>(
               &_PBGnssInterSystemBias_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(PBGnssInterSystemBias* other);

  // implements Message ----------------------------------------------

  inline PBGnssInterSystemBias* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssInterSystemBias* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssInterSystemBias& from);
  void MergeFrom(const PBGnssInterSystemBias& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssInterSystemBias* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 validMask = 1;
  void clear_validmask();
  static const int kValidMaskFieldNumber = 1;
  ::google::protobuf::uint32 validmask() const;
  void set_validmask(::google::protobuf::uint32 value);

  // float timeBias = 2;
  void clear_timebias();
  static const int kTimeBiasFieldNumber = 2;
  float timebias() const;
  void set_timebias(float value);

  // float timeBiasUnc = 3;
  void clear_timebiasunc();
  static const int kTimeBiasUncFieldNumber = 3;
  float timebiasunc() const;
  void set_timebiasunc(float value);

  // @@protoc_insertion_point(class_scope:PBGnssInterSystemBias)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 validmask_;
  float timebias_;
  float timebiasunc_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssSystemTimeStructType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssSystemTimeStructType) */ {
 public:
  PBGnssSystemTimeStructType();
  virtual ~PBGnssSystemTimeStructType();

  PBGnssSystemTimeStructType(const PBGnssSystemTimeStructType& from);

  inline PBGnssSystemTimeStructType& operator=(const PBGnssSystemTimeStructType& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssSystemTimeStructType& default_instance();

  static inline const PBGnssSystemTimeStructType* internal_default_instance() {
    return reinterpret_cast<const PBGnssSystemTimeStructType*>(
               &_PBGnssSystemTimeStructType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(PBGnssSystemTimeStructType* other);

  // implements Message ----------------------------------------------

  inline PBGnssSystemTimeStructType* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssSystemTimeStructType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssSystemTimeStructType& from);
  void MergeFrom(const PBGnssSystemTimeStructType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssSystemTimeStructType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 validityMask = 1;
  void clear_validitymask();
  static const int kValidityMaskFieldNumber = 1;
  ::google::protobuf::uint32 validitymask() const;
  void set_validitymask(::google::protobuf::uint32 value);

  // uint32 systemWeek = 2;
  void clear_systemweek();
  static const int kSystemWeekFieldNumber = 2;
  ::google::protobuf::uint32 systemweek() const;
  void set_systemweek(::google::protobuf::uint32 value);

  // uint32 systemMsec = 3;
  void clear_systemmsec();
  static const int kSystemMsecFieldNumber = 3;
  ::google::protobuf::uint32 systemmsec() const;
  void set_systemmsec(::google::protobuf::uint32 value);

  // float systemClkTimeBias = 4;
  void clear_systemclktimebias();
  static const int kSystemClkTimeBiasFieldNumber = 4;
  float systemclktimebias() const;
  void set_systemclktimebias(float value);

  // float systemClkTimeUncMs = 5;
  void clear_systemclktimeuncms();
  static const int kSystemClkTimeUncMsFieldNumber = 5;
  float systemclktimeuncms() const;
  void set_systemclktimeuncms(float value);

  // uint32 refFCount = 6;
  void clear_reffcount();
  static const int kRefFCountFieldNumber = 6;
  ::google::protobuf::uint32 reffcount() const;
  void set_reffcount(::google::protobuf::uint32 value);

  // uint32 numClockResets = 7;
  void clear_numclockresets();
  static const int kNumClockResetsFieldNumber = 7;
  ::google::protobuf::uint32 numclockresets() const;
  void set_numclockresets(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBGnssSystemTimeStructType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 validitymask_;
  ::google::protobuf::uint32 systemweek_;
  ::google::protobuf::uint32 systemmsec_;
  float systemclktimebias_;
  float systemclktimeuncms_;
  ::google::protobuf::uint32 reffcount_;
  ::google::protobuf::uint32 numclockresets_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssGloTimeStructType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssGloTimeStructType) */ {
 public:
  PBGnssGloTimeStructType();
  virtual ~PBGnssGloTimeStructType();

  PBGnssGloTimeStructType(const PBGnssGloTimeStructType& from);

  inline PBGnssGloTimeStructType& operator=(const PBGnssGloTimeStructType& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssGloTimeStructType& default_instance();

  static inline const PBGnssGloTimeStructType* internal_default_instance() {
    return reinterpret_cast<const PBGnssGloTimeStructType*>(
               &_PBGnssGloTimeStructType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(PBGnssGloTimeStructType* other);

  // implements Message ----------------------------------------------

  inline PBGnssGloTimeStructType* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssGloTimeStructType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssGloTimeStructType& from);
  void MergeFrom(const PBGnssGloTimeStructType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssGloTimeStructType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 gloDays = 1;
  void clear_glodays();
  static const int kGloDaysFieldNumber = 1;
  ::google::protobuf::uint32 glodays() const;
  void set_glodays(::google::protobuf::uint32 value);

  // uint32 validityMask = 2;
  void clear_validitymask();
  static const int kValidityMaskFieldNumber = 2;
  ::google::protobuf::uint32 validitymask() const;
  void set_validitymask(::google::protobuf::uint32 value);

  // uint32 gloMsec = 3;
  void clear_glomsec();
  static const int kGloMsecFieldNumber = 3;
  ::google::protobuf::uint32 glomsec() const;
  void set_glomsec(::google::protobuf::uint32 value);

  // float gloClkTimeBias = 4;
  void clear_gloclktimebias();
  static const int kGloClkTimeBiasFieldNumber = 4;
  float gloclktimebias() const;
  void set_gloclktimebias(float value);

  // float gloClkTimeUncMs = 5;
  void clear_gloclktimeuncms();
  static const int kGloClkTimeUncMsFieldNumber = 5;
  float gloclktimeuncms() const;
  void set_gloclktimeuncms(float value);

  // uint32 refFCount = 6;
  void clear_reffcount();
  static const int kRefFCountFieldNumber = 6;
  ::google::protobuf::uint32 reffcount() const;
  void set_reffcount(::google::protobuf::uint32 value);

  // uint32 numClockResets = 7;
  void clear_numclockresets();
  static const int kNumClockResetsFieldNumber = 7;
  ::google::protobuf::uint32 numclockresets() const;
  void set_numclockresets(::google::protobuf::uint32 value);

  // uint32 gloFourYear = 8;
  void clear_glofouryear();
  static const int kGloFourYearFieldNumber = 8;
  ::google::protobuf::uint32 glofouryear() const;
  void set_glofouryear(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBGnssGloTimeStructType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 glodays_;
  ::google::protobuf::uint32 validitymask_;
  ::google::protobuf::uint32 glomsec_;
  float gloclktimebias_;
  float gloclktimeuncms_;
  ::google::protobuf::uint32 reffcount_;
  ::google::protobuf::uint32 numclockresets_;
  ::google::protobuf::uint32 glofouryear_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBLocGnssTimeExtInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBLocGnssTimeExtInfo) */ {
 public:
  PBLocGnssTimeExtInfo();
  virtual ~PBLocGnssTimeExtInfo();

  PBLocGnssTimeExtInfo(const PBLocGnssTimeExtInfo& from);

  inline PBLocGnssTimeExtInfo& operator=(const PBLocGnssTimeExtInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLocGnssTimeExtInfo& default_instance();

  static inline const PBLocGnssTimeExtInfo* internal_default_instance() {
    return reinterpret_cast<const PBLocGnssTimeExtInfo*>(
               &_PBLocGnssTimeExtInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(PBLocGnssTimeExtInfo* other);

  // implements Message ----------------------------------------------

  inline PBLocGnssTimeExtInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PBLocGnssTimeExtInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBLocGnssTimeExtInfo& from);
  void MergeFrom(const PBLocGnssTimeExtInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBLocGnssTimeExtInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 systemRtcMs = 2;
  void clear_systemrtcms();
  static const int kSystemRtcMsFieldNumber = 2;
  ::google::protobuf::uint64 systemrtcms() const;
  void set_systemrtcms(::google::protobuf::uint64 value);

  // bool systemRtcValid = 1;
  void clear_systemrtcvalid();
  static const int kSystemRtcValidFieldNumber = 1;
  bool systemrtcvalid() const;
  void set_systemrtcvalid(bool value);

  // @@protoc_insertion_point(class_scope:PBLocGnssTimeExtInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 systemrtcms_;
  bool systemrtcvalid_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssSvMeasurementHeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssSvMeasurementHeader) */ {
 public:
  PBGnssSvMeasurementHeader();
  virtual ~PBGnssSvMeasurementHeader();

  PBGnssSvMeasurementHeader(const PBGnssSvMeasurementHeader& from);

  inline PBGnssSvMeasurementHeader& operator=(const PBGnssSvMeasurementHeader& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssSvMeasurementHeader& default_instance();

  static inline const PBGnssSvMeasurementHeader* internal_default_instance() {
    return reinterpret_cast<const PBGnssSvMeasurementHeader*>(
               &_PBGnssSvMeasurementHeader_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(PBGnssSvMeasurementHeader* other);

  // implements Message ----------------------------------------------

  inline PBGnssSvMeasurementHeader* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssSvMeasurementHeader* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssSvMeasurementHeader& from);
  void MergeFrom(const PBGnssSvMeasurementHeader& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssSvMeasurementHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBLeapSecondInfo leapSec = 2;
  bool has_leapsec() const;
  void clear_leapsec();
  static const int kLeapSecFieldNumber = 2;
  const ::PBLeapSecondInfo& leapsec() const;
  ::PBLeapSecondInfo* mutable_leapsec();
  ::PBLeapSecondInfo* release_leapsec();
  void set_allocated_leapsec(::PBLeapSecondInfo* leapsec);

  // .PBLocRcvrClockFreqInfo clockFreq = 3;
  bool has_clockfreq() const;
  void clear_clockfreq();
  static const int kClockFreqFieldNumber = 3;
  const ::PBLocRcvrClockFreqInfo& clockfreq() const;
  ::PBLocRcvrClockFreqInfo* mutable_clockfreq();
  ::PBLocRcvrClockFreqInfo* release_clockfreq();
  void set_allocated_clockfreq(::PBLocRcvrClockFreqInfo* clockfreq);

  // .PBApTimeStampStructType apBootTimeStamp = 4;
  bool has_apboottimestamp() const;
  void clear_apboottimestamp();
  static const int kApBootTimeStampFieldNumber = 4;
  const ::PBApTimeStampStructType& apboottimestamp() const;
  ::PBApTimeStampStructType* mutable_apboottimestamp();
  ::PBApTimeStampStructType* release_apboottimestamp();
  void set_allocated_apboottimestamp(::PBApTimeStampStructType* apboottimestamp);

  // .PBGnssInterSystemBias gpsGloInterSystemBias = 5;
  bool has_gpsglointersystembias() const;
  void clear_gpsglointersystembias();
  static const int kGpsGloInterSystemBiasFieldNumber = 5;
  const ::PBGnssInterSystemBias& gpsglointersystembias() const;
  ::PBGnssInterSystemBias* mutable_gpsglointersystembias();
  ::PBGnssInterSystemBias* release_gpsglointersystembias();
  void set_allocated_gpsglointersystembias(::PBGnssInterSystemBias* gpsglointersystembias);

  // .PBGnssInterSystemBias gpsBdsInterSystemBias = 6;
  bool has_gpsbdsintersystembias() const;
  void clear_gpsbdsintersystembias();
  static const int kGpsBdsInterSystemBiasFieldNumber = 6;
  const ::PBGnssInterSystemBias& gpsbdsintersystembias() const;
  ::PBGnssInterSystemBias* mutable_gpsbdsintersystembias();
  ::PBGnssInterSystemBias* release_gpsbdsintersystembias();
  void set_allocated_gpsbdsintersystembias(::PBGnssInterSystemBias* gpsbdsintersystembias);

  // .PBGnssInterSystemBias gpsGalInterSystemBias = 7;
  bool has_gpsgalintersystembias() const;
  void clear_gpsgalintersystembias();
  static const int kGpsGalInterSystemBiasFieldNumber = 7;
  const ::PBGnssInterSystemBias& gpsgalintersystembias() const;
  ::PBGnssInterSystemBias* mutable_gpsgalintersystembias();
  ::PBGnssInterSystemBias* release_gpsgalintersystembias();
  void set_allocated_gpsgalintersystembias(::PBGnssInterSystemBias* gpsgalintersystembias);

  // .PBGnssInterSystemBias bdsGloInterSystemBias = 8;
  bool has_bdsglointersystembias() const;
  void clear_bdsglointersystembias();
  static const int kBdsGloInterSystemBiasFieldNumber = 8;
  const ::PBGnssInterSystemBias& bdsglointersystembias() const;
  ::PBGnssInterSystemBias* mutable_bdsglointersystembias();
  ::PBGnssInterSystemBias* release_bdsglointersystembias();
  void set_allocated_bdsglointersystembias(::PBGnssInterSystemBias* bdsglointersystembias);

  // .PBGnssInterSystemBias galGloInterSystemBias = 9;
  bool has_galglointersystembias() const;
  void clear_galglointersystembias();
  static const int kGalGloInterSystemBiasFieldNumber = 9;
  const ::PBGnssInterSystemBias& galglointersystembias() const;
  ::PBGnssInterSystemBias* mutable_galglointersystembias();
  ::PBGnssInterSystemBias* release_galglointersystembias();
  void set_allocated_galglointersystembias(::PBGnssInterSystemBias* galglointersystembias);

  // .PBGnssInterSystemBias galBdsInterSystemBias = 10;
  bool has_galbdsintersystembias() const;
  void clear_galbdsintersystembias();
  static const int kGalBdsInterSystemBiasFieldNumber = 10;
  const ::PBGnssInterSystemBias& galbdsintersystembias() const;
  ::PBGnssInterSystemBias* mutable_galbdsintersystembias();
  ::PBGnssInterSystemBias* release_galbdsintersystembias();
  void set_allocated_galbdsintersystembias(::PBGnssInterSystemBias* galbdsintersystembias);

  // .PBGnssInterSystemBias gpsL1L5TimeBias = 11;
  bool has_gpsl1l5timebias() const;
  void clear_gpsl1l5timebias();
  static const int kGpsL1L5TimeBiasFieldNumber = 11;
  const ::PBGnssInterSystemBias& gpsl1l5timebias() const;
  ::PBGnssInterSystemBias* mutable_gpsl1l5timebias();
  ::PBGnssInterSystemBias* release_gpsl1l5timebias();
  void set_allocated_gpsl1l5timebias(::PBGnssInterSystemBias* gpsl1l5timebias);

  // .PBGnssInterSystemBias galE1E5aTimeBias = 12;
  bool has_gale1e5atimebias() const;
  void clear_gale1e5atimebias();
  static const int kGalE1E5ATimeBiasFieldNumber = 12;
  const ::PBGnssInterSystemBias& gale1e5atimebias() const;
  ::PBGnssInterSystemBias* mutable_gale1e5atimebias();
  ::PBGnssInterSystemBias* release_gale1e5atimebias();
  void set_allocated_gale1e5atimebias(::PBGnssInterSystemBias* gale1e5atimebias);

  // .PBGnssSystemTimeStructType gpsSystemTime = 13;
  bool has_gpssystemtime() const;
  void clear_gpssystemtime();
  static const int kGpsSystemTimeFieldNumber = 13;
  const ::PBGnssSystemTimeStructType& gpssystemtime() const;
  ::PBGnssSystemTimeStructType* mutable_gpssystemtime();
  ::PBGnssSystemTimeStructType* release_gpssystemtime();
  void set_allocated_gpssystemtime(::PBGnssSystemTimeStructType* gpssystemtime);

  // .PBGnssSystemTimeStructType galSystemTime = 14;
  bool has_galsystemtime() const;
  void clear_galsystemtime();
  static const int kGalSystemTimeFieldNumber = 14;
  const ::PBGnssSystemTimeStructType& galsystemtime() const;
  ::PBGnssSystemTimeStructType* mutable_galsystemtime();
  ::PBGnssSystemTimeStructType* release_galsystemtime();
  void set_allocated_galsystemtime(::PBGnssSystemTimeStructType* galsystemtime);

  // .PBGnssSystemTimeStructType bdsSystemTime = 15;
  bool has_bdssystemtime() const;
  void clear_bdssystemtime();
  static const int kBdsSystemTimeFieldNumber = 15;
  const ::PBGnssSystemTimeStructType& bdssystemtime() const;
  ::PBGnssSystemTimeStructType* mutable_bdssystemtime();
  ::PBGnssSystemTimeStructType* release_bdssystemtime();
  void set_allocated_bdssystemtime(::PBGnssSystemTimeStructType* bdssystemtime);

  // .PBGnssSystemTimeStructType qzssSystemTime = 16;
  bool has_qzsssystemtime() const;
  void clear_qzsssystemtime();
  static const int kQzssSystemTimeFieldNumber = 16;
  const ::PBGnssSystemTimeStructType& qzsssystemtime() const;
  ::PBGnssSystemTimeStructType* mutable_qzsssystemtime();
  ::PBGnssSystemTimeStructType* release_qzsssystemtime();
  void set_allocated_qzsssystemtime(::PBGnssSystemTimeStructType* qzsssystemtime);

  // .PBGnssGloTimeStructType gloSystemTime = 17;
  bool has_glosystemtime() const;
  void clear_glosystemtime();
  static const int kGloSystemTimeFieldNumber = 17;
  const ::PBGnssGloTimeStructType& glosystemtime() const;
  ::PBGnssGloTimeStructType* mutable_glosystemtime();
  ::PBGnssGloTimeStructType* release_glosystemtime();
  void set_allocated_glosystemtime(::PBGnssGloTimeStructType* glosystemtime);

  // .PBLocGnssTimeExtInfo gpsSystemTimeExt = 18;
  bool has_gpssystemtimeext() const;
  void clear_gpssystemtimeext();
  static const int kGpsSystemTimeExtFieldNumber = 18;
  const ::PBLocGnssTimeExtInfo& gpssystemtimeext() const;
  ::PBLocGnssTimeExtInfo* mutable_gpssystemtimeext();
  ::PBLocGnssTimeExtInfo* release_gpssystemtimeext();
  void set_allocated_gpssystemtimeext(::PBLocGnssTimeExtInfo* gpssystemtimeext);

  // .PBLocGnssTimeExtInfo galSystemTimeExt = 19;
  bool has_galsystemtimeext() const;
  void clear_galsystemtimeext();
  static const int kGalSystemTimeExtFieldNumber = 19;
  const ::PBLocGnssTimeExtInfo& galsystemtimeext() const;
  ::PBLocGnssTimeExtInfo* mutable_galsystemtimeext();
  ::PBLocGnssTimeExtInfo* release_galsystemtimeext();
  void set_allocated_galsystemtimeext(::PBLocGnssTimeExtInfo* galsystemtimeext);

  // .PBLocGnssTimeExtInfo bdsSystemTimeExt = 20;
  bool has_bdssystemtimeext() const;
  void clear_bdssystemtimeext();
  static const int kBdsSystemTimeExtFieldNumber = 20;
  const ::PBLocGnssTimeExtInfo& bdssystemtimeext() const;
  ::PBLocGnssTimeExtInfo* mutable_bdssystemtimeext();
  ::PBLocGnssTimeExtInfo* release_bdssystemtimeext();
  void set_allocated_bdssystemtimeext(::PBLocGnssTimeExtInfo* bdssystemtimeext);

  // .PBLocGnssTimeExtInfo qzssSystemTimeExt = 21;
  bool has_qzsssystemtimeext() const;
  void clear_qzsssystemtimeext();
  static const int kQzssSystemTimeExtFieldNumber = 21;
  const ::PBLocGnssTimeExtInfo& qzsssystemtimeext() const;
  ::PBLocGnssTimeExtInfo* mutable_qzsssystemtimeext();
  ::PBLocGnssTimeExtInfo* release_qzsssystemtimeext();
  void set_allocated_qzsssystemtimeext(::PBLocGnssTimeExtInfo* qzsssystemtimeext);

  // .PBLocGnssTimeExtInfo gloSystemTimeExt = 22;
  bool has_glosystemtimeext() const;
  void clear_glosystemtimeext();
  static const int kGloSystemTimeExtFieldNumber = 22;
  const ::PBLocGnssTimeExtInfo& glosystemtimeext() const;
  ::PBLocGnssTimeExtInfo* mutable_glosystemtimeext();
  ::PBLocGnssTimeExtInfo* release_glosystemtimeext();
  void set_allocated_glosystemtimeext(::PBLocGnssTimeExtInfo* glosystemtimeext);

  // uint64 flags = 1;
  void clear_flags();
  static const int kFlagsFieldNumber = 1;
  ::google::protobuf::uint64 flags() const;
  void set_flags(::google::protobuf::uint64 value);

  // uint64 refCountTicks = 23;
  void clear_refcountticks();
  static const int kRefCountTicksFieldNumber = 23;
  ::google::protobuf::uint64 refcountticks() const;
  void set_refcountticks(::google::protobuf::uint64 value);

  // .PBLocDgnssCorrectionSourceType dgnssCorrectionSourceType = 24;
  void clear_dgnsscorrectionsourcetype();
  static const int kDgnssCorrectionSourceTypeFieldNumber = 24;
  ::PBLocDgnssCorrectionSourceType dgnsscorrectionsourcetype() const;
  void set_dgnsscorrectionsourcetype(::PBLocDgnssCorrectionSourceType value);

  // uint32 dgnssCorrectionSourceID = 25;
  void clear_dgnsscorrectionsourceid();
  static const int kDgnssCorrectionSourceIDFieldNumber = 25;
  ::google::protobuf::uint32 dgnsscorrectionsourceid() const;
  void set_dgnsscorrectionsourceid(::google::protobuf::uint32 value);

  // uint32 dgnssRefStationId = 26;
  void clear_dgnssrefstationid();
  static const int kDgnssRefStationIdFieldNumber = 26;
  ::google::protobuf::uint32 dgnssrefstationid() const;
  void set_dgnssrefstationid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBGnssSvMeasurementHeader)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBLeapSecondInfo* leapsec_;
  ::PBLocRcvrClockFreqInfo* clockfreq_;
  ::PBApTimeStampStructType* apboottimestamp_;
  ::PBGnssInterSystemBias* gpsglointersystembias_;
  ::PBGnssInterSystemBias* gpsbdsintersystembias_;
  ::PBGnssInterSystemBias* gpsgalintersystembias_;
  ::PBGnssInterSystemBias* bdsglointersystembias_;
  ::PBGnssInterSystemBias* galglointersystembias_;
  ::PBGnssInterSystemBias* galbdsintersystembias_;
  ::PBGnssInterSystemBias* gpsl1l5timebias_;
  ::PBGnssInterSystemBias* gale1e5atimebias_;
  ::PBGnssSystemTimeStructType* gpssystemtime_;
  ::PBGnssSystemTimeStructType* galsystemtime_;
  ::PBGnssSystemTimeStructType* bdssystemtime_;
  ::PBGnssSystemTimeStructType* qzsssystemtime_;
  ::PBGnssGloTimeStructType* glosystemtime_;
  ::PBLocGnssTimeExtInfo* gpssystemtimeext_;
  ::PBLocGnssTimeExtInfo* galsystemtimeext_;
  ::PBLocGnssTimeExtInfo* bdssystemtimeext_;
  ::PBLocGnssTimeExtInfo* qzsssystemtimeext_;
  ::PBLocGnssTimeExtInfo* glosystemtimeext_;
  ::google::protobuf::uint64 flags_;
  ::google::protobuf::uint64 refcountticks_;
  int dgnsscorrectionsourcetype_;
  ::google::protobuf::uint32 dgnsscorrectionsourceid_;
  ::google::protobuf::uint32 dgnssrefstationid_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBSVTimeSpeedInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBSVTimeSpeedInfo) */ {
 public:
  PBSVTimeSpeedInfo();
  virtual ~PBSVTimeSpeedInfo();

  PBSVTimeSpeedInfo(const PBSVTimeSpeedInfo& from);

  inline PBSVTimeSpeedInfo& operator=(const PBSVTimeSpeedInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSVTimeSpeedInfo& default_instance();

  static inline const PBSVTimeSpeedInfo* internal_default_instance() {
    return reinterpret_cast<const PBSVTimeSpeedInfo*>(
               &_PBSVTimeSpeedInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(PBSVTimeSpeedInfo* other);

  // implements Message ----------------------------------------------

  inline PBSVTimeSpeedInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PBSVTimeSpeedInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBSVTimeSpeedInfo& from);
  void MergeFrom(const PBSVTimeSpeedInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBSVTimeSpeedInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 svMs = 1;
  void clear_svms();
  static const int kSvMsFieldNumber = 1;
  ::google::protobuf::uint32 svms() const;
  void set_svms(::google::protobuf::uint32 value);

  // float svSubMs = 2;
  void clear_svsubms();
  static const int kSvSubMsFieldNumber = 2;
  float svsubms() const;
  void set_svsubms(float value);

  // float svTimeUncMs = 3;
  void clear_svtimeuncms();
  static const int kSvTimeUncMsFieldNumber = 3;
  float svtimeuncms() const;
  void set_svtimeuncms(float value);

  // float dopplerShift = 4;
  void clear_dopplershift();
  static const int kDopplerShiftFieldNumber = 4;
  float dopplershift() const;
  void set_dopplershift(float value);

  // float dopplerShiftUnc = 5;
  void clear_dopplershiftunc();
  static const int kDopplerShiftUncFieldNumber = 5;
  float dopplershiftunc() const;
  void set_dopplershiftunc(float value);

  // @@protoc_insertion_point(class_scope:PBSVTimeSpeedInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 svms_;
  float svsubms_;
  float svtimeuncms_;
  float dopplershift_;
  float dopplershiftunc_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBLeverArmParams : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBLeverArmParams) */ {
 public:
  PBLeverArmParams();
  virtual ~PBLeverArmParams();

  PBLeverArmParams(const PBLeverArmParams& from);

  inline PBLeverArmParams& operator=(const PBLeverArmParams& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLeverArmParams& default_instance();

  static inline const PBLeverArmParams* internal_default_instance() {
    return reinterpret_cast<const PBLeverArmParams*>(
               &_PBLeverArmParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(PBLeverArmParams* other);

  // implements Message ----------------------------------------------

  inline PBLeverArmParams* New() const PROTOBUF_FINAL { return New(NULL); }

  PBLeverArmParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBLeverArmParams& from);
  void MergeFrom(const PBLeverArmParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBLeverArmParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float forwardOffsetMeters = 1;
  void clear_forwardoffsetmeters();
  static const int kForwardOffsetMetersFieldNumber = 1;
  float forwardoffsetmeters() const;
  void set_forwardoffsetmeters(float value);

  // float sidewaysOffsetMeters = 2;
  void clear_sidewaysoffsetmeters();
  static const int kSidewaysOffsetMetersFieldNumber = 2;
  float sidewaysoffsetmeters() const;
  void set_sidewaysoffsetmeters(float value);

  // float upOffsetMeters = 3;
  void clear_upoffsetmeters();
  static const int kUpOffsetMetersFieldNumber = 3;
  float upoffsetmeters() const;
  void set_upoffsetmeters(float value);

  // @@protoc_insertion_point(class_scope:PBLeverArmParams)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float forwardoffsetmeters_;
  float sidewaysoffsetmeters_;
  float upoffsetmeters_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBLeverArmConfigInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBLeverArmConfigInfo) */ {
 public:
  PBLeverArmConfigInfo();
  virtual ~PBLeverArmConfigInfo();

  PBLeverArmConfigInfo(const PBLeverArmConfigInfo& from);

  inline PBLeverArmConfigInfo& operator=(const PBLeverArmConfigInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLeverArmConfigInfo& default_instance();

  static inline const PBLeverArmConfigInfo* internal_default_instance() {
    return reinterpret_cast<const PBLeverArmConfigInfo*>(
               &_PBLeverArmConfigInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(PBLeverArmConfigInfo* other);

  // implements Message ----------------------------------------------

  inline PBLeverArmConfigInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PBLeverArmConfigInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBLeverArmConfigInfo& from);
  void MergeFrom(const PBLeverArmConfigInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBLeverArmConfigInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBLeverArmParams gnssToVRP = 2;
  bool has_gnsstovrp() const;
  void clear_gnsstovrp();
  static const int kGnssToVRPFieldNumber = 2;
  const ::PBLeverArmParams& gnsstovrp() const;
  ::PBLeverArmParams* mutable_gnsstovrp();
  ::PBLeverArmParams* release_gnsstovrp();
  void set_allocated_gnsstovrp(::PBLeverArmParams* gnsstovrp);

  // .PBLeverArmParams drImuToGnss = 3;
  bool has_drimutognss() const;
  void clear_drimutognss();
  static const int kDrImuToGnssFieldNumber = 3;
  const ::PBLeverArmParams& drimutognss() const;
  ::PBLeverArmParams* mutable_drimutognss();
  ::PBLeverArmParams* release_drimutognss();
  void set_allocated_drimutognss(::PBLeverArmParams* drimutognss);

  // .PBLeverArmParams veppImuToGnss = 4;
  bool has_veppimutognss() const;
  void clear_veppimutognss();
  static const int kVeppImuToGnssFieldNumber = 4;
  const ::PBLeverArmParams& veppimutognss() const;
  ::PBLeverArmParams* mutable_veppimutognss();
  ::PBLeverArmParams* release_veppimutognss();
  void set_allocated_veppimutognss(::PBLeverArmParams* veppimutognss);

  // uint32 leverArmValidMask = 1;
  void clear_leverarmvalidmask();
  static const int kLeverArmValidMaskFieldNumber = 1;
  ::google::protobuf::uint32 leverarmvalidmask() const;
  void set_leverarmvalidmask(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBLeverArmConfigInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBLeverArmParams* gnsstovrp_;
  ::PBLeverArmParams* drimutognss_;
  ::PBLeverArmParams* veppimutognss_;
  ::google::protobuf::uint32 leverarmvalidmask_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBBodyToSensorMountParams : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBBodyToSensorMountParams) */ {
 public:
  PBBodyToSensorMountParams();
  virtual ~PBBodyToSensorMountParams();

  PBBodyToSensorMountParams(const PBBodyToSensorMountParams& from);

  inline PBBodyToSensorMountParams& operator=(const PBBodyToSensorMountParams& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBodyToSensorMountParams& default_instance();

  static inline const PBBodyToSensorMountParams* internal_default_instance() {
    return reinterpret_cast<const PBBodyToSensorMountParams*>(
               &_PBBodyToSensorMountParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(PBBodyToSensorMountParams* other);

  // implements Message ----------------------------------------------

  inline PBBodyToSensorMountParams* New() const PROTOBUF_FINAL { return New(NULL); }

  PBBodyToSensorMountParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBBodyToSensorMountParams& from);
  void MergeFrom(const PBBodyToSensorMountParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBBodyToSensorMountParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float rollOffset = 1;
  void clear_rolloffset();
  static const int kRollOffsetFieldNumber = 1;
  float rolloffset() const;
  void set_rolloffset(float value);

  // float yawOffset = 2;
  void clear_yawoffset();
  static const int kYawOffsetFieldNumber = 2;
  float yawoffset() const;
  void set_yawoffset(float value);

  // float pitchOffset = 3;
  void clear_pitchoffset();
  static const int kPitchOffsetFieldNumber = 3;
  float pitchoffset() const;
  void set_pitchoffset(float value);

  // float offsetUnc = 4;
  void clear_offsetunc();
  static const int kOffsetUncFieldNumber = 4;
  float offsetunc() const;
  void set_offsetunc(float value);

  // @@protoc_insertion_point(class_scope:PBBodyToSensorMountParams)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float rolloffset_;
  float yawoffset_;
  float pitchoffset_;
  float offsetunc_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBStationStatusIndicatorMask : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBStationStatusIndicatorMask) */ {
 public:
  PBStationStatusIndicatorMask();
  virtual ~PBStationStatusIndicatorMask();

  PBStationStatusIndicatorMask(const PBStationStatusIndicatorMask& from);

  inline PBStationStatusIndicatorMask& operator=(const PBStationStatusIndicatorMask& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBStationStatusIndicatorMask& default_instance();

  static inline const PBStationStatusIndicatorMask* internal_default_instance() {
    return reinterpret_cast<const PBStationStatusIndicatorMask*>(
               &_PBStationStatusIndicatorMask_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(PBStationStatusIndicatorMask* other);

  // implements Message ----------------------------------------------

  inline PBStationStatusIndicatorMask* New() const PROTOBUF_FINAL { return New(NULL); }

  PBStationStatusIndicatorMask* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBStationStatusIndicatorMask& from);
  void MergeFrom(const PBStationStatusIndicatorMask& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBStationStatusIndicatorMask* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 stationIndicator = 1;
  void clear_stationindicator();
  static const int kStationIndicatorFieldNumber = 1;
  ::google::protobuf::uint32 stationindicator() const;
  void set_stationindicator(::google::protobuf::uint32 value);

  // uint32 oscillatorIndicator = 2;
  void clear_oscillatorindicator();
  static const int kOscillatorIndicatorFieldNumber = 2;
  ::google::protobuf::uint32 oscillatorindicator() const;
  void set_oscillatorindicator(::google::protobuf::uint32 value);

  // uint32 quarterCycleIndicator = 3;
  void clear_quartercycleindicator();
  static const int kQuarterCycleIndicatorFieldNumber = 3;
  ::google::protobuf::uint32 quartercycleindicator() const;
  void set_quartercycleindicator(::google::protobuf::uint32 value);

  // uint32 heightAvailability = 4;
  void clear_heightavailability();
  static const int kHeightAvailabilityFieldNumber = 4;
  ::google::protobuf::uint32 heightavailability() const;
  void set_heightavailability(::google::protobuf::uint32 value);

  // uint32 referencePointUncertainty = 5;
  void clear_referencepointuncertainty();
  static const int kReferencePointUncertaintyFieldNumber = 5;
  ::google::protobuf::uint32 referencepointuncertainty() const;
  void set_referencepointuncertainty(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBStationStatusIndicatorMask)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 stationindicator_;
  ::google::protobuf::uint32 oscillatorindicator_;
  ::google::protobuf::uint32 quartercycleindicator_;
  ::google::protobuf::uint32 heightavailability_;
  ::google::protobuf::uint32 referencepointuncertainty_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBReferenceStation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBReferenceStation) */ {
 public:
  PBReferenceStation();
  virtual ~PBReferenceStation();

  PBReferenceStation(const PBReferenceStation& from);

  inline PBReferenceStation& operator=(const PBReferenceStation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBReferenceStation& default_instance();

  static inline const PBReferenceStation* internal_default_instance() {
    return reinterpret_cast<const PBReferenceStation*>(
               &_PBReferenceStation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(PBReferenceStation* other);

  // implements Message ----------------------------------------------

  inline PBReferenceStation* New() const PROTOBUF_FINAL { return New(NULL); }

  PBReferenceStation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBReferenceStation& from);
  void MergeFrom(const PBReferenceStation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBReferenceStation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBStationStatusIndicatorMask statusIndicator = 2;
  bool has_statusindicator() const;
  void clear_statusindicator();
  static const int kStatusIndicatorFieldNumber = 2;
  const ::PBStationStatusIndicatorMask& statusindicator() const;
  ::PBStationStatusIndicatorMask* mutable_statusindicator();
  ::PBStationStatusIndicatorMask* release_statusindicator();
  void set_allocated_statusindicator(::PBStationStatusIndicatorMask* statusindicator);

  // uint32 stationID = 1;
  void clear_stationid();
  static const int kStationIDFieldNumber = 1;
  ::google::protobuf::uint32 stationid() const;
  void set_stationid(::google::protobuf::uint32 value);

  // uint32 linkedStationID = 3;
  void clear_linkedstationid();
  static const int kLinkedStationIDFieldNumber = 3;
  ::google::protobuf::uint32 linkedstationid() const;
  void set_linkedstationid(::google::protobuf::uint32 value);

  // uint32 ITRFYear = 4;
  void clear_itrfyear();
  static const int kITRFYearFieldNumber = 4;
  ::google::protobuf::uint32 itrfyear() const;
  void set_itrfyear(::google::protobuf::uint32 value);

  // uint32 constellationBitMask = 5;
  void clear_constellationbitmask();
  static const int kConstellationBitMaskFieldNumber = 5;
  ::google::protobuf::uint32 constellationbitmask() const;
  void set_constellationbitmask(::google::protobuf::uint32 value);

  // double ecefX = 6;
  void clear_ecefx();
  static const int kEcefXFieldNumber = 6;
  double ecefx() const;
  void set_ecefx(double value);

  // double ecefY = 7;
  void clear_ecefy();
  static const int kEcefYFieldNumber = 7;
  double ecefy() const;
  void set_ecefy(double value);

  // double ecefZ = 8;
  void clear_ecefz();
  static const int kEcefZFieldNumber = 8;
  double ecefz() const;
  void set_ecefz(double value);

  // float antennaHeight = 9;
  void clear_antennaheight();
  static const int kAntennaHeightFieldNumber = 9;
  float antennaheight() const;
  void set_antennaheight(float value);

  // float uncertaintyX = 10;
  void clear_uncertaintyx();
  static const int kUncertaintyXFieldNumber = 10;
  float uncertaintyx() const;
  void set_uncertaintyx(float value);

  // float uncertaintyY = 11;
  void clear_uncertaintyy();
  static const int kUncertaintyYFieldNumber = 11;
  float uncertaintyy() const;
  void set_uncertaintyy(float value);

  // float uncertaintyZ = 12;
  void clear_uncertaintyz();
  static const int kUncertaintyZFieldNumber = 12;
  float uncertaintyz() const;
  void set_uncertaintyz(float value);

  // uint32 uncertaintyConfidenceX = 13;
  void clear_uncertaintyconfidencex();
  static const int kUncertaintyConfidenceXFieldNumber = 13;
  ::google::protobuf::uint32 uncertaintyconfidencex() const;
  void set_uncertaintyconfidencex(::google::protobuf::uint32 value);

  // uint32 uncertaintyConfidenceY = 14;
  void clear_uncertaintyconfidencey();
  static const int kUncertaintyConfidenceYFieldNumber = 14;
  ::google::protobuf::uint32 uncertaintyconfidencey() const;
  void set_uncertaintyconfidencey(::google::protobuf::uint32 value);

  // uint32 uncertaintyConfidenceZ = 15;
  void clear_uncertaintyconfidencez();
  static const int kUncertaintyConfidenceZFieldNumber = 15;
  ::google::protobuf::uint32 uncertaintyconfidencez() const;
  void set_uncertaintyconfidencez(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBReferenceStation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBStationStatusIndicatorMask* statusindicator_;
  ::google::protobuf::uint32 stationid_;
  ::google::protobuf::uint32 linkedstationid_;
  ::google::protobuf::uint32 itrfyear_;
  ::google::protobuf::uint32 constellationbitmask_;
  double ecefx_;
  double ecefy_;
  double ecefz_;
  float antennaheight_;
  float uncertaintyx_;
  float uncertaintyy_;
  float uncertaintyz_;
  ::google::protobuf::uint32 uncertaintyconfidencex_;
  ::google::protobuf::uint32 uncertaintyconfidencey_;
  ::google::protobuf::uint32 uncertaintyconfidencez_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssEpochTime_glonassEpochTime : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssEpochTime.glonassEpochTime) */ {
 public:
  PBGnssEpochTime_glonassEpochTime();
  virtual ~PBGnssEpochTime_glonassEpochTime();

  PBGnssEpochTime_glonassEpochTime(const PBGnssEpochTime_glonassEpochTime& from);

  inline PBGnssEpochTime_glonassEpochTime& operator=(const PBGnssEpochTime_glonassEpochTime& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssEpochTime_glonassEpochTime& default_instance();

  static inline const PBGnssEpochTime_glonassEpochTime* internal_default_instance() {
    return reinterpret_cast<const PBGnssEpochTime_glonassEpochTime*>(
               &_PBGnssEpochTime_glonassEpochTime_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(PBGnssEpochTime_glonassEpochTime* other);

  // implements Message ----------------------------------------------

  inline PBGnssEpochTime_glonassEpochTime* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssEpochTime_glonassEpochTime* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssEpochTime_glonassEpochTime& from);
  void MergeFrom(const PBGnssEpochTime_glonassEpochTime& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssEpochTime_glonassEpochTime* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 timeOfDay = 1;
  void clear_timeofday();
  static const int kTimeOfDayFieldNumber = 1;
  ::google::protobuf::uint32 timeofday() const;
  void set_timeofday(::google::protobuf::uint32 value);

  // uint32 dayOfWeek = 2;
  void clear_dayofweek();
  static const int kDayOfWeekFieldNumber = 2;
  ::google::protobuf::uint32 dayofweek() const;
  void set_dayofweek(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBGnssEpochTime.glonassEpochTime)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 timeofday_;
  ::google::protobuf::uint32 dayofweek_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssEpochTime : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssEpochTime) */ {
 public:
  PBGnssEpochTime();
  virtual ~PBGnssEpochTime();

  PBGnssEpochTime(const PBGnssEpochTime& from);

  inline PBGnssEpochTime& operator=(const PBGnssEpochTime& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssEpochTime& default_instance();

  enum GnssEpochTimeCase {
    kTimeOfWeek = 1,
    kGloEpochTime = 2,
    GNSSEPOCHTIME_NOT_SET = 0,
  };

  static inline const PBGnssEpochTime* internal_default_instance() {
    return reinterpret_cast<const PBGnssEpochTime*>(
               &_PBGnssEpochTime_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(PBGnssEpochTime* other);

  // implements Message ----------------------------------------------

  inline PBGnssEpochTime* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssEpochTime* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssEpochTime& from);
  void MergeFrom(const PBGnssEpochTime& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssEpochTime* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PBGnssEpochTime_glonassEpochTime glonassEpochTime;

  // accessors -------------------------------------------------------

  // uint32 timeOfWeek = 1;
  private:
  bool has_timeofweek() const;
  public:
  void clear_timeofweek();
  static const int kTimeOfWeekFieldNumber = 1;
  ::google::protobuf::uint32 timeofweek() const;
  void set_timeofweek(::google::protobuf::uint32 value);

  // .PBGnssEpochTime.glonassEpochTime gloEpochTime = 2;
  bool has_gloepochtime() const;
  void clear_gloepochtime();
  static const int kGloEpochTimeFieldNumber = 2;
  const ::PBGnssEpochTime_glonassEpochTime& gloepochtime() const;
  ::PBGnssEpochTime_glonassEpochTime* mutable_gloepochtime();
  ::PBGnssEpochTime_glonassEpochTime* release_gloepochtime();
  void set_allocated_gloepochtime(::PBGnssEpochTime_glonassEpochTime* gloepochtime);

  GnssEpochTimeCase gnssEpochTime_case() const;
  // @@protoc_insertion_point(class_scope:PBGnssEpochTime)
 private:
  void set_has_timeofweek();
  void set_has_gloepochtime();

  inline bool has_gnssEpochTime() const;
  void clear_gnssEpochTime();
  inline void clear_has_gnssEpochTime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union GnssEpochTimeUnion {
    GnssEpochTimeUnion() {}
    ::google::protobuf::uint32 timeofweek_;
    ::PBGnssEpochTime_glonassEpochTime* gloepochtime_;
  } gnssEpochTime_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBDGnssObservationStatusFlags : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBDGnssObservationStatusFlags) */ {
 public:
  PBDGnssObservationStatusFlags();
  virtual ~PBDGnssObservationStatusFlags();

  PBDGnssObservationStatusFlags(const PBDGnssObservationStatusFlags& from);

  inline PBDGnssObservationStatusFlags& operator=(const PBDGnssObservationStatusFlags& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDGnssObservationStatusFlags& default_instance();

  static inline const PBDGnssObservationStatusFlags* internal_default_instance() {
    return reinterpret_cast<const PBDGnssObservationStatusFlags*>(
               &_PBDGnssObservationStatusFlags_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(PBDGnssObservationStatusFlags* other);

  // implements Message ----------------------------------------------

  inline PBDGnssObservationStatusFlags* New() const PROTOBUF_FINAL { return New(NULL); }

  PBDGnssObservationStatusFlags* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBDGnssObservationStatusFlags& from);
  void MergeFrom(const PBDGnssObservationStatusFlags& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBDGnssObservationStatusFlags* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 synchronousFlag = 1;
  void clear_synchronousflag();
  static const int kSynchronousFlagFieldNumber = 1;
  ::google::protobuf::uint32 synchronousflag() const;
  void set_synchronousflag(::google::protobuf::uint32 value);

  // uint32 smoothingIndicator = 2;
  void clear_smoothingindicator();
  static const int kSmoothingIndicatorFieldNumber = 2;
  ::google::protobuf::uint32 smoothingindicator() const;
  void set_smoothingindicator(::google::protobuf::uint32 value);

  // uint32 smoothingInterval = 3;
  void clear_smoothinginterval();
  static const int kSmoothingIntervalFieldNumber = 3;
  ::google::protobuf::uint32 smoothinginterval() const;
  void set_smoothinginterval(::google::protobuf::uint32 value);

  // uint32 clockSteeringIndicator = 4;
  void clear_clocksteeringindicator();
  static const int kClockSteeringIndicatorFieldNumber = 4;
  ::google::protobuf::uint32 clocksteeringindicator() const;
  void set_clocksteeringindicator(::google::protobuf::uint32 value);

  // uint32 externalClockIndicator = 5;
  void clear_externalclockindicator();
  static const int kExternalClockIndicatorFieldNumber = 5;
  ::google::protobuf::uint32 externalclockindicator() const;
  void set_externalclockindicator(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBDGnssObservationStatusFlags)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 synchronousflag_;
  ::google::protobuf::uint32 smoothingindicator_;
  ::google::protobuf::uint32 smoothinginterval_;
  ::google::protobuf::uint32 clocksteeringindicator_;
  ::google::protobuf::uint32 externalclockindicator_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBDGnssMeasurement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBDGnssMeasurement) */ {
 public:
  PBDGnssMeasurement();
  virtual ~PBDGnssMeasurement();

  PBDGnssMeasurement(const PBDGnssMeasurement& from);

  inline PBDGnssMeasurement& operator=(const PBDGnssMeasurement& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDGnssMeasurement& default_instance();

  enum GnssSignalIdentifierCase {
    kGpsSignalIdentifier = 3,
    kGlonassSignalIdentifier = 4,
    kGalileoSignalIdentifier = 5,
    kQzssSignalIdentifier = 6,
    kBdsSignalIdentifier = 7,
    kSbasSignalIdentifier = 8,
    GNSSSIGNALIDENTIFIER_NOT_SET = 0,
  };

  static inline const PBDGnssMeasurement* internal_default_instance() {
    return reinterpret_cast<const PBDGnssMeasurement*>(
               &_PBDGnssMeasurement_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(PBDGnssMeasurement* other);

  // implements Message ----------------------------------------------

  inline PBDGnssMeasurement* New() const PROTOBUF_FINAL { return New(NULL); }

  PBDGnssMeasurement* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBDGnssMeasurement& from);
  void MergeFrom(const PBDGnssMeasurement& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBDGnssMeasurement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 svId = 1;
  void clear_svid();
  static const int kSvIdFieldNumber = 1;
  ::google::protobuf::uint32 svid() const;
  void set_svid(::google::protobuf::uint32 value);

  // .PBExtendedSatelliteInformation extendedSatelliteInformation = 2;
  void clear_extendedsatelliteinformation();
  static const int kExtendedSatelliteInformationFieldNumber = 2;
  ::PBExtendedSatelliteInformation extendedsatelliteinformation() const;
  void set_extendedsatelliteinformation(::PBExtendedSatelliteInformation value);

  // float signalCNR = 14;
  void clear_signalcnr();
  static const int kSignalCNRFieldNumber = 14;
  float signalcnr() const;
  void set_signalcnr(float value);

  // double pseudorange = 10;
  void clear_pseudorange();
  static const int kPseudorangeFieldNumber = 10;
  double pseudorange() const;
  void set_pseudorange(double value);

  // double phaseRange = 11;
  void clear_phaserange();
  static const int kPhaseRangeFieldNumber = 11;
  double phaserange() const;
  void set_phaserange(double value);

  // uint32 signalObservationStatus = 9;
  void clear_signalobservationstatus();
  static const int kSignalObservationStatusFieldNumber = 9;
  ::google::protobuf::uint32 signalobservationstatus() const;
  void set_signalobservationstatus(::google::protobuf::uint32 value);

  // uint32 phaseRangeLockTimeIndicator = 13;
  void clear_phaserangelocktimeindicator();
  static const int kPhaseRangeLockTimeIndicatorFieldNumber = 13;
  ::google::protobuf::uint32 phaserangelocktimeindicator() const;
  void set_phaserangelocktimeindicator(::google::protobuf::uint32 value);

  // double phaseRangeRate = 12;
  void clear_phaserangerate();
  static const int kPhaseRangeRateFieldNumber = 12;
  double phaserangerate() const;
  void set_phaserangerate(double value);

  // .PBDGnssGpsSignalIdentifier gpsSignalIdentifier = 3;
  private:
  bool has_gpssignalidentifier() const;
  public:
  void clear_gpssignalidentifier();
  static const int kGpsSignalIdentifierFieldNumber = 3;
  ::PBDGnssGpsSignalIdentifier gpssignalidentifier() const;
  void set_gpssignalidentifier(::PBDGnssGpsSignalIdentifier value);

  // .PBDGnssGlonassSignalIdentifier glonassSignalIdentifier = 4;
  private:
  bool has_glonasssignalidentifier() const;
  public:
  void clear_glonasssignalidentifier();
  static const int kGlonassSignalIdentifierFieldNumber = 4;
  ::PBDGnssGlonassSignalIdentifier glonasssignalidentifier() const;
  void set_glonasssignalidentifier(::PBDGnssGlonassSignalIdentifier value);

  // .PBDGnssGalileoSignalIdentifier galileoSignalIdentifier = 5;
  private:
  bool has_galileosignalidentifier() const;
  public:
  void clear_galileosignalidentifier();
  static const int kGalileoSignalIdentifierFieldNumber = 5;
  ::PBDGnssGalileoSignalIdentifier galileosignalidentifier() const;
  void set_galileosignalidentifier(::PBDGnssGalileoSignalIdentifier value);

  // .PBDGnssQzssSignalIdentifier qzssSignalIdentifier = 6;
  private:
  bool has_qzsssignalidentifier() const;
  public:
  void clear_qzsssignalidentifier();
  static const int kQzssSignalIdentifierFieldNumber = 6;
  ::PBDGnssQzssSignalIdentifier qzsssignalidentifier() const;
  void set_qzsssignalidentifier(::PBDGnssQzssSignalIdentifier value);

  // .PBDGnssBdsSignalIdentifier bdsSignalIdentifier = 7;
  private:
  bool has_bdssignalidentifier() const;
  public:
  void clear_bdssignalidentifier();
  static const int kBdsSignalIdentifierFieldNumber = 7;
  ::PBDGnssBdsSignalIdentifier bdssignalidentifier() const;
  void set_bdssignalidentifier(::PBDGnssBdsSignalIdentifier value);

  // .PBDGnssSbasSignalIdentifier sbasSignalIdentifier = 8;
  private:
  bool has_sbassignalidentifier() const;
  public:
  void clear_sbassignalidentifier();
  static const int kSbasSignalIdentifierFieldNumber = 8;
  ::PBDGnssSbasSignalIdentifier sbassignalidentifier() const;
  void set_sbassignalidentifier(::PBDGnssSbasSignalIdentifier value);

  GnssSignalIdentifierCase gnssSignalIdentifier_case() const;
  // @@protoc_insertion_point(class_scope:PBDGnssMeasurement)
 private:
  void set_has_gpssignalidentifier();
  void set_has_glonasssignalidentifier();
  void set_has_galileosignalidentifier();
  void set_has_qzsssignalidentifier();
  void set_has_bdssignalidentifier();
  void set_has_sbassignalidentifier();

  inline bool has_gnssSignalIdentifier() const;
  void clear_gnssSignalIdentifier();
  inline void clear_has_gnssSignalIdentifier();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 svid_;
  int extendedsatelliteinformation_;
  float signalcnr_;
  double pseudorange_;
  double phaserange_;
  ::google::protobuf::uint32 signalobservationstatus_;
  ::google::protobuf::uint32 phaserangelocktimeindicator_;
  double phaserangerate_;
  union GnssSignalIdentifierUnion {
    GnssSignalIdentifierUnion() {}
    int gpssignalidentifier_;
    int glonasssignalidentifier_;
    int galileosignalidentifier_;
    int qzsssignalidentifier_;
    int bdssignalidentifier_;
    int sbassignalidentifier_;
  } gnssSignalIdentifier_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBDGnssObservation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBDGnssObservation) */ {
 public:
  PBDGnssObservation();
  virtual ~PBDGnssObservation();

  PBDGnssObservation(const PBDGnssObservation& from);

  inline PBDGnssObservation& operator=(const PBDGnssObservation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDGnssObservation& default_instance();

  static inline const PBDGnssObservation* internal_default_instance() {
    return reinterpret_cast<const PBDGnssObservation*>(
               &_PBDGnssObservation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(PBDGnssObservation* other);

  // implements Message ----------------------------------------------

  inline PBDGnssObservation* New() const PROTOBUF_FINAL { return New(NULL); }

  PBDGnssObservation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBDGnssObservation& from);
  void MergeFrom(const PBDGnssObservation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBDGnssObservation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PBDGnssMeasurement dGnssMeasurement = 7;
  int dgnssmeasurement_size() const;
  void clear_dgnssmeasurement();
  static const int kDGnssMeasurementFieldNumber = 7;
  const ::PBDGnssMeasurement& dgnssmeasurement(int index) const;
  ::PBDGnssMeasurement* mutable_dgnssmeasurement(int index);
  ::PBDGnssMeasurement* add_dgnssmeasurement();
  ::google::protobuf::RepeatedPtrField< ::PBDGnssMeasurement >*
      mutable_dgnssmeasurement();
  const ::google::protobuf::RepeatedPtrField< ::PBDGnssMeasurement >&
      dgnssmeasurement() const;

  // .PBGnssEpochTime epochTime = 2;
  bool has_epochtime() const;
  void clear_epochtime();
  static const int kEpochTimeFieldNumber = 2;
  const ::PBGnssEpochTime& epochtime() const;
  ::PBGnssEpochTime* mutable_epochtime();
  ::PBGnssEpochTime* release_epochtime();
  void set_allocated_epochtime(::PBGnssEpochTime* epochtime);

  // .PBDGnssObservationStatusFlags statusFlags = 3;
  bool has_statusflags() const;
  void clear_statusflags();
  static const int kStatusFlagsFieldNumber = 3;
  const ::PBDGnssObservationStatusFlags& statusflags() const;
  ::PBDGnssObservationStatusFlags* mutable_statusflags();
  ::PBDGnssObservationStatusFlags* release_statusflags();
  void set_allocated_statusflags(::PBDGnssObservationStatusFlags* statusflags);

  // uint32 stationID = 1;
  void clear_stationid();
  static const int kStationIDFieldNumber = 1;
  ::google::protobuf::uint32 stationid() const;
  void set_stationid(::google::protobuf::uint32 value);

  // uint32 issueOfDataStation = 4;
  void clear_issueofdatastation();
  static const int kIssueOfDataStationFieldNumber = 4;
  ::google::protobuf::uint32 issueofdatastation() const;
  void set_issueofdatastation(::google::protobuf::uint32 value);

  // .PBDGnssConstellationIdentifier constellationIdentifier = 5;
  void clear_constellationidentifier();
  static const int kConstellationIdentifierFieldNumber = 5;
  ::PBDGnssConstellationIdentifier constellationidentifier() const;
  void set_constellationidentifier(::PBDGnssConstellationIdentifier value);

  // uint32 numberOfMeasurements = 6;
  void clear_numberofmeasurements();
  static const int kNumberOfMeasurementsFieldNumber = 6;
  ::google::protobuf::uint32 numberofmeasurements() const;
  void set_numberofmeasurements(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBDGnssObservation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::PBDGnssMeasurement > dgnssmeasurement_;
  ::PBGnssEpochTime* epochtime_;
  ::PBDGnssObservationStatusFlags* statusflags_;
  ::google::protobuf::uint32 stationid_;
  ::google::protobuf::uint32 issueofdatastation_;
  int constellationidentifier_;
  ::google::protobuf::uint32 numberofmeasurements_;
  mutable int _cached_size_;
  friend struct protobuf_LocationDataTypes_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocPosMode

// .PBLocPositionMode mode = 1;
inline void PBLocPosMode::clear_mode() {
  mode_ = 0;
}
inline ::PBLocPositionMode PBLocPosMode::mode() const {
  // @@protoc_insertion_point(field_get:PBLocPosMode.mode)
  return static_cast< ::PBLocPositionMode >(mode_);
}
inline void PBLocPosMode::set_mode(::PBLocPositionMode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:PBLocPosMode.mode)
}

// .PBLocGpsPositionRecurrence recurrence = 2;
inline void PBLocPosMode::clear_recurrence() {
  recurrence_ = 0;
}
inline ::PBLocGpsPositionRecurrence PBLocPosMode::recurrence() const {
  // @@protoc_insertion_point(field_get:PBLocPosMode.recurrence)
  return static_cast< ::PBLocGpsPositionRecurrence >(recurrence_);
}
inline void PBLocPosMode::set_recurrence(::PBLocGpsPositionRecurrence value) {
  
  recurrence_ = value;
  // @@protoc_insertion_point(field_set:PBLocPosMode.recurrence)
}

// uint32 min_interval = 3;
inline void PBLocPosMode::clear_min_interval() {
  min_interval_ = 0u;
}
inline ::google::protobuf::uint32 PBLocPosMode::min_interval() const {
  // @@protoc_insertion_point(field_get:PBLocPosMode.min_interval)
  return min_interval_;
}
inline void PBLocPosMode::set_min_interval(::google::protobuf::uint32 value) {
  
  min_interval_ = value;
  // @@protoc_insertion_point(field_set:PBLocPosMode.min_interval)
}

// uint32 preferred_accuracy = 4;
inline void PBLocPosMode::clear_preferred_accuracy() {
  preferred_accuracy_ = 0u;
}
inline ::google::protobuf::uint32 PBLocPosMode::preferred_accuracy() const {
  // @@protoc_insertion_point(field_get:PBLocPosMode.preferred_accuracy)
  return preferred_accuracy_;
}
inline void PBLocPosMode::set_preferred_accuracy(::google::protobuf::uint32 value) {
  
  preferred_accuracy_ = value;
  // @@protoc_insertion_point(field_set:PBLocPosMode.preferred_accuracy)
}

// uint32 preferred_time = 5;
inline void PBLocPosMode::clear_preferred_time() {
  preferred_time_ = 0u;
}
inline ::google::protobuf::uint32 PBLocPosMode::preferred_time() const {
  // @@protoc_insertion_point(field_get:PBLocPosMode.preferred_time)
  return preferred_time_;
}
inline void PBLocPosMode::set_preferred_time(::google::protobuf::uint32 value) {
  
  preferred_time_ = value;
  // @@protoc_insertion_point(field_set:PBLocPosMode.preferred_time)
}

// bool share_position = 6;
inline void PBLocPosMode::clear_share_position() {
  share_position_ = false;
}
inline bool PBLocPosMode::share_position() const {
  // @@protoc_insertion_point(field_get:PBLocPosMode.share_position)
  return share_position_;
}
inline void PBLocPosMode::set_share_position(bool value) {
  
  share_position_ = value;
  // @@protoc_insertion_point(field_set:PBLocPosMode.share_position)
}

// string credentials = 7;
inline void PBLocPosMode::clear_credentials() {
  credentials_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBLocPosMode::credentials() const {
  // @@protoc_insertion_point(field_get:PBLocPosMode.credentials)
  return credentials_.GetNoArena();
}
inline void PBLocPosMode::set_credentials(const ::std::string& value) {
  
  credentials_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBLocPosMode.credentials)
}
#if LANG_CXX11
inline void PBLocPosMode::set_credentials(::std::string&& value) {
  
  credentials_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBLocPosMode.credentials)
}
#endif
inline void PBLocPosMode::set_credentials(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  credentials_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBLocPosMode.credentials)
}
inline void PBLocPosMode::set_credentials(const char* value, size_t size) {
  
  credentials_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBLocPosMode.credentials)
}
inline ::std::string* PBLocPosMode::mutable_credentials() {
  
  // @@protoc_insertion_point(field_mutable:PBLocPosMode.credentials)
  return credentials_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBLocPosMode::release_credentials() {
  // @@protoc_insertion_point(field_release:PBLocPosMode.credentials)
  
  return credentials_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBLocPosMode::set_allocated_credentials(::std::string* credentials) {
  if (credentials != NULL) {
    
  } else {
    
  }
  credentials_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), credentials);
  // @@protoc_insertion_point(field_set_allocated:PBLocPosMode.credentials)
}

// string provider = 8;
inline void PBLocPosMode::clear_provider() {
  provider_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBLocPosMode::provider() const {
  // @@protoc_insertion_point(field_get:PBLocPosMode.provider)
  return provider_.GetNoArena();
}
inline void PBLocPosMode::set_provider(const ::std::string& value) {
  
  provider_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBLocPosMode.provider)
}
#if LANG_CXX11
inline void PBLocPosMode::set_provider(::std::string&& value) {
  
  provider_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBLocPosMode.provider)
}
#endif
inline void PBLocPosMode::set_provider(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  provider_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBLocPosMode.provider)
}
inline void PBLocPosMode::set_provider(const char* value, size_t size) {
  
  provider_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBLocPosMode.provider)
}
inline ::std::string* PBLocPosMode::mutable_provider() {
  
  // @@protoc_insertion_point(field_mutable:PBLocPosMode.provider)
  return provider_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBLocPosMode::release_provider() {
  // @@protoc_insertion_point(field_release:PBLocPosMode.provider)
  
  return provider_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBLocPosMode::set_allocated_provider(::std::string* provider) {
  if (provider != NULL) {
    
  } else {
    
  }
  provider_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), provider);
  // @@protoc_insertion_point(field_set_allocated:PBLocPosMode.provider)
}

// .PBGnssPowerMode powerMode = 9;
inline void PBLocPosMode::clear_powermode() {
  powermode_ = 0;
}
inline ::PBGnssPowerMode PBLocPosMode::powermode() const {
  // @@protoc_insertion_point(field_get:PBLocPosMode.powerMode)
  return static_cast< ::PBGnssPowerMode >(powermode_);
}
inline void PBLocPosMode::set_powermode(::PBGnssPowerMode value) {
  
  powermode_ = value;
  // @@protoc_insertion_point(field_set:PBLocPosMode.powerMode)
}

// uint32 timeBetweenMeasurements = 10;
inline void PBLocPosMode::clear_timebetweenmeasurements() {
  timebetweenmeasurements_ = 0u;
}
inline ::google::protobuf::uint32 PBLocPosMode::timebetweenmeasurements() const {
  // @@protoc_insertion_point(field_get:PBLocPosMode.timeBetweenMeasurements)
  return timebetweenmeasurements_;
}
inline void PBLocPosMode::set_timebetweenmeasurements(::google::protobuf::uint32 value) {
  
  timebetweenmeasurements_ = value;
  // @@protoc_insertion_point(field_set:PBLocPosMode.timeBetweenMeasurements)
}

// -------------------------------------------------------------------

// PBUlpLocation

// .PBLocGpsLocation gpsLocation = 1;
inline bool PBUlpLocation::has_gpslocation() const {
  return this != internal_default_instance() && gpslocation_ != NULL;
}
inline void PBUlpLocation::clear_gpslocation() {
  if (GetArenaNoVirtual() == NULL && gpslocation_ != NULL) delete gpslocation_;
  gpslocation_ = NULL;
}
inline const ::PBLocGpsLocation& PBUlpLocation::gpslocation() const {
  // @@protoc_insertion_point(field_get:PBUlpLocation.gpsLocation)
  return gpslocation_ != NULL ? *gpslocation_
                         : *::PBLocGpsLocation::internal_default_instance();
}
inline ::PBLocGpsLocation* PBUlpLocation::mutable_gpslocation() {
  
  if (gpslocation_ == NULL) {
    gpslocation_ = new ::PBLocGpsLocation;
  }
  // @@protoc_insertion_point(field_mutable:PBUlpLocation.gpsLocation)
  return gpslocation_;
}
inline ::PBLocGpsLocation* PBUlpLocation::release_gpslocation() {
  // @@protoc_insertion_point(field_release:PBUlpLocation.gpsLocation)
  
  ::PBLocGpsLocation* temp = gpslocation_;
  gpslocation_ = NULL;
  return temp;
}
inline void PBUlpLocation::set_allocated_gpslocation(::PBLocGpsLocation* gpslocation) {
  delete gpslocation_;
  gpslocation_ = gpslocation;
  if (gpslocation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBUlpLocation.gpsLocation)
}

// uint32 position_source = 2;
inline void PBUlpLocation::clear_position_source() {
  position_source_ = 0u;
}
inline ::google::protobuf::uint32 PBUlpLocation::position_source() const {
  // @@protoc_insertion_point(field_get:PBUlpLocation.position_source)
  return position_source_;
}
inline void PBUlpLocation::set_position_source(::google::protobuf::uint32 value) {
  
  position_source_ = value;
  // @@protoc_insertion_point(field_set:PBUlpLocation.position_source)
}

// uint32 tech_mask = 3;
inline void PBUlpLocation::clear_tech_mask() {
  tech_mask_ = 0u;
}
inline ::google::protobuf::uint32 PBUlpLocation::tech_mask() const {
  // @@protoc_insertion_point(field_get:PBUlpLocation.tech_mask)
  return tech_mask_;
}
inline void PBUlpLocation::set_tech_mask(::google::protobuf::uint32 value) {
  
  tech_mask_ = value;
  // @@protoc_insertion_point(field_set:PBUlpLocation.tech_mask)
}

// bool unpropagatedPosition = 4;
inline void PBUlpLocation::clear_unpropagatedposition() {
  unpropagatedposition_ = false;
}
inline bool PBUlpLocation::unpropagatedposition() const {
  // @@protoc_insertion_point(field_get:PBUlpLocation.unpropagatedPosition)
  return unpropagatedposition_;
}
inline void PBUlpLocation::set_unpropagatedposition(bool value) {
  
  unpropagatedposition_ = value;
  // @@protoc_insertion_point(field_set:PBUlpLocation.unpropagatedPosition)
}

// -------------------------------------------------------------------

// PBLocGpsLocation

// uint32 flags = 1;
inline void PBLocGpsLocation::clear_flags() {
  flags_ = 0u;
}
inline ::google::protobuf::uint32 PBLocGpsLocation::flags() const {
  // @@protoc_insertion_point(field_get:PBLocGpsLocation.flags)
  return flags_;
}
inline void PBLocGpsLocation::set_flags(::google::protobuf::uint32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:PBLocGpsLocation.flags)
}

// uint32 spoof_mask = 2;
inline void PBLocGpsLocation::clear_spoof_mask() {
  spoof_mask_ = 0u;
}
inline ::google::protobuf::uint32 PBLocGpsLocation::spoof_mask() const {
  // @@protoc_insertion_point(field_get:PBLocGpsLocation.spoof_mask)
  return spoof_mask_;
}
inline void PBLocGpsLocation::set_spoof_mask(::google::protobuf::uint32 value) {
  
  spoof_mask_ = value;
  // @@protoc_insertion_point(field_set:PBLocGpsLocation.spoof_mask)
}

// float latitude = 3;
inline void PBLocGpsLocation::clear_latitude() {
  latitude_ = 0;
}
inline float PBLocGpsLocation::latitude() const {
  // @@protoc_insertion_point(field_get:PBLocGpsLocation.latitude)
  return latitude_;
}
inline void PBLocGpsLocation::set_latitude(float value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:PBLocGpsLocation.latitude)
}

// float longitude = 4;
inline void PBLocGpsLocation::clear_longitude() {
  longitude_ = 0;
}
inline float PBLocGpsLocation::longitude() const {
  // @@protoc_insertion_point(field_get:PBLocGpsLocation.longitude)
  return longitude_;
}
inline void PBLocGpsLocation::set_longitude(float value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:PBLocGpsLocation.longitude)
}

// float altitude = 5;
inline void PBLocGpsLocation::clear_altitude() {
  altitude_ = 0;
}
inline float PBLocGpsLocation::altitude() const {
  // @@protoc_insertion_point(field_get:PBLocGpsLocation.altitude)
  return altitude_;
}
inline void PBLocGpsLocation::set_altitude(float value) {
  
  altitude_ = value;
  // @@protoc_insertion_point(field_set:PBLocGpsLocation.altitude)
}

// float speed = 6;
inline void PBLocGpsLocation::clear_speed() {
  speed_ = 0;
}
inline float PBLocGpsLocation::speed() const {
  // @@protoc_insertion_point(field_get:PBLocGpsLocation.speed)
  return speed_;
}
inline void PBLocGpsLocation::set_speed(float value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:PBLocGpsLocation.speed)
}

// float bearing = 7;
inline void PBLocGpsLocation::clear_bearing() {
  bearing_ = 0;
}
inline float PBLocGpsLocation::bearing() const {
  // @@protoc_insertion_point(field_get:PBLocGpsLocation.bearing)
  return bearing_;
}
inline void PBLocGpsLocation::set_bearing(float value) {
  
  bearing_ = value;
  // @@protoc_insertion_point(field_set:PBLocGpsLocation.bearing)
}

// float accuracy = 8;
inline void PBLocGpsLocation::clear_accuracy() {
  accuracy_ = 0;
}
inline float PBLocGpsLocation::accuracy() const {
  // @@protoc_insertion_point(field_get:PBLocGpsLocation.accuracy)
  return accuracy_;
}
inline void PBLocGpsLocation::set_accuracy(float value) {
  
  accuracy_ = value;
  // @@protoc_insertion_point(field_set:PBLocGpsLocation.accuracy)
}

// float vertUncertainity = 9;
inline void PBLocGpsLocation::clear_vertuncertainity() {
  vertuncertainity_ = 0;
}
inline float PBLocGpsLocation::vertuncertainity() const {
  // @@protoc_insertion_point(field_get:PBLocGpsLocation.vertUncertainity)
  return vertuncertainity_;
}
inline void PBLocGpsLocation::set_vertuncertainity(float value) {
  
  vertuncertainity_ = value;
  // @@protoc_insertion_point(field_set:PBLocGpsLocation.vertUncertainity)
}

// uint64 timestamp = 10;
inline void PBLocGpsLocation::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBLocGpsLocation::timestamp() const {
  // @@protoc_insertion_point(field_get:PBLocGpsLocation.timestamp)
  return timestamp_;
}
inline void PBLocGpsLocation::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:PBLocGpsLocation.timestamp)
}

// -------------------------------------------------------------------

// PBGnssSv

// uint32 svId = 1;
inline void PBGnssSv::clear_svid() {
  svid_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssSv::svid() const {
  // @@protoc_insertion_point(field_get:PBGnssSv.svId)
  return svid_;
}
inline void PBGnssSv::set_svid(::google::protobuf::uint32 value) {
  
  svid_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSv.svId)
}

// .PBGnssSvType type = 2;
inline void PBGnssSv::clear_type() {
  type_ = 0;
}
inline ::PBGnssSvType PBGnssSv::type() const {
  // @@protoc_insertion_point(field_get:PBGnssSv.type)
  return static_cast< ::PBGnssSvType >(type_);
}
inline void PBGnssSv::set_type(::PBGnssSvType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSv.type)
}

// float cN0Dbhz = 3;
inline void PBGnssSv::clear_cn0dbhz() {
  cn0dbhz_ = 0;
}
inline float PBGnssSv::cn0dbhz() const {
  // @@protoc_insertion_point(field_get:PBGnssSv.cN0Dbhz)
  return cn0dbhz_;
}
inline void PBGnssSv::set_cn0dbhz(float value) {
  
  cn0dbhz_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSv.cN0Dbhz)
}

// float elevation = 4;
inline void PBGnssSv::clear_elevation() {
  elevation_ = 0;
}
inline float PBGnssSv::elevation() const {
  // @@protoc_insertion_point(field_get:PBGnssSv.elevation)
  return elevation_;
}
inline void PBGnssSv::set_elevation(float value) {
  
  elevation_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSv.elevation)
}

// float azimuth = 5;
inline void PBGnssSv::clear_azimuth() {
  azimuth_ = 0;
}
inline float PBGnssSv::azimuth() const {
  // @@protoc_insertion_point(field_get:PBGnssSv.azimuth)
  return azimuth_;
}
inline void PBGnssSv::set_azimuth(float value) {
  
  azimuth_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSv.azimuth)
}

// uint32 gnssSvOptionsMask = 6;
inline void PBGnssSv::clear_gnsssvoptionsmask() {
  gnsssvoptionsmask_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssSv::gnsssvoptionsmask() const {
  // @@protoc_insertion_point(field_get:PBGnssSv.gnssSvOptionsMask)
  return gnsssvoptionsmask_;
}
inline void PBGnssSv::set_gnsssvoptionsmask(::google::protobuf::uint32 value) {
  
  gnsssvoptionsmask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSv.gnssSvOptionsMask)
}

// float carrierFrequencyHz = 7;
inline void PBGnssSv::clear_carrierfrequencyhz() {
  carrierfrequencyhz_ = 0;
}
inline float PBGnssSv::carrierfrequencyhz() const {
  // @@protoc_insertion_point(field_get:PBGnssSv.carrierFrequencyHz)
  return carrierfrequencyhz_;
}
inline void PBGnssSv::set_carrierfrequencyhz(float value) {
  
  carrierfrequencyhz_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSv.carrierFrequencyHz)
}

// uint32 gnssSignalTypeMask = 8;
inline void PBGnssSv::clear_gnsssignaltypemask() {
  gnsssignaltypemask_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssSv::gnsssignaltypemask() const {
  // @@protoc_insertion_point(field_get:PBGnssSv.gnssSignalTypeMask)
  return gnsssignaltypemask_;
}
inline void PBGnssSv::set_gnsssignaltypemask(::google::protobuf::uint32 value) {
  
  gnsssignaltypemask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSv.gnssSignalTypeMask)
}

// -------------------------------------------------------------------

// PBGnssSvNotification

// bool gnssSignalTypeMaskValid = 1;
inline void PBGnssSvNotification::clear_gnsssignaltypemaskvalid() {
  gnsssignaltypemaskvalid_ = false;
}
inline bool PBGnssSvNotification::gnsssignaltypemaskvalid() const {
  // @@protoc_insertion_point(field_get:PBGnssSvNotification.gnssSignalTypeMaskValid)
  return gnsssignaltypemaskvalid_;
}
inline void PBGnssSvNotification::set_gnsssignaltypemaskvalid(bool value) {
  
  gnsssignaltypemaskvalid_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvNotification.gnssSignalTypeMaskValid)
}

// repeated .PBGnssSv gnssSvs = 2;
inline int PBGnssSvNotification::gnsssvs_size() const {
  return gnsssvs_.size();
}
inline void PBGnssSvNotification::clear_gnsssvs() {
  gnsssvs_.Clear();
}
inline const ::PBGnssSv& PBGnssSvNotification::gnsssvs(int index) const {
  // @@protoc_insertion_point(field_get:PBGnssSvNotification.gnssSvs)
  return gnsssvs_.Get(index);
}
inline ::PBGnssSv* PBGnssSvNotification::mutable_gnsssvs(int index) {
  // @@protoc_insertion_point(field_mutable:PBGnssSvNotification.gnssSvs)
  return gnsssvs_.Mutable(index);
}
inline ::PBGnssSv* PBGnssSvNotification::add_gnsssvs() {
  // @@protoc_insertion_point(field_add:PBGnssSvNotification.gnssSvs)
  return gnsssvs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PBGnssSv >*
PBGnssSvNotification::mutable_gnsssvs() {
  // @@protoc_insertion_point(field_mutable_list:PBGnssSvNotification.gnssSvs)
  return &gnsssvs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PBGnssSv >&
PBGnssSvNotification::gnsssvs() const {
  // @@protoc_insertion_point(field_list:PBGnssSvNotification.gnssSvs)
  return gnsssvs_;
}

// -------------------------------------------------------------------

// PBGpsLocationExtended

// uint64 flags = 1;
inline void PBGpsLocationExtended::clear_flags() {
  flags_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGpsLocationExtended::flags() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.flags)
  return flags_;
}
inline void PBGpsLocationExtended::set_flags(::google::protobuf::uint64 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.flags)
}

// float altitudeMeanSeaLevel = 2;
inline void PBGpsLocationExtended::clear_altitudemeansealevel() {
  altitudemeansealevel_ = 0;
}
inline float PBGpsLocationExtended::altitudemeansealevel() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.altitudeMeanSeaLevel)
  return altitudemeansealevel_;
}
inline void PBGpsLocationExtended::set_altitudemeansealevel(float value) {
  
  altitudemeansealevel_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.altitudeMeanSeaLevel)
}

// float pdop = 3;
inline void PBGpsLocationExtended::clear_pdop() {
  pdop_ = 0;
}
inline float PBGpsLocationExtended::pdop() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.pdop)
  return pdop_;
}
inline void PBGpsLocationExtended::set_pdop(float value) {
  
  pdop_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.pdop)
}

// float hdop = 4;
inline void PBGpsLocationExtended::clear_hdop() {
  hdop_ = 0;
}
inline float PBGpsLocationExtended::hdop() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.hdop)
  return hdop_;
}
inline void PBGpsLocationExtended::set_hdop(float value) {
  
  hdop_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.hdop)
}

// float vdop = 5;
inline void PBGpsLocationExtended::clear_vdop() {
  vdop_ = 0;
}
inline float PBGpsLocationExtended::vdop() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.vdop)
  return vdop_;
}
inline void PBGpsLocationExtended::set_vdop(float value) {
  
  vdop_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.vdop)
}

// float magneticDeviation = 6;
inline void PBGpsLocationExtended::clear_magneticdeviation() {
  magneticdeviation_ = 0;
}
inline float PBGpsLocationExtended::magneticdeviation() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.magneticDeviation)
  return magneticdeviation_;
}
inline void PBGpsLocationExtended::set_magneticdeviation(float value) {
  
  magneticdeviation_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.magneticDeviation)
}

// float vert_unc = 7;
inline void PBGpsLocationExtended::clear_vert_unc() {
  vert_unc_ = 0;
}
inline float PBGpsLocationExtended::vert_unc() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.vert_unc)
  return vert_unc_;
}
inline void PBGpsLocationExtended::set_vert_unc(float value) {
  
  vert_unc_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.vert_unc)
}

// float speed_unc = 8;
inline void PBGpsLocationExtended::clear_speed_unc() {
  speed_unc_ = 0;
}
inline float PBGpsLocationExtended::speed_unc() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.speed_unc)
  return speed_unc_;
}
inline void PBGpsLocationExtended::set_speed_unc(float value) {
  
  speed_unc_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.speed_unc)
}

// float bearing_unc = 9;
inline void PBGpsLocationExtended::clear_bearing_unc() {
  bearing_unc_ = 0;
}
inline float PBGpsLocationExtended::bearing_unc() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.bearing_unc)
  return bearing_unc_;
}
inline void PBGpsLocationExtended::set_bearing_unc(float value) {
  
  bearing_unc_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.bearing_unc)
}

// .PBLocReliability horizontal_reliability = 10;
inline void PBGpsLocationExtended::clear_horizontal_reliability() {
  horizontal_reliability_ = 0;
}
inline ::PBLocReliability PBGpsLocationExtended::horizontal_reliability() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.horizontal_reliability)
  return static_cast< ::PBLocReliability >(horizontal_reliability_);
}
inline void PBGpsLocationExtended::set_horizontal_reliability(::PBLocReliability value) {
  
  horizontal_reliability_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.horizontal_reliability)
}

// .PBLocReliability vertical_reliability = 11;
inline void PBGpsLocationExtended::clear_vertical_reliability() {
  vertical_reliability_ = 0;
}
inline ::PBLocReliability PBGpsLocationExtended::vertical_reliability() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.vertical_reliability)
  return static_cast< ::PBLocReliability >(vertical_reliability_);
}
inline void PBGpsLocationExtended::set_vertical_reliability(::PBLocReliability value) {
  
  vertical_reliability_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.vertical_reliability)
}

// float horUncEllipseSemiMajor = 12;
inline void PBGpsLocationExtended::clear_horuncellipsesemimajor() {
  horuncellipsesemimajor_ = 0;
}
inline float PBGpsLocationExtended::horuncellipsesemimajor() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.horUncEllipseSemiMajor)
  return horuncellipsesemimajor_;
}
inline void PBGpsLocationExtended::set_horuncellipsesemimajor(float value) {
  
  horuncellipsesemimajor_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.horUncEllipseSemiMajor)
}

// float horUncEllipseSemiMinor = 13;
inline void PBGpsLocationExtended::clear_horuncellipsesemiminor() {
  horuncellipsesemiminor_ = 0;
}
inline float PBGpsLocationExtended::horuncellipsesemiminor() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.horUncEllipseSemiMinor)
  return horuncellipsesemiminor_;
}
inline void PBGpsLocationExtended::set_horuncellipsesemiminor(float value) {
  
  horuncellipsesemiminor_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.horUncEllipseSemiMinor)
}

// float horUncEllipseOrientAzimuth = 14;
inline void PBGpsLocationExtended::clear_horuncellipseorientazimuth() {
  horuncellipseorientazimuth_ = 0;
}
inline float PBGpsLocationExtended::horuncellipseorientazimuth() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.horUncEllipseOrientAzimuth)
  return horuncellipseorientazimuth_;
}
inline void PBGpsLocationExtended::set_horuncellipseorientazimuth(float value) {
  
  horuncellipseorientazimuth_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.horUncEllipseOrientAzimuth)
}

// .PBApTimeStampStructType timeStamp = 15;
inline bool PBGpsLocationExtended::has_timestamp() const {
  return this != internal_default_instance() && timestamp_ != NULL;
}
inline void PBGpsLocationExtended::clear_timestamp() {
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) delete timestamp_;
  timestamp_ = NULL;
}
inline const ::PBApTimeStampStructType& PBGpsLocationExtended::timestamp() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.timeStamp)
  return timestamp_ != NULL ? *timestamp_
                         : *::PBApTimeStampStructType::internal_default_instance();
}
inline ::PBApTimeStampStructType* PBGpsLocationExtended::mutable_timestamp() {
  
  if (timestamp_ == NULL) {
    timestamp_ = new ::PBApTimeStampStructType;
  }
  // @@protoc_insertion_point(field_mutable:PBGpsLocationExtended.timeStamp)
  return timestamp_;
}
inline ::PBApTimeStampStructType* PBGpsLocationExtended::release_timestamp() {
  // @@protoc_insertion_point(field_release:PBGpsLocationExtended.timeStamp)
  
  ::PBApTimeStampStructType* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline void PBGpsLocationExtended::set_allocated_timestamp(::PBApTimeStampStructType* timestamp) {
  delete timestamp_;
  timestamp_ = timestamp;
  if (timestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGpsLocationExtended.timeStamp)
}

// .PBGnssSvUsedInPosition gnss_sv_used_ids = 16;
inline bool PBGpsLocationExtended::has_gnss_sv_used_ids() const {
  return this != internal_default_instance() && gnss_sv_used_ids_ != NULL;
}
inline void PBGpsLocationExtended::clear_gnss_sv_used_ids() {
  if (GetArenaNoVirtual() == NULL && gnss_sv_used_ids_ != NULL) delete gnss_sv_used_ids_;
  gnss_sv_used_ids_ = NULL;
}
inline const ::PBGnssSvUsedInPosition& PBGpsLocationExtended::gnss_sv_used_ids() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.gnss_sv_used_ids)
  return gnss_sv_used_ids_ != NULL ? *gnss_sv_used_ids_
                         : *::PBGnssSvUsedInPosition::internal_default_instance();
}
inline ::PBGnssSvUsedInPosition* PBGpsLocationExtended::mutable_gnss_sv_used_ids() {
  
  if (gnss_sv_used_ids_ == NULL) {
    gnss_sv_used_ids_ = new ::PBGnssSvUsedInPosition;
  }
  // @@protoc_insertion_point(field_mutable:PBGpsLocationExtended.gnss_sv_used_ids)
  return gnss_sv_used_ids_;
}
inline ::PBGnssSvUsedInPosition* PBGpsLocationExtended::release_gnss_sv_used_ids() {
  // @@protoc_insertion_point(field_release:PBGpsLocationExtended.gnss_sv_used_ids)
  
  ::PBGnssSvUsedInPosition* temp = gnss_sv_used_ids_;
  gnss_sv_used_ids_ = NULL;
  return temp;
}
inline void PBGpsLocationExtended::set_allocated_gnss_sv_used_ids(::PBGnssSvUsedInPosition* gnss_sv_used_ids) {
  delete gnss_sv_used_ids_;
  gnss_sv_used_ids_ = gnss_sv_used_ids;
  if (gnss_sv_used_ids) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGpsLocationExtended.gnss_sv_used_ids)
}

// .PBGnssSvMbUsedInPosition gnss_mb_sv_used_ids = 17;
inline bool PBGpsLocationExtended::has_gnss_mb_sv_used_ids() const {
  return this != internal_default_instance() && gnss_mb_sv_used_ids_ != NULL;
}
inline void PBGpsLocationExtended::clear_gnss_mb_sv_used_ids() {
  if (GetArenaNoVirtual() == NULL && gnss_mb_sv_used_ids_ != NULL) delete gnss_mb_sv_used_ids_;
  gnss_mb_sv_used_ids_ = NULL;
}
inline const ::PBGnssSvMbUsedInPosition& PBGpsLocationExtended::gnss_mb_sv_used_ids() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.gnss_mb_sv_used_ids)
  return gnss_mb_sv_used_ids_ != NULL ? *gnss_mb_sv_used_ids_
                         : *::PBGnssSvMbUsedInPosition::internal_default_instance();
}
inline ::PBGnssSvMbUsedInPosition* PBGpsLocationExtended::mutable_gnss_mb_sv_used_ids() {
  
  if (gnss_mb_sv_used_ids_ == NULL) {
    gnss_mb_sv_used_ids_ = new ::PBGnssSvMbUsedInPosition;
  }
  // @@protoc_insertion_point(field_mutable:PBGpsLocationExtended.gnss_mb_sv_used_ids)
  return gnss_mb_sv_used_ids_;
}
inline ::PBGnssSvMbUsedInPosition* PBGpsLocationExtended::release_gnss_mb_sv_used_ids() {
  // @@protoc_insertion_point(field_release:PBGpsLocationExtended.gnss_mb_sv_used_ids)
  
  ::PBGnssSvMbUsedInPosition* temp = gnss_mb_sv_used_ids_;
  gnss_mb_sv_used_ids_ = NULL;
  return temp;
}
inline void PBGpsLocationExtended::set_allocated_gnss_mb_sv_used_ids(::PBGnssSvMbUsedInPosition* gnss_mb_sv_used_ids) {
  delete gnss_mb_sv_used_ids_;
  gnss_mb_sv_used_ids_ = gnss_mb_sv_used_ids;
  if (gnss_mb_sv_used_ids) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGpsLocationExtended.gnss_mb_sv_used_ids)
}

// uint32 navSolutionMask = 18;
inline void PBGpsLocationExtended::clear_navsolutionmask() {
  navsolutionmask_ = 0u;
}
inline ::google::protobuf::uint32 PBGpsLocationExtended::navsolutionmask() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.navSolutionMask)
  return navsolutionmask_;
}
inline void PBGpsLocationExtended::set_navsolutionmask(::google::protobuf::uint32 value) {
  
  navsolutionmask_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.navSolutionMask)
}

// uint32 tech_mask = 19;
inline void PBGpsLocationExtended::clear_tech_mask() {
  tech_mask_ = 0u;
}
inline ::google::protobuf::uint32 PBGpsLocationExtended::tech_mask() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.tech_mask)
  return tech_mask_;
}
inline void PBGpsLocationExtended::set_tech_mask(::google::protobuf::uint32 value) {
  
  tech_mask_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.tech_mask)
}

// .PBLocSvInfoSource sv_source = 20;
inline void PBGpsLocationExtended::clear_sv_source() {
  sv_source_ = 0;
}
inline ::PBLocSvInfoSource PBGpsLocationExtended::sv_source() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.sv_source)
  return static_cast< ::PBLocSvInfoSource >(sv_source_);
}
inline void PBGpsLocationExtended::set_sv_source(::PBLocSvInfoSource value) {
  
  sv_source_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.sv_source)
}

// .PBGnssLocationPositionDynamics bodyFrameData = 21;
inline bool PBGpsLocationExtended::has_bodyframedata() const {
  return this != internal_default_instance() && bodyframedata_ != NULL;
}
inline void PBGpsLocationExtended::clear_bodyframedata() {
  if (GetArenaNoVirtual() == NULL && bodyframedata_ != NULL) delete bodyframedata_;
  bodyframedata_ = NULL;
}
inline const ::PBGnssLocationPositionDynamics& PBGpsLocationExtended::bodyframedata() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.bodyFrameData)
  return bodyframedata_ != NULL ? *bodyframedata_
                         : *::PBGnssLocationPositionDynamics::internal_default_instance();
}
inline ::PBGnssLocationPositionDynamics* PBGpsLocationExtended::mutable_bodyframedata() {
  
  if (bodyframedata_ == NULL) {
    bodyframedata_ = new ::PBGnssLocationPositionDynamics;
  }
  // @@protoc_insertion_point(field_mutable:PBGpsLocationExtended.bodyFrameData)
  return bodyframedata_;
}
inline ::PBGnssLocationPositionDynamics* PBGpsLocationExtended::release_bodyframedata() {
  // @@protoc_insertion_point(field_release:PBGpsLocationExtended.bodyFrameData)
  
  ::PBGnssLocationPositionDynamics* temp = bodyframedata_;
  bodyframedata_ = NULL;
  return temp;
}
inline void PBGpsLocationExtended::set_allocated_bodyframedata(::PBGnssLocationPositionDynamics* bodyframedata) {
  delete bodyframedata_;
  bodyframedata_ = bodyframedata;
  if (bodyframedata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGpsLocationExtended.bodyFrameData)
}

// .PBGPSTimeStruct gpsTime = 22;
inline bool PBGpsLocationExtended::has_gpstime() const {
  return this != internal_default_instance() && gpstime_ != NULL;
}
inline void PBGpsLocationExtended::clear_gpstime() {
  if (GetArenaNoVirtual() == NULL && gpstime_ != NULL) delete gpstime_;
  gpstime_ = NULL;
}
inline const ::PBGPSTimeStruct& PBGpsLocationExtended::gpstime() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.gpsTime)
  return gpstime_ != NULL ? *gpstime_
                         : *::PBGPSTimeStruct::internal_default_instance();
}
inline ::PBGPSTimeStruct* PBGpsLocationExtended::mutable_gpstime() {
  
  if (gpstime_ == NULL) {
    gpstime_ = new ::PBGPSTimeStruct;
  }
  // @@protoc_insertion_point(field_mutable:PBGpsLocationExtended.gpsTime)
  return gpstime_;
}
inline ::PBGPSTimeStruct* PBGpsLocationExtended::release_gpstime() {
  // @@protoc_insertion_point(field_release:PBGpsLocationExtended.gpsTime)
  
  ::PBGPSTimeStruct* temp = gpstime_;
  gpstime_ = NULL;
  return temp;
}
inline void PBGpsLocationExtended::set_allocated_gpstime(::PBGPSTimeStruct* gpstime) {
  delete gpstime_;
  gpstime_ = gpstime;
  if (gpstime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGpsLocationExtended.gpsTime)
}

// .PBGnssSystemTime gnssSystemTime = 23;
inline bool PBGpsLocationExtended::has_gnsssystemtime() const {
  return this != internal_default_instance() && gnsssystemtime_ != NULL;
}
inline void PBGpsLocationExtended::clear_gnsssystemtime() {
  if (GetArenaNoVirtual() == NULL && gnsssystemtime_ != NULL) delete gnsssystemtime_;
  gnsssystemtime_ = NULL;
}
inline const ::PBGnssSystemTime& PBGpsLocationExtended::gnsssystemtime() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.gnssSystemTime)
  return gnsssystemtime_ != NULL ? *gnsssystemtime_
                         : *::PBGnssSystemTime::internal_default_instance();
}
inline ::PBGnssSystemTime* PBGpsLocationExtended::mutable_gnsssystemtime() {
  
  if (gnsssystemtime_ == NULL) {
    gnsssystemtime_ = new ::PBGnssSystemTime;
  }
  // @@protoc_insertion_point(field_mutable:PBGpsLocationExtended.gnssSystemTime)
  return gnsssystemtime_;
}
inline ::PBGnssSystemTime* PBGpsLocationExtended::release_gnsssystemtime() {
  // @@protoc_insertion_point(field_release:PBGpsLocationExtended.gnssSystemTime)
  
  ::PBGnssSystemTime* temp = gnsssystemtime_;
  gnsssystemtime_ = NULL;
  return temp;
}
inline void PBGpsLocationExtended::set_allocated_gnsssystemtime(::PBGnssSystemTime* gnsssystemtime) {
  delete gnsssystemtime_;
  gnsssystemtime_ = gnsssystemtime;
  if (gnsssystemtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGpsLocationExtended.gnssSystemTime)
}

// .PBLocExtDOP extDOP = 24;
inline bool PBGpsLocationExtended::has_extdop() const {
  return this != internal_default_instance() && extdop_ != NULL;
}
inline void PBGpsLocationExtended::clear_extdop() {
  if (GetArenaNoVirtual() == NULL && extdop_ != NULL) delete extdop_;
  extdop_ = NULL;
}
inline const ::PBLocExtDOP& PBGpsLocationExtended::extdop() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.extDOP)
  return extdop_ != NULL ? *extdop_
                         : *::PBLocExtDOP::internal_default_instance();
}
inline ::PBLocExtDOP* PBGpsLocationExtended::mutable_extdop() {
  
  if (extdop_ == NULL) {
    extdop_ = new ::PBLocExtDOP;
  }
  // @@protoc_insertion_point(field_mutable:PBGpsLocationExtended.extDOP)
  return extdop_;
}
inline ::PBLocExtDOP* PBGpsLocationExtended::release_extdop() {
  // @@protoc_insertion_point(field_release:PBGpsLocationExtended.extDOP)
  
  ::PBLocExtDOP* temp = extdop_;
  extdop_ = NULL;
  return temp;
}
inline void PBGpsLocationExtended::set_allocated_extdop(::PBLocExtDOP* extdop) {
  delete extdop_;
  extdop_ = extdop;
  if (extdop) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGpsLocationExtended.extDOP)
}

// float northStdDeviation = 25;
inline void PBGpsLocationExtended::clear_northstddeviation() {
  northstddeviation_ = 0;
}
inline float PBGpsLocationExtended::northstddeviation() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.northStdDeviation)
  return northstddeviation_;
}
inline void PBGpsLocationExtended::set_northstddeviation(float value) {
  
  northstddeviation_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.northStdDeviation)
}

// float eastStdDeviation = 26;
inline void PBGpsLocationExtended::clear_eaststddeviation() {
  eaststddeviation_ = 0;
}
inline float PBGpsLocationExtended::eaststddeviation() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.eastStdDeviation)
  return eaststddeviation_;
}
inline void PBGpsLocationExtended::set_eaststddeviation(float value) {
  
  eaststddeviation_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.eastStdDeviation)
}

// float northVelocity = 27;
inline void PBGpsLocationExtended::clear_northvelocity() {
  northvelocity_ = 0;
}
inline float PBGpsLocationExtended::northvelocity() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.northVelocity)
  return northvelocity_;
}
inline void PBGpsLocationExtended::set_northvelocity(float value) {
  
  northvelocity_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.northVelocity)
}

// float eastVelocity = 28;
inline void PBGpsLocationExtended::clear_eastvelocity() {
  eastvelocity_ = 0;
}
inline float PBGpsLocationExtended::eastvelocity() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.eastVelocity)
  return eastvelocity_;
}
inline void PBGpsLocationExtended::set_eastvelocity(float value) {
  
  eastvelocity_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.eastVelocity)
}

// float upVelocity = 29;
inline void PBGpsLocationExtended::clear_upvelocity() {
  upvelocity_ = 0;
}
inline float PBGpsLocationExtended::upvelocity() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.upVelocity)
  return upvelocity_;
}
inline void PBGpsLocationExtended::set_upvelocity(float value) {
  
  upvelocity_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.upVelocity)
}

// float northVelocityStdDeviation = 30;
inline void PBGpsLocationExtended::clear_northvelocitystddeviation() {
  northvelocitystddeviation_ = 0;
}
inline float PBGpsLocationExtended::northvelocitystddeviation() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.northVelocityStdDeviation)
  return northvelocitystddeviation_;
}
inline void PBGpsLocationExtended::set_northvelocitystddeviation(float value) {
  
  northvelocitystddeviation_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.northVelocityStdDeviation)
}

// float eastVelocityStdDeviation = 31;
inline void PBGpsLocationExtended::clear_eastvelocitystddeviation() {
  eastvelocitystddeviation_ = 0;
}
inline float PBGpsLocationExtended::eastvelocitystddeviation() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.eastVelocityStdDeviation)
  return eastvelocitystddeviation_;
}
inline void PBGpsLocationExtended::set_eastvelocitystddeviation(float value) {
  
  eastvelocitystddeviation_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.eastVelocityStdDeviation)
}

// float upVelocityStdDeviation = 32;
inline void PBGpsLocationExtended::clear_upvelocitystddeviation() {
  upvelocitystddeviation_ = 0;
}
inline float PBGpsLocationExtended::upvelocitystddeviation() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.upVelocityStdDeviation)
  return upvelocitystddeviation_;
}
inline void PBGpsLocationExtended::set_upvelocitystddeviation(float value) {
  
  upvelocitystddeviation_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.upVelocityStdDeviation)
}

// float clockbiasMeter = 33;
inline void PBGpsLocationExtended::clear_clockbiasmeter() {
  clockbiasmeter_ = 0;
}
inline float PBGpsLocationExtended::clockbiasmeter() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.clockbiasMeter)
  return clockbiasmeter_;
}
inline void PBGpsLocationExtended::set_clockbiasmeter(float value) {
  
  clockbiasmeter_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.clockbiasMeter)
}

// float clockBiasStdDeviationMeter = 34;
inline void PBGpsLocationExtended::clear_clockbiasstddeviationmeter() {
  clockbiasstddeviationmeter_ = 0;
}
inline float PBGpsLocationExtended::clockbiasstddeviationmeter() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.clockBiasStdDeviationMeter)
  return clockbiasstddeviationmeter_;
}
inline void PBGpsLocationExtended::set_clockbiasstddeviationmeter(float value) {
  
  clockbiasstddeviationmeter_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.clockBiasStdDeviationMeter)
}

// float clockDrift = 35;
inline void PBGpsLocationExtended::clear_clockdrift() {
  clockdrift_ = 0;
}
inline float PBGpsLocationExtended::clockdrift() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.clockDrift)
  return clockdrift_;
}
inline void PBGpsLocationExtended::set_clockdrift(float value) {
  
  clockdrift_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.clockDrift)
}

// float clockDriftStdDeviation = 36;
inline void PBGpsLocationExtended::clear_clockdriftstddeviation() {
  clockdriftstddeviation_ = 0;
}
inline float PBGpsLocationExtended::clockdriftstddeviation() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.clockDriftStdDeviation)
  return clockdriftstddeviation_;
}
inline void PBGpsLocationExtended::set_clockdriftstddeviation(float value) {
  
  clockdriftstddeviation_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.clockDriftStdDeviation)
}

// uint32 numValidRefStations = 37;
inline void PBGpsLocationExtended::clear_numvalidrefstations() {
  numvalidrefstations_ = 0u;
}
inline ::google::protobuf::uint32 PBGpsLocationExtended::numvalidrefstations() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.numValidRefStations)
  return numvalidrefstations_;
}
inline void PBGpsLocationExtended::set_numvalidrefstations(::google::protobuf::uint32 value) {
  
  numvalidrefstations_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.numValidRefStations)
}

// repeated uint32 referenceStation = 38;
inline int PBGpsLocationExtended::referencestation_size() const {
  return referencestation_.size();
}
inline void PBGpsLocationExtended::clear_referencestation() {
  referencestation_.Clear();
}
inline ::google::protobuf::uint32 PBGpsLocationExtended::referencestation(int index) const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.referenceStation)
  return referencestation_.Get(index);
}
inline void PBGpsLocationExtended::set_referencestation(int index, ::google::protobuf::uint32 value) {
  referencestation_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.referenceStation)
}
inline void PBGpsLocationExtended::add_referencestation(::google::protobuf::uint32 value) {
  referencestation_.Add(value);
  // @@protoc_insertion_point(field_add:PBGpsLocationExtended.referenceStation)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBGpsLocationExtended::referencestation() const {
  // @@protoc_insertion_point(field_list:PBGpsLocationExtended.referenceStation)
  return referencestation_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBGpsLocationExtended::mutable_referencestation() {
  // @@protoc_insertion_point(field_mutable_list:PBGpsLocationExtended.referenceStation)
  return &referencestation_;
}

// uint32 numOfMeasReceived = 39;
inline void PBGpsLocationExtended::clear_numofmeasreceived() {
  numofmeasreceived_ = 0u;
}
inline ::google::protobuf::uint32 PBGpsLocationExtended::numofmeasreceived() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.numOfMeasReceived)
  return numofmeasreceived_;
}
inline void PBGpsLocationExtended::set_numofmeasreceived(::google::protobuf::uint32 value) {
  
  numofmeasreceived_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.numOfMeasReceived)
}

// repeated .PBGpsMeasUsageInfo measUsageInfo = 40;
inline int PBGpsLocationExtended::measusageinfo_size() const {
  return measusageinfo_.size();
}
inline void PBGpsLocationExtended::clear_measusageinfo() {
  measusageinfo_.Clear();
}
inline const ::PBGpsMeasUsageInfo& PBGpsLocationExtended::measusageinfo(int index) const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.measUsageInfo)
  return measusageinfo_.Get(index);
}
inline ::PBGpsMeasUsageInfo* PBGpsLocationExtended::mutable_measusageinfo(int index) {
  // @@protoc_insertion_point(field_mutable:PBGpsLocationExtended.measUsageInfo)
  return measusageinfo_.Mutable(index);
}
inline ::PBGpsMeasUsageInfo* PBGpsLocationExtended::add_measusageinfo() {
  // @@protoc_insertion_point(field_add:PBGpsLocationExtended.measUsageInfo)
  return measusageinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PBGpsMeasUsageInfo >*
PBGpsLocationExtended::mutable_measusageinfo() {
  // @@protoc_insertion_point(field_mutable_list:PBGpsLocationExtended.measUsageInfo)
  return &measusageinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PBGpsMeasUsageInfo >&
PBGpsLocationExtended::measusageinfo() const {
  // @@protoc_insertion_point(field_list:PBGpsLocationExtended.measUsageInfo)
  return measusageinfo_;
}

// uint32 leapSeconds = 41;
inline void PBGpsLocationExtended::clear_leapseconds() {
  leapseconds_ = 0u;
}
inline ::google::protobuf::uint32 PBGpsLocationExtended::leapseconds() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.leapSeconds)
  return leapseconds_;
}
inline void PBGpsLocationExtended::set_leapseconds(::google::protobuf::uint32 value) {
  
  leapseconds_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.leapSeconds)
}

// float timeUncMs = 42;
inline void PBGpsLocationExtended::clear_timeuncms() {
  timeuncms_ = 0;
}
inline float PBGpsLocationExtended::timeuncms() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.timeUncMs)
  return timeuncms_;
}
inline void PBGpsLocationExtended::set_timeuncms(float value) {
  
  timeuncms_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.timeUncMs)
}

// float headingRateDeg = 43;
inline void PBGpsLocationExtended::clear_headingratedeg() {
  headingratedeg_ = 0;
}
inline float PBGpsLocationExtended::headingratedeg() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.headingRateDeg)
  return headingratedeg_;
}
inline void PBGpsLocationExtended::set_headingratedeg(float value) {
  
  headingratedeg_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.headingRateDeg)
}

// uint32 calibrationConfidence = 44;
inline void PBGpsLocationExtended::clear_calibrationconfidence() {
  calibrationconfidence_ = 0u;
}
inline ::google::protobuf::uint32 PBGpsLocationExtended::calibrationconfidence() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.calibrationConfidence)
  return calibrationconfidence_;
}
inline void PBGpsLocationExtended::set_calibrationconfidence(::google::protobuf::uint32 value) {
  
  calibrationconfidence_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.calibrationConfidence)
}

// uint32 calibrationStatus = 45;
inline void PBGpsLocationExtended::clear_calibrationstatus() {
  calibrationstatus_ = 0u;
}
inline ::google::protobuf::uint32 PBGpsLocationExtended::calibrationstatus() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.calibrationStatus)
  return calibrationstatus_;
}
inline void PBGpsLocationExtended::set_calibrationstatus(::google::protobuf::uint32 value) {
  
  calibrationstatus_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.calibrationStatus)
}

// .PBLocOutputEngineType locOutputEngType = 46;
inline void PBGpsLocationExtended::clear_locoutputengtype() {
  locoutputengtype_ = 0;
}
inline ::PBLocOutputEngineType PBGpsLocationExtended::locoutputengtype() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.locOutputEngType)
  return static_cast< ::PBLocOutputEngineType >(locoutputengtype_);
}
inline void PBGpsLocationExtended::set_locoutputengtype(::PBLocOutputEngineType value) {
  
  locoutputengtype_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.locOutputEngType)
}

// uint32 locOutputEngMask = 47;
inline void PBGpsLocationExtended::clear_locoutputengmask() {
  locoutputengmask_ = 0u;
}
inline ::google::protobuf::uint32 PBGpsLocationExtended::locoutputengmask() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.locOutputEngMask)
  return locoutputengmask_;
}
inline void PBGpsLocationExtended::set_locoutputengmask(::google::protobuf::uint32 value) {
  
  locoutputengmask_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.locOutputEngMask)
}

// .PBLocDgnssCorrectionSourceType dgnssCorrectionSourceType = 48;
inline void PBGpsLocationExtended::clear_dgnsscorrectionsourcetype() {
  dgnsscorrectionsourcetype_ = 0;
}
inline ::PBLocDgnssCorrectionSourceType PBGpsLocationExtended::dgnsscorrectionsourcetype() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.dgnssCorrectionSourceType)
  return static_cast< ::PBLocDgnssCorrectionSourceType >(dgnsscorrectionsourcetype_);
}
inline void PBGpsLocationExtended::set_dgnsscorrectionsourcetype(::PBLocDgnssCorrectionSourceType value) {
  
  dgnsscorrectionsourcetype_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.dgnssCorrectionSourceType)
}

// uint32 dgnssCorrectionSourceID = 49;
inline void PBGpsLocationExtended::clear_dgnsscorrectionsourceid() {
  dgnsscorrectionsourceid_ = 0u;
}
inline ::google::protobuf::uint32 PBGpsLocationExtended::dgnsscorrectionsourceid() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.dgnssCorrectionSourceID)
  return dgnsscorrectionsourceid_;
}
inline void PBGpsLocationExtended::set_dgnsscorrectionsourceid(::google::protobuf::uint32 value) {
  
  dgnsscorrectionsourceid_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.dgnssCorrectionSourceID)
}

// uint32 dgnssConstellationUsageMask = 50;
inline void PBGpsLocationExtended::clear_dgnssconstellationusagemask() {
  dgnssconstellationusagemask_ = 0u;
}
inline ::google::protobuf::uint32 PBGpsLocationExtended::dgnssconstellationusagemask() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.dgnssConstellationUsageMask)
  return dgnssconstellationusagemask_;
}
inline void PBGpsLocationExtended::set_dgnssconstellationusagemask(::google::protobuf::uint32 value) {
  
  dgnssconstellationusagemask_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.dgnssConstellationUsageMask)
}

// uint32 dgnssRefStationId = 51;
inline void PBGpsLocationExtended::clear_dgnssrefstationid() {
  dgnssrefstationid_ = 0u;
}
inline ::google::protobuf::uint32 PBGpsLocationExtended::dgnssrefstationid() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.dgnssRefStationId)
  return dgnssrefstationid_;
}
inline void PBGpsLocationExtended::set_dgnssrefstationid(::google::protobuf::uint32 value) {
  
  dgnssrefstationid_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.dgnssRefStationId)
}

// uint32 dgnssDataAgeMsec = 52;
inline void PBGpsLocationExtended::clear_dgnssdataagemsec() {
  dgnssdataagemsec_ = 0u;
}
inline ::google::protobuf::uint32 PBGpsLocationExtended::dgnssdataagemsec() const {
  // @@protoc_insertion_point(field_get:PBGpsLocationExtended.dgnssDataAgeMsec)
  return dgnssdataagemsec_;
}
inline void PBGpsLocationExtended::set_dgnssdataagemsec(::google::protobuf::uint32 value) {
  
  dgnssdataagemsec_ = value;
  // @@protoc_insertion_point(field_set:PBGpsLocationExtended.dgnssDataAgeMsec)
}

// -------------------------------------------------------------------

// PBGnssAidingData

// bool deleteAll = 1;
inline void PBGnssAidingData::clear_deleteall() {
  deleteall_ = false;
}
inline bool PBGnssAidingData::deleteall() const {
  // @@protoc_insertion_point(field_get:PBGnssAidingData.deleteAll)
  return deleteall_;
}
inline void PBGnssAidingData::set_deleteall(bool value) {
  
  deleteall_ = value;
  // @@protoc_insertion_point(field_set:PBGnssAidingData.deleteAll)
}

// .PBGnssAidingDataSv sv = 2;
inline bool PBGnssAidingData::has_sv() const {
  return this != internal_default_instance() && sv_ != NULL;
}
inline void PBGnssAidingData::clear_sv() {
  if (GetArenaNoVirtual() == NULL && sv_ != NULL) delete sv_;
  sv_ = NULL;
}
inline const ::PBGnssAidingDataSv& PBGnssAidingData::sv() const {
  // @@protoc_insertion_point(field_get:PBGnssAidingData.sv)
  return sv_ != NULL ? *sv_
                         : *::PBGnssAidingDataSv::internal_default_instance();
}
inline ::PBGnssAidingDataSv* PBGnssAidingData::mutable_sv() {
  
  if (sv_ == NULL) {
    sv_ = new ::PBGnssAidingDataSv;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssAidingData.sv)
  return sv_;
}
inline ::PBGnssAidingDataSv* PBGnssAidingData::release_sv() {
  // @@protoc_insertion_point(field_release:PBGnssAidingData.sv)
  
  ::PBGnssAidingDataSv* temp = sv_;
  sv_ = NULL;
  return temp;
}
inline void PBGnssAidingData::set_allocated_sv(::PBGnssAidingDataSv* sv) {
  delete sv_;
  sv_ = sv;
  if (sv) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssAidingData.sv)
}

// .PBGnssAidingDataCommon common = 3;
inline bool PBGnssAidingData::has_common() const {
  return this != internal_default_instance() && common_ != NULL;
}
inline void PBGnssAidingData::clear_common() {
  if (GetArenaNoVirtual() == NULL && common_ != NULL) delete common_;
  common_ = NULL;
}
inline const ::PBGnssAidingDataCommon& PBGnssAidingData::common() const {
  // @@protoc_insertion_point(field_get:PBGnssAidingData.common)
  return common_ != NULL ? *common_
                         : *::PBGnssAidingDataCommon::internal_default_instance();
}
inline ::PBGnssAidingDataCommon* PBGnssAidingData::mutable_common() {
  
  if (common_ == NULL) {
    common_ = new ::PBGnssAidingDataCommon;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssAidingData.common)
  return common_;
}
inline ::PBGnssAidingDataCommon* PBGnssAidingData::release_common() {
  // @@protoc_insertion_point(field_release:PBGnssAidingData.common)
  
  ::PBGnssAidingDataCommon* temp = common_;
  common_ = NULL;
  return temp;
}
inline void PBGnssAidingData::set_allocated_common(::PBGnssAidingDataCommon* common) {
  delete common_;
  common_ = common;
  if (common) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssAidingData.common)
}

// uint32 posEngineMask = 4;
inline void PBGnssAidingData::clear_posenginemask() {
  posenginemask_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssAidingData::posenginemask() const {
  // @@protoc_insertion_point(field_get:PBGnssAidingData.posEngineMask)
  return posenginemask_;
}
inline void PBGnssAidingData::set_posenginemask(::google::protobuf::uint32 value) {
  
  posenginemask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssAidingData.posEngineMask)
}

// -------------------------------------------------------------------

// PBGnssAidingDataSv

// uint32 svMask = 1;
inline void PBGnssAidingDataSv::clear_svmask() {
  svmask_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssAidingDataSv::svmask() const {
  // @@protoc_insertion_point(field_get:PBGnssAidingDataSv.svMask)
  return svmask_;
}
inline void PBGnssAidingDataSv::set_svmask(::google::protobuf::uint32 value) {
  
  svmask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssAidingDataSv.svMask)
}

// uint32 svTypeMask = 2;
inline void PBGnssAidingDataSv::clear_svtypemask() {
  svtypemask_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssAidingDataSv::svtypemask() const {
  // @@protoc_insertion_point(field_get:PBGnssAidingDataSv.svTypeMask)
  return svtypemask_;
}
inline void PBGnssAidingDataSv::set_svtypemask(::google::protobuf::uint32 value) {
  
  svtypemask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssAidingDataSv.svTypeMask)
}

// -------------------------------------------------------------------

// PBGnssAidingDataCommon

// uint32 mask = 1;
inline void PBGnssAidingDataCommon::clear_mask() {
  mask_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssAidingDataCommon::mask() const {
  // @@protoc_insertion_point(field_get:PBGnssAidingDataCommon.mask)
  return mask_;
}
inline void PBGnssAidingDataCommon::set_mask(::google::protobuf::uint32 value) {
  
  mask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssAidingDataCommon.mask)
}

// -------------------------------------------------------------------

// PBGnssSvMeasurementSet

// bool isNhz = 1;
inline void PBGnssSvMeasurementSet::clear_isnhz() {
  isnhz_ = false;
}
inline bool PBGnssSvMeasurementSet::isnhz() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementSet.isNhz)
  return isnhz_;
}
inline void PBGnssSvMeasurementSet::set_isnhz(bool value) {
  
  isnhz_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMeasurementSet.isNhz)
}

// uint64 ptpTimeNs = 2;
inline void PBGnssSvMeasurementSet::clear_ptptimens() {
  ptptimens_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvMeasurementSet::ptptimens() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementSet.ptpTimeNs)
  return ptptimens_;
}
inline void PBGnssSvMeasurementSet::set_ptptimens(::google::protobuf::uint64 value) {
  
  ptptimens_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMeasurementSet.ptpTimeNs)
}

// .PBGnssSvMeasurementHeader svMeasSetHeader = 3;
inline bool PBGnssSvMeasurementSet::has_svmeassetheader() const {
  return this != internal_default_instance() && svmeassetheader_ != NULL;
}
inline void PBGnssSvMeasurementSet::clear_svmeassetheader() {
  if (GetArenaNoVirtual() == NULL && svmeassetheader_ != NULL) delete svmeassetheader_;
  svmeassetheader_ = NULL;
}
inline const ::PBGnssSvMeasurementHeader& PBGnssSvMeasurementSet::svmeassetheader() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementSet.svMeasSetHeader)
  return svmeassetheader_ != NULL ? *svmeassetheader_
                         : *::PBGnssSvMeasurementHeader::internal_default_instance();
}
inline ::PBGnssSvMeasurementHeader* PBGnssSvMeasurementSet::mutable_svmeassetheader() {
  
  if (svmeassetheader_ == NULL) {
    svmeassetheader_ = new ::PBGnssSvMeasurementHeader;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvMeasurementSet.svMeasSetHeader)
  return svmeassetheader_;
}
inline ::PBGnssSvMeasurementHeader* PBGnssSvMeasurementSet::release_svmeassetheader() {
  // @@protoc_insertion_point(field_release:PBGnssSvMeasurementSet.svMeasSetHeader)
  
  ::PBGnssSvMeasurementHeader* temp = svmeassetheader_;
  svmeassetheader_ = NULL;
  return temp;
}
inline void PBGnssSvMeasurementSet::set_allocated_svmeassetheader(::PBGnssSvMeasurementHeader* svmeassetheader) {
  delete svmeassetheader_;
  svmeassetheader_ = svmeassetheader;
  if (svmeassetheader) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvMeasurementSet.svMeasSetHeader)
}

// uint32 svMeasCount = 4;
inline void PBGnssSvMeasurementSet::clear_svmeascount() {
  svmeascount_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssSvMeasurementSet::svmeascount() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementSet.svMeasCount)
  return svmeascount_;
}
inline void PBGnssSvMeasurementSet::set_svmeascount(::google::protobuf::uint32 value) {
  
  svmeascount_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMeasurementSet.svMeasCount)
}

// repeated .PBSVMeasurementStructType svMeas = 5;
inline int PBGnssSvMeasurementSet::svmeas_size() const {
  return svmeas_.size();
}
inline void PBGnssSvMeasurementSet::clear_svmeas() {
  svmeas_.Clear();
}
inline const ::PBSVMeasurementStructType& PBGnssSvMeasurementSet::svmeas(int index) const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementSet.svMeas)
  return svmeas_.Get(index);
}
inline ::PBSVMeasurementStructType* PBGnssSvMeasurementSet::mutable_svmeas(int index) {
  // @@protoc_insertion_point(field_mutable:PBGnssSvMeasurementSet.svMeas)
  return svmeas_.Mutable(index);
}
inline ::PBSVMeasurementStructType* PBGnssSvMeasurementSet::add_svmeas() {
  // @@protoc_insertion_point(field_add:PBGnssSvMeasurementSet.svMeas)
  return svmeas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PBSVMeasurementStructType >*
PBGnssSvMeasurementSet::mutable_svmeas() {
  // @@protoc_insertion_point(field_mutable_list:PBGnssSvMeasurementSet.svMeas)
  return &svmeas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSVMeasurementStructType >&
PBGnssSvMeasurementSet::svmeas() const {
  // @@protoc_insertion_point(field_list:PBGnssSvMeasurementSet.svMeas)
  return svmeas_;
}

// -------------------------------------------------------------------

// PBGnssLocDgnssSVMeasurement

// uint32 dgnssMeasStatus = 1;
inline void PBGnssLocDgnssSVMeasurement::clear_dgnssmeasstatus() {
  dgnssmeasstatus_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssLocDgnssSVMeasurement::dgnssmeasstatus() const {
  // @@protoc_insertion_point(field_get:PBGnssLocDgnssSVMeasurement.dgnssMeasStatus)
  return dgnssmeasstatus_;
}
inline void PBGnssLocDgnssSVMeasurement::set_dgnssmeasstatus(::google::protobuf::uint32 value) {
  
  dgnssmeasstatus_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocDgnssSVMeasurement.dgnssMeasStatus)
}

// uint32 diffDataEpochTimeMsec = 2;
inline void PBGnssLocDgnssSVMeasurement::clear_diffdataepochtimemsec() {
  diffdataepochtimemsec_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssLocDgnssSVMeasurement::diffdataepochtimemsec() const {
  // @@protoc_insertion_point(field_get:PBGnssLocDgnssSVMeasurement.diffDataEpochTimeMsec)
  return diffdataepochtimemsec_;
}
inline void PBGnssLocDgnssSVMeasurement::set_diffdataepochtimemsec(::google::protobuf::uint32 value) {
  
  diffdataepochtimemsec_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocDgnssSVMeasurement.diffDataEpochTimeMsec)
}

// float prCorrMeters = 3;
inline void PBGnssLocDgnssSVMeasurement::clear_prcorrmeters() {
  prcorrmeters_ = 0;
}
inline float PBGnssLocDgnssSVMeasurement::prcorrmeters() const {
  // @@protoc_insertion_point(field_get:PBGnssLocDgnssSVMeasurement.prCorrMeters)
  return prcorrmeters_;
}
inline void PBGnssLocDgnssSVMeasurement::set_prcorrmeters(float value) {
  
  prcorrmeters_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocDgnssSVMeasurement.prCorrMeters)
}

// float prrCorrMetersPerSec = 4;
inline void PBGnssLocDgnssSVMeasurement::clear_prrcorrmeterspersec() {
  prrcorrmeterspersec_ = 0;
}
inline float PBGnssLocDgnssSVMeasurement::prrcorrmeterspersec() const {
  // @@protoc_insertion_point(field_get:PBGnssLocDgnssSVMeasurement.prrCorrMetersPerSec)
  return prrcorrmeterspersec_;
}
inline void PBGnssLocDgnssSVMeasurement::set_prrcorrmeterspersec(float value) {
  
  prrcorrmeterspersec_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocDgnssSVMeasurement.prrCorrMetersPerSec)
}

// -------------------------------------------------------------------

// PBSVMeasurementStructType

// .PBGnss_LocSvSystemEnumType gnssSystem = 1;
inline void PBSVMeasurementStructType::clear_gnsssystem() {
  gnsssystem_ = 0;
}
inline ::PBGnss_LocSvSystemEnumType PBSVMeasurementStructType::gnsssystem() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.gnssSystem)
  return static_cast< ::PBGnss_LocSvSystemEnumType >(gnsssystem_);
}
inline void PBSVMeasurementStructType::set_gnsssystem(::PBGnss_LocSvSystemEnumType value) {
  
  gnsssystem_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.gnssSystem)
}

// fixed32 gnssSignalTypeMask = 2;
inline void PBSVMeasurementStructType::clear_gnsssignaltypemask() {
  gnsssignaltypemask_ = 0u;
}
inline ::google::protobuf::uint32 PBSVMeasurementStructType::gnsssignaltypemask() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.gnssSignalTypeMask)
  return gnsssignaltypemask_;
}
inline void PBSVMeasurementStructType::set_gnsssignaltypemask(::google::protobuf::uint32 value) {
  
  gnsssignaltypemask_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.gnssSignalTypeMask)
}

// uint32 gnssSvId = 3;
inline void PBSVMeasurementStructType::clear_gnsssvid() {
  gnsssvid_ = 0u;
}
inline ::google::protobuf::uint32 PBSVMeasurementStructType::gnsssvid() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.gnssSvId)
  return gnsssvid_;
}
inline void PBSVMeasurementStructType::set_gnsssvid(::google::protobuf::uint32 value) {
  
  gnsssvid_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.gnssSvId)
}

// uint32 gloFrequency = 4;
inline void PBSVMeasurementStructType::clear_glofrequency() {
  glofrequency_ = 0u;
}
inline ::google::protobuf::uint32 PBSVMeasurementStructType::glofrequency() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.gloFrequency)
  return glofrequency_;
}
inline void PBSVMeasurementStructType::set_glofrequency(::google::protobuf::uint32 value) {
  
  glofrequency_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.gloFrequency)
}

// .PBSvSearchStatus svStatus = 5;
inline void PBSVMeasurementStructType::clear_svstatus() {
  svstatus_ = 0;
}
inline ::PBSvSearchStatus PBSVMeasurementStructType::svstatus() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.svStatus)
  return static_cast< ::PBSvSearchStatus >(svstatus_);
}
inline void PBSVMeasurementStructType::set_svstatus(::PBSvSearchStatus value) {
  
  svstatus_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.svStatus)
}

// bool healthStatusValid = 6;
inline void PBSVMeasurementStructType::clear_healthstatusvalid() {
  healthstatusvalid_ = false;
}
inline bool PBSVMeasurementStructType::healthstatusvalid() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.healthStatusValid)
  return healthstatusvalid_;
}
inline void PBSVMeasurementStructType::set_healthstatusvalid(bool value) {
  
  healthstatusvalid_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.healthStatusValid)
}

// bool healthStatus = 7;
inline void PBSVMeasurementStructType::clear_healthstatus() {
  healthstatus_ = false;
}
inline bool PBSVMeasurementStructType::healthstatus() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.healthStatus)
  return healthstatus_;
}
inline void PBSVMeasurementStructType::set_healthstatus(bool value) {
  
  healthstatus_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.healthStatus)
}

// uint32 svInfoMask = 8;
inline void PBSVMeasurementStructType::clear_svinfomask() {
  svinfomask_ = 0u;
}
inline ::google::protobuf::uint32 PBSVMeasurementStructType::svinfomask() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.svInfoMask)
  return svinfomask_;
}
inline void PBSVMeasurementStructType::set_svinfomask(::google::protobuf::uint32 value) {
  
  svinfomask_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.svInfoMask)
}

// uint64 measurementStatus = 9;
inline void PBSVMeasurementStructType::clear_measurementstatus() {
  measurementstatus_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBSVMeasurementStructType::measurementstatus() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.measurementStatus)
  return measurementstatus_;
}
inline void PBSVMeasurementStructType::set_measurementstatus(::google::protobuf::uint64 value) {
  
  measurementstatus_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.measurementStatus)
}

// uint32 CNo = 10;
inline void PBSVMeasurementStructType::clear_cno() {
  cno_ = 0u;
}
inline ::google::protobuf::uint32 PBSVMeasurementStructType::cno() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.CNo)
  return cno_;
}
inline void PBSVMeasurementStructType::set_cno(::google::protobuf::uint32 value) {
  
  cno_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.CNo)
}

// uint32 gloRfLoss = 11;
inline void PBSVMeasurementStructType::clear_glorfloss() {
  glorfloss_ = 0u;
}
inline ::google::protobuf::uint32 PBSVMeasurementStructType::glorfloss() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.gloRfLoss)
  return glorfloss_;
}
inline void PBSVMeasurementStructType::set_glorfloss(::google::protobuf::uint32 value) {
  
  glorfloss_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.gloRfLoss)
}

// bool lossOfLock = 12;
inline void PBSVMeasurementStructType::clear_lossoflock() {
  lossoflock_ = false;
}
inline bool PBSVMeasurementStructType::lossoflock() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.lossOfLock)
  return lossoflock_;
}
inline void PBSVMeasurementStructType::set_lossoflock(bool value) {
  
  lossoflock_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.lossOfLock)
}

// int32 measLatency = 13;
inline void PBSVMeasurementStructType::clear_measlatency() {
  measlatency_ = 0;
}
inline ::google::protobuf::int32 PBSVMeasurementStructType::measlatency() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.measLatency)
  return measlatency_;
}
inline void PBSVMeasurementStructType::set_measlatency(::google::protobuf::int32 value) {
  
  measlatency_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.measLatency)
}

// .PBSVTimeSpeedInfo svTimeSpeed = 14;
inline bool PBSVMeasurementStructType::has_svtimespeed() const {
  return this != internal_default_instance() && svtimespeed_ != NULL;
}
inline void PBSVMeasurementStructType::clear_svtimespeed() {
  if (GetArenaNoVirtual() == NULL && svtimespeed_ != NULL) delete svtimespeed_;
  svtimespeed_ = NULL;
}
inline const ::PBSVTimeSpeedInfo& PBSVMeasurementStructType::svtimespeed() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.svTimeSpeed)
  return svtimespeed_ != NULL ? *svtimespeed_
                         : *::PBSVTimeSpeedInfo::internal_default_instance();
}
inline ::PBSVTimeSpeedInfo* PBSVMeasurementStructType::mutable_svtimespeed() {
  
  if (svtimespeed_ == NULL) {
    svtimespeed_ = new ::PBSVTimeSpeedInfo;
  }
  // @@protoc_insertion_point(field_mutable:PBSVMeasurementStructType.svTimeSpeed)
  return svtimespeed_;
}
inline ::PBSVTimeSpeedInfo* PBSVMeasurementStructType::release_svtimespeed() {
  // @@protoc_insertion_point(field_release:PBSVMeasurementStructType.svTimeSpeed)
  
  ::PBSVTimeSpeedInfo* temp = svtimespeed_;
  svtimespeed_ = NULL;
  return temp;
}
inline void PBSVMeasurementStructType::set_allocated_svtimespeed(::PBSVTimeSpeedInfo* svtimespeed) {
  delete svtimespeed_;
  svtimespeed_ = svtimespeed;
  if (svtimespeed) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBSVMeasurementStructType.svTimeSpeed)
}

// float dopplerAccel = 15;
inline void PBSVMeasurementStructType::clear_doppleraccel() {
  doppleraccel_ = 0;
}
inline float PBSVMeasurementStructType::doppleraccel() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.dopplerAccel)
  return doppleraccel_;
}
inline void PBSVMeasurementStructType::set_doppleraccel(float value) {
  
  doppleraccel_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.dopplerAccel)
}

// bool multipathEstValid = 16;
inline void PBSVMeasurementStructType::clear_multipathestvalid() {
  multipathestvalid_ = false;
}
inline bool PBSVMeasurementStructType::multipathestvalid() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.multipathEstValid)
  return multipathestvalid_;
}
inline void PBSVMeasurementStructType::set_multipathestvalid(bool value) {
  
  multipathestvalid_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.multipathEstValid)
}

// float multipathEstimate = 17;
inline void PBSVMeasurementStructType::clear_multipathestimate() {
  multipathestimate_ = 0;
}
inline float PBSVMeasurementStructType::multipathestimate() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.multipathEstimate)
  return multipathestimate_;
}
inline void PBSVMeasurementStructType::set_multipathestimate(float value) {
  
  multipathestimate_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.multipathEstimate)
}

// bool fineSpeedValid = 18;
inline void PBSVMeasurementStructType::clear_finespeedvalid() {
  finespeedvalid_ = false;
}
inline bool PBSVMeasurementStructType::finespeedvalid() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.fineSpeedValid)
  return finespeedvalid_;
}
inline void PBSVMeasurementStructType::set_finespeedvalid(bool value) {
  
  finespeedvalid_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.fineSpeedValid)
}

// float fineSpeed = 19;
inline void PBSVMeasurementStructType::clear_finespeed() {
  finespeed_ = 0;
}
inline float PBSVMeasurementStructType::finespeed() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.fineSpeed)
  return finespeed_;
}
inline void PBSVMeasurementStructType::set_finespeed(float value) {
  
  finespeed_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.fineSpeed)
}

// bool fineSpeedUncValid = 20;
inline void PBSVMeasurementStructType::clear_finespeeduncvalid() {
  finespeeduncvalid_ = false;
}
inline bool PBSVMeasurementStructType::finespeeduncvalid() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.fineSpeedUncValid)
  return finespeeduncvalid_;
}
inline void PBSVMeasurementStructType::set_finespeeduncvalid(bool value) {
  
  finespeeduncvalid_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.fineSpeedUncValid)
}

// float fineSpeedUnc = 21;
inline void PBSVMeasurementStructType::clear_finespeedunc() {
  finespeedunc_ = 0;
}
inline float PBSVMeasurementStructType::finespeedunc() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.fineSpeedUnc)
  return finespeedunc_;
}
inline void PBSVMeasurementStructType::set_finespeedunc(float value) {
  
  finespeedunc_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.fineSpeedUnc)
}

// bool carrierPhaseValid = 22;
inline void PBSVMeasurementStructType::clear_carrierphasevalid() {
  carrierphasevalid_ = false;
}
inline bool PBSVMeasurementStructType::carrierphasevalid() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.carrierPhaseValid)
  return carrierphasevalid_;
}
inline void PBSVMeasurementStructType::set_carrierphasevalid(bool value) {
  
  carrierphasevalid_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.carrierPhaseValid)
}

// double carrierPhase = 23;
inline void PBSVMeasurementStructType::clear_carrierphase() {
  carrierphase_ = 0;
}
inline double PBSVMeasurementStructType::carrierphase() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.carrierPhase)
  return carrierphase_;
}
inline void PBSVMeasurementStructType::set_carrierphase(double value) {
  
  carrierphase_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.carrierPhase)
}

// bool cycleSlipCountValid = 24;
inline void PBSVMeasurementStructType::clear_cycleslipcountvalid() {
  cycleslipcountvalid_ = false;
}
inline bool PBSVMeasurementStructType::cycleslipcountvalid() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.cycleSlipCountValid)
  return cycleslipcountvalid_;
}
inline void PBSVMeasurementStructType::set_cycleslipcountvalid(bool value) {
  
  cycleslipcountvalid_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.cycleSlipCountValid)
}

// uint32 cycleSlipCount = 25;
inline void PBSVMeasurementStructType::clear_cycleslipcount() {
  cycleslipcount_ = 0u;
}
inline ::google::protobuf::uint32 PBSVMeasurementStructType::cycleslipcount() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.cycleSlipCount)
  return cycleslipcount_;
}
inline void PBSVMeasurementStructType::set_cycleslipcount(::google::protobuf::uint32 value) {
  
  cycleslipcount_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.cycleSlipCount)
}

// bool svDirectionValid = 26;
inline void PBSVMeasurementStructType::clear_svdirectionvalid() {
  svdirectionvalid_ = false;
}
inline bool PBSVMeasurementStructType::svdirectionvalid() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.svDirectionValid)
  return svdirectionvalid_;
}
inline void PBSVMeasurementStructType::set_svdirectionvalid(bool value) {
  
  svdirectionvalid_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.svDirectionValid)
}

// float svAzimuth = 27;
inline void PBSVMeasurementStructType::clear_svazimuth() {
  svazimuth_ = 0;
}
inline float PBSVMeasurementStructType::svazimuth() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.svAzimuth)
  return svazimuth_;
}
inline void PBSVMeasurementStructType::set_svazimuth(float value) {
  
  svazimuth_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.svAzimuth)
}

// float svElevation = 28;
inline void PBSVMeasurementStructType::clear_svelevation() {
  svelevation_ = 0;
}
inline float PBSVMeasurementStructType::svelevation() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.svElevation)
  return svelevation_;
}
inline void PBSVMeasurementStructType::set_svelevation(float value) {
  
  svelevation_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.svElevation)
}

// uint64 validMeasStatusMask = 29;
inline void PBSVMeasurementStructType::clear_validmeasstatusmask() {
  validmeasstatusmask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBSVMeasurementStructType::validmeasstatusmask() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.validMeasStatusMask)
  return validmeasstatusmask_;
}
inline void PBSVMeasurementStructType::set_validmeasstatusmask(::google::protobuf::uint64 value) {
  
  validmeasstatusmask_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.validMeasStatusMask)
}

// bool carrierPhaseUncValid = 30;
inline void PBSVMeasurementStructType::clear_carrierphaseuncvalid() {
  carrierphaseuncvalid_ = false;
}
inline bool PBSVMeasurementStructType::carrierphaseuncvalid() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.carrierPhaseUncValid)
  return carrierphaseuncvalid_;
}
inline void PBSVMeasurementStructType::set_carrierphaseuncvalid(bool value) {
  
  carrierphaseuncvalid_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.carrierPhaseUncValid)
}

// float carrierPhaseUnc = 31;
inline void PBSVMeasurementStructType::clear_carrierphaseunc() {
  carrierphaseunc_ = 0;
}
inline float PBSVMeasurementStructType::carrierphaseunc() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.carrierPhaseUnc)
  return carrierphaseunc_;
}
inline void PBSVMeasurementStructType::set_carrierphaseunc(float value) {
  
  carrierphaseunc_ = value;
  // @@protoc_insertion_point(field_set:PBSVMeasurementStructType.carrierPhaseUnc)
}

// .PBGnssLocDgnssSVMeasurement dgnssSvMeas = 32;
inline bool PBSVMeasurementStructType::has_dgnsssvmeas() const {
  return this != internal_default_instance() && dgnsssvmeas_ != NULL;
}
inline void PBSVMeasurementStructType::clear_dgnsssvmeas() {
  if (GetArenaNoVirtual() == NULL && dgnsssvmeas_ != NULL) delete dgnsssvmeas_;
  dgnsssvmeas_ = NULL;
}
inline const ::PBGnssLocDgnssSVMeasurement& PBSVMeasurementStructType::dgnsssvmeas() const {
  // @@protoc_insertion_point(field_get:PBSVMeasurementStructType.dgnssSvMeas)
  return dgnsssvmeas_ != NULL ? *dgnsssvmeas_
                         : *::PBGnssLocDgnssSVMeasurement::internal_default_instance();
}
inline ::PBGnssLocDgnssSVMeasurement* PBSVMeasurementStructType::mutable_dgnsssvmeas() {
  
  if (dgnsssvmeas_ == NULL) {
    dgnsssvmeas_ = new ::PBGnssLocDgnssSVMeasurement;
  }
  // @@protoc_insertion_point(field_mutable:PBSVMeasurementStructType.dgnssSvMeas)
  return dgnsssvmeas_;
}
inline ::PBGnssLocDgnssSVMeasurement* PBSVMeasurementStructType::release_dgnsssvmeas() {
  // @@protoc_insertion_point(field_release:PBSVMeasurementStructType.dgnssSvMeas)
  
  ::PBGnssLocDgnssSVMeasurement* temp = dgnsssvmeas_;
  dgnsssvmeas_ = NULL;
  return temp;
}
inline void PBSVMeasurementStructType::set_allocated_dgnsssvmeas(::PBGnssLocDgnssSVMeasurement* dgnsssvmeas) {
  delete dgnsssvmeas_;
  dgnsssvmeas_ = dgnsssvmeas;
  if (dgnsssvmeas) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBSVMeasurementStructType.dgnssSvMeas)
}

// -------------------------------------------------------------------

// PBGnssSvPolynomial

// uint32 gnssSvId = 1;
inline void PBGnssSvPolynomial::clear_gnsssvid() {
  gnsssvid_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssSvPolynomial::gnsssvid() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.gnssSvId)
  return gnsssvid_;
}
inline void PBGnssSvPolynomial::set_gnsssvid(::google::protobuf::uint32 value) {
  
  gnsssvid_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.gnssSvId)
}

// uint32 freqNum = 2;
inline void PBGnssSvPolynomial::clear_freqnum() {
  freqnum_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssSvPolynomial::freqnum() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.freqNum)
  return freqnum_;
}
inline void PBGnssSvPolynomial::set_freqnum(::google::protobuf::uint32 value) {
  
  freqnum_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.freqNum)
}

// uint32 svPolyStatusMaskValidity = 3;
inline void PBGnssSvPolynomial::clear_svpolystatusmaskvalidity() {
  svpolystatusmaskvalidity_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssSvPolynomial::svpolystatusmaskvalidity() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.svPolyStatusMaskValidity)
  return svpolystatusmaskvalidity_;
}
inline void PBGnssSvPolynomial::set_svpolystatusmaskvalidity(::google::protobuf::uint32 value) {
  
  svpolystatusmaskvalidity_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.svPolyStatusMaskValidity)
}

// uint32 svPolyStatusMask = 4;
inline void PBGnssSvPolynomial::clear_svpolystatusmask() {
  svpolystatusmask_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssSvPolynomial::svpolystatusmask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.svPolyStatusMask)
  return svpolystatusmask_;
}
inline void PBGnssSvPolynomial::set_svpolystatusmask(::google::protobuf::uint32 value) {
  
  svpolystatusmask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.svPolyStatusMask)
}

// uint32 is_valid = 5;
inline void PBGnssSvPolynomial::clear_is_valid() {
  is_valid_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssSvPolynomial::is_valid() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.is_valid)
  return is_valid_;
}
inline void PBGnssSvPolynomial::set_is_valid(::google::protobuf::uint32 value) {
  
  is_valid_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.is_valid)
}

// uint32 iode = 6;
inline void PBGnssSvPolynomial::clear_iode() {
  iode_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssSvPolynomial::iode() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.iode)
  return iode_;
}
inline void PBGnssSvPolynomial::set_iode(::google::protobuf::uint32 value) {
  
  iode_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.iode)
}

// float T0 = 7;
inline void PBGnssSvPolynomial::clear_t0() {
  t0_ = 0;
}
inline float PBGnssSvPolynomial::t0() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.T0)
  return t0_;
}
inline void PBGnssSvPolynomial::set_t0(float value) {
  
  t0_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.T0)
}

// repeated float polyCoeffXYZ0 = 8;
inline int PBGnssSvPolynomial::polycoeffxyz0_size() const {
  return polycoeffxyz0_.size();
}
inline void PBGnssSvPolynomial::clear_polycoeffxyz0() {
  polycoeffxyz0_.Clear();
}
inline float PBGnssSvPolynomial::polycoeffxyz0(int index) const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.polyCoeffXYZ0)
  return polycoeffxyz0_.Get(index);
}
inline void PBGnssSvPolynomial::set_polycoeffxyz0(int index, float value) {
  polycoeffxyz0_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.polyCoeffXYZ0)
}
inline void PBGnssSvPolynomial::add_polycoeffxyz0(float value) {
  polycoeffxyz0_.Add(value);
  // @@protoc_insertion_point(field_add:PBGnssSvPolynomial.polyCoeffXYZ0)
}
inline const ::google::protobuf::RepeatedField< float >&
PBGnssSvPolynomial::polycoeffxyz0() const {
  // @@protoc_insertion_point(field_list:PBGnssSvPolynomial.polyCoeffXYZ0)
  return polycoeffxyz0_;
}
inline ::google::protobuf::RepeatedField< float >*
PBGnssSvPolynomial::mutable_polycoeffxyz0() {
  // @@protoc_insertion_point(field_mutable_list:PBGnssSvPolynomial.polyCoeffXYZ0)
  return &polycoeffxyz0_;
}

// repeated float polyCoefXYZN = 9;
inline int PBGnssSvPolynomial::polycoefxyzn_size() const {
  return polycoefxyzn_.size();
}
inline void PBGnssSvPolynomial::clear_polycoefxyzn() {
  polycoefxyzn_.Clear();
}
inline float PBGnssSvPolynomial::polycoefxyzn(int index) const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.polyCoefXYZN)
  return polycoefxyzn_.Get(index);
}
inline void PBGnssSvPolynomial::set_polycoefxyzn(int index, float value) {
  polycoefxyzn_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.polyCoefXYZN)
}
inline void PBGnssSvPolynomial::add_polycoefxyzn(float value) {
  polycoefxyzn_.Add(value);
  // @@protoc_insertion_point(field_add:PBGnssSvPolynomial.polyCoefXYZN)
}
inline const ::google::protobuf::RepeatedField< float >&
PBGnssSvPolynomial::polycoefxyzn() const {
  // @@protoc_insertion_point(field_list:PBGnssSvPolynomial.polyCoefXYZN)
  return polycoefxyzn_;
}
inline ::google::protobuf::RepeatedField< float >*
PBGnssSvPolynomial::mutable_polycoefxyzn() {
  // @@protoc_insertion_point(field_mutable_list:PBGnssSvPolynomial.polyCoefXYZN)
  return &polycoefxyzn_;
}

// repeated float polyCoefOther = 10;
inline int PBGnssSvPolynomial::polycoefother_size() const {
  return polycoefother_.size();
}
inline void PBGnssSvPolynomial::clear_polycoefother() {
  polycoefother_.Clear();
}
inline float PBGnssSvPolynomial::polycoefother(int index) const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.polyCoefOther)
  return polycoefother_.Get(index);
}
inline void PBGnssSvPolynomial::set_polycoefother(int index, float value) {
  polycoefother_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.polyCoefOther)
}
inline void PBGnssSvPolynomial::add_polycoefother(float value) {
  polycoefother_.Add(value);
  // @@protoc_insertion_point(field_add:PBGnssSvPolynomial.polyCoefOther)
}
inline const ::google::protobuf::RepeatedField< float >&
PBGnssSvPolynomial::polycoefother() const {
  // @@protoc_insertion_point(field_list:PBGnssSvPolynomial.polyCoefOther)
  return polycoefother_;
}
inline ::google::protobuf::RepeatedField< float >*
PBGnssSvPolynomial::mutable_polycoefother() {
  // @@protoc_insertion_point(field_mutable_list:PBGnssSvPolynomial.polyCoefOther)
  return &polycoefother_;
}

// float svPosUnc = 11;
inline void PBGnssSvPolynomial::clear_svposunc() {
  svposunc_ = 0;
}
inline float PBGnssSvPolynomial::svposunc() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.svPosUnc)
  return svposunc_;
}
inline void PBGnssSvPolynomial::set_svposunc(float value) {
  
  svposunc_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.svPosUnc)
}

// float ionoDelay = 12;
inline void PBGnssSvPolynomial::clear_ionodelay() {
  ionodelay_ = 0;
}
inline float PBGnssSvPolynomial::ionodelay() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.ionoDelay)
  return ionodelay_;
}
inline void PBGnssSvPolynomial::set_ionodelay(float value) {
  
  ionodelay_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.ionoDelay)
}

// float ionoDot = 13;
inline void PBGnssSvPolynomial::clear_ionodot() {
  ionodot_ = 0;
}
inline float PBGnssSvPolynomial::ionodot() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.ionoDot)
  return ionodot_;
}
inline void PBGnssSvPolynomial::set_ionodot(float value) {
  
  ionodot_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.ionoDot)
}

// float sbasIonoDelay = 14;
inline void PBGnssSvPolynomial::clear_sbasionodelay() {
  sbasionodelay_ = 0;
}
inline float PBGnssSvPolynomial::sbasionodelay() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.sbasIonoDelay)
  return sbasionodelay_;
}
inline void PBGnssSvPolynomial::set_sbasionodelay(float value) {
  
  sbasionodelay_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.sbasIonoDelay)
}

// float sbasIonoDot = 15;
inline void PBGnssSvPolynomial::clear_sbasionodot() {
  sbasionodot_ = 0;
}
inline float PBGnssSvPolynomial::sbasionodot() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.sbasIonoDot)
  return sbasionodot_;
}
inline void PBGnssSvPolynomial::set_sbasionodot(float value) {
  
  sbasionodot_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.sbasIonoDot)
}

// float tropoDelay = 16;
inline void PBGnssSvPolynomial::clear_tropodelay() {
  tropodelay_ = 0;
}
inline float PBGnssSvPolynomial::tropodelay() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.tropoDelay)
  return tropodelay_;
}
inline void PBGnssSvPolynomial::set_tropodelay(float value) {
  
  tropodelay_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.tropoDelay)
}

// float elevation = 17;
inline void PBGnssSvPolynomial::clear_elevation() {
  elevation_ = 0;
}
inline float PBGnssSvPolynomial::elevation() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.elevation)
  return elevation_;
}
inline void PBGnssSvPolynomial::set_elevation(float value) {
  
  elevation_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.elevation)
}

// float elevationDot = 18;
inline void PBGnssSvPolynomial::clear_elevationdot() {
  elevationdot_ = 0;
}
inline float PBGnssSvPolynomial::elevationdot() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.elevationDot)
  return elevationdot_;
}
inline void PBGnssSvPolynomial::set_elevationdot(float value) {
  
  elevationdot_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.elevationDot)
}

// float elevationUnc = 19;
inline void PBGnssSvPolynomial::clear_elevationunc() {
  elevationunc_ = 0;
}
inline float PBGnssSvPolynomial::elevationunc() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.elevationUnc)
  return elevationunc_;
}
inline void PBGnssSvPolynomial::set_elevationunc(float value) {
  
  elevationunc_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.elevationUnc)
}

// repeated float velCoef = 20;
inline int PBGnssSvPolynomial::velcoef_size() const {
  return velcoef_.size();
}
inline void PBGnssSvPolynomial::clear_velcoef() {
  velcoef_.Clear();
}
inline float PBGnssSvPolynomial::velcoef(int index) const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.velCoef)
  return velcoef_.Get(index);
}
inline void PBGnssSvPolynomial::set_velcoef(int index, float value) {
  velcoef_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.velCoef)
}
inline void PBGnssSvPolynomial::add_velcoef(float value) {
  velcoef_.Add(value);
  // @@protoc_insertion_point(field_add:PBGnssSvPolynomial.velCoef)
}
inline const ::google::protobuf::RepeatedField< float >&
PBGnssSvPolynomial::velcoef() const {
  // @@protoc_insertion_point(field_list:PBGnssSvPolynomial.velCoef)
  return velcoef_;
}
inline ::google::protobuf::RepeatedField< float >*
PBGnssSvPolynomial::mutable_velcoef() {
  // @@protoc_insertion_point(field_mutable_list:PBGnssSvPolynomial.velCoef)
  return &velcoef_;
}

// uint32 enhancedIOD = 21;
inline void PBGnssSvPolynomial::clear_enhancediod() {
  enhancediod_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssSvPolynomial::enhancediod() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.enhancedIOD)
  return enhancediod_;
}
inline void PBGnssSvPolynomial::set_enhancediod(::google::protobuf::uint32 value) {
  
  enhancediod_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.enhancedIOD)
}

// float gpsIscL1ca = 22;
inline void PBGnssSvPolynomial::clear_gpsiscl1ca() {
  gpsiscl1ca_ = 0;
}
inline float PBGnssSvPolynomial::gpsiscl1ca() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.gpsIscL1ca)
  return gpsiscl1ca_;
}
inline void PBGnssSvPolynomial::set_gpsiscl1ca(float value) {
  
  gpsiscl1ca_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.gpsIscL1ca)
}

// float gpsIscL2c = 23;
inline void PBGnssSvPolynomial::clear_gpsiscl2c() {
  gpsiscl2c_ = 0;
}
inline float PBGnssSvPolynomial::gpsiscl2c() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.gpsIscL2c)
  return gpsiscl2c_;
}
inline void PBGnssSvPolynomial::set_gpsiscl2c(float value) {
  
  gpsiscl2c_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.gpsIscL2c)
}

// float gpsIscL5I5 = 24;
inline void PBGnssSvPolynomial::clear_gpsiscl5i5() {
  gpsiscl5i5_ = 0;
}
inline float PBGnssSvPolynomial::gpsiscl5i5() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.gpsIscL5I5)
  return gpsiscl5i5_;
}
inline void PBGnssSvPolynomial::set_gpsiscl5i5(float value) {
  
  gpsiscl5i5_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.gpsIscL5I5)
}

// float gpsIscL5Q5 = 25;
inline void PBGnssSvPolynomial::clear_gpsiscl5q5() {
  gpsiscl5q5_ = 0;
}
inline float PBGnssSvPolynomial::gpsiscl5q5() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.gpsIscL5Q5)
  return gpsiscl5q5_;
}
inline void PBGnssSvPolynomial::set_gpsiscl5q5(float value) {
  
  gpsiscl5q5_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.gpsIscL5Q5)
}

// float gpsTgd = 26;
inline void PBGnssSvPolynomial::clear_gpstgd() {
  gpstgd_ = 0;
}
inline float PBGnssSvPolynomial::gpstgd() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.gpsTgd)
  return gpstgd_;
}
inline void PBGnssSvPolynomial::set_gpstgd(float value) {
  
  gpstgd_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.gpsTgd)
}

// float gloTgdG1G2 = 27;
inline void PBGnssSvPolynomial::clear_glotgdg1g2() {
  glotgdg1g2_ = 0;
}
inline float PBGnssSvPolynomial::glotgdg1g2() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.gloTgdG1G2)
  return glotgdg1g2_;
}
inline void PBGnssSvPolynomial::set_glotgdg1g2(float value) {
  
  glotgdg1g2_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.gloTgdG1G2)
}

// float bdsTgdB1 = 28;
inline void PBGnssSvPolynomial::clear_bdstgdb1() {
  bdstgdb1_ = 0;
}
inline float PBGnssSvPolynomial::bdstgdb1() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.bdsTgdB1)
  return bdstgdb1_;
}
inline void PBGnssSvPolynomial::set_bdstgdb1(float value) {
  
  bdstgdb1_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.bdsTgdB1)
}

// float bdsTgdB2 = 29;
inline void PBGnssSvPolynomial::clear_bdstgdb2() {
  bdstgdb2_ = 0;
}
inline float PBGnssSvPolynomial::bdstgdb2() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.bdsTgdB2)
  return bdstgdb2_;
}
inline void PBGnssSvPolynomial::set_bdstgdb2(float value) {
  
  bdstgdb2_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.bdsTgdB2)
}

// float bdsTgdB2a = 30;
inline void PBGnssSvPolynomial::clear_bdstgdb2a() {
  bdstgdb2a_ = 0;
}
inline float PBGnssSvPolynomial::bdstgdb2a() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.bdsTgdB2a)
  return bdstgdb2a_;
}
inline void PBGnssSvPolynomial::set_bdstgdb2a(float value) {
  
  bdstgdb2a_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.bdsTgdB2a)
}

// float bdsIscB2a = 31;
inline void PBGnssSvPolynomial::clear_bdsiscb2a() {
  bdsiscb2a_ = 0;
}
inline float PBGnssSvPolynomial::bdsiscb2a() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.bdsIscB2a)
  return bdsiscb2a_;
}
inline void PBGnssSvPolynomial::set_bdsiscb2a(float value) {
  
  bdsiscb2a_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.bdsIscB2a)
}

// float galBgdE1E5a = 32;
inline void PBGnssSvPolynomial::clear_galbgde1e5a() {
  galbgde1e5a_ = 0;
}
inline float PBGnssSvPolynomial::galbgde1e5a() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.galBgdE1E5a)
  return galbgde1e5a_;
}
inline void PBGnssSvPolynomial::set_galbgde1e5a(float value) {
  
  galbgde1e5a_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.galBgdE1E5a)
}

// float galBgdE1E5b = 33;
inline void PBGnssSvPolynomial::clear_galbgde1e5b() {
  galbgde1e5b_ = 0;
}
inline float PBGnssSvPolynomial::galbgde1e5b() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.galBgdE1E5b)
  return galbgde1e5b_;
}
inline void PBGnssSvPolynomial::set_galbgde1e5b(float value) {
  
  galbgde1e5b_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.galBgdE1E5b)
}

// float navicTgdL5 = 34;
inline void PBGnssSvPolynomial::clear_navictgdl5() {
  navictgdl5_ = 0;
}
inline float PBGnssSvPolynomial::navictgdl5() const {
  // @@protoc_insertion_point(field_get:PBGnssSvPolynomial.navicTgdL5)
  return navictgdl5_;
}
inline void PBGnssSvPolynomial::set_navictgdl5(float value) {
  
  navictgdl5_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvPolynomial.navicTgdL5)
}

// -------------------------------------------------------------------

// PBGnssSvEphemerisReport

// .PBGnss_LocSvSystemEnumType gnssConstellation = 1;
inline void PBGnssSvEphemerisReport::clear_gnssconstellation() {
  gnssconstellation_ = 0;
}
inline ::PBGnss_LocSvSystemEnumType PBGnssSvEphemerisReport::gnssconstellation() const {
  // @@protoc_insertion_point(field_get:PBGnssSvEphemerisReport.gnssConstellation)
  return static_cast< ::PBGnss_LocSvSystemEnumType >(gnssconstellation_);
}
inline void PBGnssSvEphemerisReport::set_gnssconstellation(::PBGnss_LocSvSystemEnumType value) {
  
  gnssconstellation_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvEphemerisReport.gnssConstellation)
}

// bool isSystemTimeValid = 2;
inline void PBGnssSvEphemerisReport::clear_issystemtimevalid() {
  issystemtimevalid_ = false;
}
inline bool PBGnssSvEphemerisReport::issystemtimevalid() const {
  // @@protoc_insertion_point(field_get:PBGnssSvEphemerisReport.isSystemTimeValid)
  return issystemtimevalid_;
}
inline void PBGnssSvEphemerisReport::set_issystemtimevalid(bool value) {
  
  issystemtimevalid_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvEphemerisReport.isSystemTimeValid)
}

// .PBGnssSystemTimeStructType systemTime = 3;
inline bool PBGnssSvEphemerisReport::has_systemtime() const {
  return this != internal_default_instance() && systemtime_ != NULL;
}
inline void PBGnssSvEphemerisReport::clear_systemtime() {
  if (GetArenaNoVirtual() == NULL && systemtime_ != NULL) delete systemtime_;
  systemtime_ = NULL;
}
inline const ::PBGnssSystemTimeStructType& PBGnssSvEphemerisReport::systemtime() const {
  // @@protoc_insertion_point(field_get:PBGnssSvEphemerisReport.systemTime)
  return systemtime_ != NULL ? *systemtime_
                         : *::PBGnssSystemTimeStructType::internal_default_instance();
}
inline ::PBGnssSystemTimeStructType* PBGnssSvEphemerisReport::mutable_systemtime() {
  
  if (systemtime_ == NULL) {
    systemtime_ = new ::PBGnssSystemTimeStructType;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvEphemerisReport.systemTime)
  return systemtime_;
}
inline ::PBGnssSystemTimeStructType* PBGnssSvEphemerisReport::release_systemtime() {
  // @@protoc_insertion_point(field_release:PBGnssSvEphemerisReport.systemTime)
  
  ::PBGnssSystemTimeStructType* temp = systemtime_;
  systemtime_ = NULL;
  return temp;
}
inline void PBGnssSvEphemerisReport::set_allocated_systemtime(::PBGnssSystemTimeStructType* systemtime) {
  delete systemtime_;
  systemtime_ = systemtime;
  if (systemtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvEphemerisReport.systemTime)
}

// .PBGpsEphemerisResponse gpsEphemeris = 4;
inline bool PBGnssSvEphemerisReport::has_gpsephemeris() const {
  return ephInfo_case() == kGpsEphemeris;
}
inline void PBGnssSvEphemerisReport::set_has_gpsephemeris() {
  _oneof_case_[0] = kGpsEphemeris;
}
inline void PBGnssSvEphemerisReport::clear_gpsephemeris() {
  if (has_gpsephemeris()) {
    delete ephInfo_.gpsephemeris_;
    clear_has_ephInfo();
  }
}
inline  const ::PBGpsEphemerisResponse& PBGnssSvEphemerisReport::gpsephemeris() const {
  // @@protoc_insertion_point(field_get:PBGnssSvEphemerisReport.gpsEphemeris)
  return has_gpsephemeris()
      ? *ephInfo_.gpsephemeris_
      : ::PBGpsEphemerisResponse::default_instance();
}
inline ::PBGpsEphemerisResponse* PBGnssSvEphemerisReport::mutable_gpsephemeris() {
  if (!has_gpsephemeris()) {
    clear_ephInfo();
    set_has_gpsephemeris();
    ephInfo_.gpsephemeris_ = new ::PBGpsEphemerisResponse;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvEphemerisReport.gpsEphemeris)
  return ephInfo_.gpsephemeris_;
}
inline ::PBGpsEphemerisResponse* PBGnssSvEphemerisReport::release_gpsephemeris() {
  // @@protoc_insertion_point(field_release:PBGnssSvEphemerisReport.gpsEphemeris)
  if (has_gpsephemeris()) {
    clear_has_ephInfo();
    ::PBGpsEphemerisResponse* temp = ephInfo_.gpsephemeris_;
    ephInfo_.gpsephemeris_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void PBGnssSvEphemerisReport::set_allocated_gpsephemeris(::PBGpsEphemerisResponse* gpsephemeris) {
  clear_ephInfo();
  if (gpsephemeris) {
    set_has_gpsephemeris();
    ephInfo_.gpsephemeris_ = gpsephemeris;
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvEphemerisReport.gpsEphemeris)
}

// .PBGlonassEphemerisResponse glonassEphemeris = 5;
inline bool PBGnssSvEphemerisReport::has_glonassephemeris() const {
  return ephInfo_case() == kGlonassEphemeris;
}
inline void PBGnssSvEphemerisReport::set_has_glonassephemeris() {
  _oneof_case_[0] = kGlonassEphemeris;
}
inline void PBGnssSvEphemerisReport::clear_glonassephemeris() {
  if (has_glonassephemeris()) {
    delete ephInfo_.glonassephemeris_;
    clear_has_ephInfo();
  }
}
inline  const ::PBGlonassEphemerisResponse& PBGnssSvEphemerisReport::glonassephemeris() const {
  // @@protoc_insertion_point(field_get:PBGnssSvEphemerisReport.glonassEphemeris)
  return has_glonassephemeris()
      ? *ephInfo_.glonassephemeris_
      : ::PBGlonassEphemerisResponse::default_instance();
}
inline ::PBGlonassEphemerisResponse* PBGnssSvEphemerisReport::mutable_glonassephemeris() {
  if (!has_glonassephemeris()) {
    clear_ephInfo();
    set_has_glonassephemeris();
    ephInfo_.glonassephemeris_ = new ::PBGlonassEphemerisResponse;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvEphemerisReport.glonassEphemeris)
  return ephInfo_.glonassephemeris_;
}
inline ::PBGlonassEphemerisResponse* PBGnssSvEphemerisReport::release_glonassephemeris() {
  // @@protoc_insertion_point(field_release:PBGnssSvEphemerisReport.glonassEphemeris)
  if (has_glonassephemeris()) {
    clear_has_ephInfo();
    ::PBGlonassEphemerisResponse* temp = ephInfo_.glonassephemeris_;
    ephInfo_.glonassephemeris_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void PBGnssSvEphemerisReport::set_allocated_glonassephemeris(::PBGlonassEphemerisResponse* glonassephemeris) {
  clear_ephInfo();
  if (glonassephemeris) {
    set_has_glonassephemeris();
    ephInfo_.glonassephemeris_ = glonassephemeris;
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvEphemerisReport.glonassEphemeris)
}

// .PBBdsEphemerisResponse bdsEphemeris = 6;
inline bool PBGnssSvEphemerisReport::has_bdsephemeris() const {
  return ephInfo_case() == kBdsEphemeris;
}
inline void PBGnssSvEphemerisReport::set_has_bdsephemeris() {
  _oneof_case_[0] = kBdsEphemeris;
}
inline void PBGnssSvEphemerisReport::clear_bdsephemeris() {
  if (has_bdsephemeris()) {
    delete ephInfo_.bdsephemeris_;
    clear_has_ephInfo();
  }
}
inline  const ::PBBdsEphemerisResponse& PBGnssSvEphemerisReport::bdsephemeris() const {
  // @@protoc_insertion_point(field_get:PBGnssSvEphemerisReport.bdsEphemeris)
  return has_bdsephemeris()
      ? *ephInfo_.bdsephemeris_
      : ::PBBdsEphemerisResponse::default_instance();
}
inline ::PBBdsEphemerisResponse* PBGnssSvEphemerisReport::mutable_bdsephemeris() {
  if (!has_bdsephemeris()) {
    clear_ephInfo();
    set_has_bdsephemeris();
    ephInfo_.bdsephemeris_ = new ::PBBdsEphemerisResponse;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvEphemerisReport.bdsEphemeris)
  return ephInfo_.bdsephemeris_;
}
inline ::PBBdsEphemerisResponse* PBGnssSvEphemerisReport::release_bdsephemeris() {
  // @@protoc_insertion_point(field_release:PBGnssSvEphemerisReport.bdsEphemeris)
  if (has_bdsephemeris()) {
    clear_has_ephInfo();
    ::PBBdsEphemerisResponse* temp = ephInfo_.bdsephemeris_;
    ephInfo_.bdsephemeris_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void PBGnssSvEphemerisReport::set_allocated_bdsephemeris(::PBBdsEphemerisResponse* bdsephemeris) {
  clear_ephInfo();
  if (bdsephemeris) {
    set_has_bdsephemeris();
    ephInfo_.bdsephemeris_ = bdsephemeris;
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvEphemerisReport.bdsEphemeris)
}

// .PBGalileoEphemerisResponse galileoEphemeris = 7;
inline bool PBGnssSvEphemerisReport::has_galileoephemeris() const {
  return ephInfo_case() == kGalileoEphemeris;
}
inline void PBGnssSvEphemerisReport::set_has_galileoephemeris() {
  _oneof_case_[0] = kGalileoEphemeris;
}
inline void PBGnssSvEphemerisReport::clear_galileoephemeris() {
  if (has_galileoephemeris()) {
    delete ephInfo_.galileoephemeris_;
    clear_has_ephInfo();
  }
}
inline  const ::PBGalileoEphemerisResponse& PBGnssSvEphemerisReport::galileoephemeris() const {
  // @@protoc_insertion_point(field_get:PBGnssSvEphemerisReport.galileoEphemeris)
  return has_galileoephemeris()
      ? *ephInfo_.galileoephemeris_
      : ::PBGalileoEphemerisResponse::default_instance();
}
inline ::PBGalileoEphemerisResponse* PBGnssSvEphemerisReport::mutable_galileoephemeris() {
  if (!has_galileoephemeris()) {
    clear_ephInfo();
    set_has_galileoephemeris();
    ephInfo_.galileoephemeris_ = new ::PBGalileoEphemerisResponse;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvEphemerisReport.galileoEphemeris)
  return ephInfo_.galileoephemeris_;
}
inline ::PBGalileoEphemerisResponse* PBGnssSvEphemerisReport::release_galileoephemeris() {
  // @@protoc_insertion_point(field_release:PBGnssSvEphemerisReport.galileoEphemeris)
  if (has_galileoephemeris()) {
    clear_has_ephInfo();
    ::PBGalileoEphemerisResponse* temp = ephInfo_.galileoephemeris_;
    ephInfo_.galileoephemeris_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void PBGnssSvEphemerisReport::set_allocated_galileoephemeris(::PBGalileoEphemerisResponse* galileoephemeris) {
  clear_ephInfo();
  if (galileoephemeris) {
    set_has_galileoephemeris();
    ephInfo_.galileoephemeris_ = galileoephemeris;
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvEphemerisReport.galileoEphemeris)
}

// .PBQzssEphemerisResponse qzssEphemeris = 8;
inline bool PBGnssSvEphemerisReport::has_qzssephemeris() const {
  return ephInfo_case() == kQzssEphemeris;
}
inline void PBGnssSvEphemerisReport::set_has_qzssephemeris() {
  _oneof_case_[0] = kQzssEphemeris;
}
inline void PBGnssSvEphemerisReport::clear_qzssephemeris() {
  if (has_qzssephemeris()) {
    delete ephInfo_.qzssephemeris_;
    clear_has_ephInfo();
  }
}
inline  const ::PBQzssEphemerisResponse& PBGnssSvEphemerisReport::qzssephemeris() const {
  // @@protoc_insertion_point(field_get:PBGnssSvEphemerisReport.qzssEphemeris)
  return has_qzssephemeris()
      ? *ephInfo_.qzssephemeris_
      : ::PBQzssEphemerisResponse::default_instance();
}
inline ::PBQzssEphemerisResponse* PBGnssSvEphemerisReport::mutable_qzssephemeris() {
  if (!has_qzssephemeris()) {
    clear_ephInfo();
    set_has_qzssephemeris();
    ephInfo_.qzssephemeris_ = new ::PBQzssEphemerisResponse;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvEphemerisReport.qzssEphemeris)
  return ephInfo_.qzssephemeris_;
}
inline ::PBQzssEphemerisResponse* PBGnssSvEphemerisReport::release_qzssephemeris() {
  // @@protoc_insertion_point(field_release:PBGnssSvEphemerisReport.qzssEphemeris)
  if (has_qzssephemeris()) {
    clear_has_ephInfo();
    ::PBQzssEphemerisResponse* temp = ephInfo_.qzssephemeris_;
    ephInfo_.qzssephemeris_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void PBGnssSvEphemerisReport::set_allocated_qzssephemeris(::PBQzssEphemerisResponse* qzssephemeris) {
  clear_ephInfo();
  if (qzssephemeris) {
    set_has_qzssephemeris();
    ephInfo_.qzssephemeris_ = qzssephemeris;
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvEphemerisReport.qzssEphemeris)
}

inline bool PBGnssSvEphemerisReport::has_ephInfo() const {
  return ephInfo_case() != EPHINFO_NOT_SET;
}
inline void PBGnssSvEphemerisReport::clear_has_ephInfo() {
  _oneof_case_[0] = EPHINFO_NOT_SET;
}
inline PBGnssSvEphemerisReport::EphInfoCase PBGnssSvEphemerisReport::ephInfo_case() const {
  return PBGnssSvEphemerisReport::EphInfoCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// PBGpsEphemerisResponse

// uint32 numOfEphemeris = 1;
inline void PBGpsEphemerisResponse::clear_numofephemeris() {
  numofephemeris_ = 0u;
}
inline ::google::protobuf::uint32 PBGpsEphemerisResponse::numofephemeris() const {
  // @@protoc_insertion_point(field_get:PBGpsEphemerisResponse.numOfEphemeris)
  return numofephemeris_;
}
inline void PBGpsEphemerisResponse::set_numofephemeris(::google::protobuf::uint32 value) {
  
  numofephemeris_ = value;
  // @@protoc_insertion_point(field_set:PBGpsEphemerisResponse.numOfEphemeris)
}

// repeated .PBGpsEphemeris gpsEphemerisData = 2;
inline int PBGpsEphemerisResponse::gpsephemerisdata_size() const {
  return gpsephemerisdata_.size();
}
inline void PBGpsEphemerisResponse::clear_gpsephemerisdata() {
  gpsephemerisdata_.Clear();
}
inline const ::PBGpsEphemeris& PBGpsEphemerisResponse::gpsephemerisdata(int index) const {
  // @@protoc_insertion_point(field_get:PBGpsEphemerisResponse.gpsEphemerisData)
  return gpsephemerisdata_.Get(index);
}
inline ::PBGpsEphemeris* PBGpsEphemerisResponse::mutable_gpsephemerisdata(int index) {
  // @@protoc_insertion_point(field_mutable:PBGpsEphemerisResponse.gpsEphemerisData)
  return gpsephemerisdata_.Mutable(index);
}
inline ::PBGpsEphemeris* PBGpsEphemerisResponse::add_gpsephemerisdata() {
  // @@protoc_insertion_point(field_add:PBGpsEphemerisResponse.gpsEphemerisData)
  return gpsephemerisdata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PBGpsEphemeris >*
PBGpsEphemerisResponse::mutable_gpsephemerisdata() {
  // @@protoc_insertion_point(field_mutable_list:PBGpsEphemerisResponse.gpsEphemerisData)
  return &gpsephemerisdata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PBGpsEphemeris >&
PBGpsEphemerisResponse::gpsephemerisdata() const {
  // @@protoc_insertion_point(field_list:PBGpsEphemerisResponse.gpsEphemerisData)
  return gpsephemerisdata_;
}

// -------------------------------------------------------------------

// PBGlonassEphemerisResponse

// uint32 numOfEphemeris = 1;
inline void PBGlonassEphemerisResponse::clear_numofephemeris() {
  numofephemeris_ = 0u;
}
inline ::google::protobuf::uint32 PBGlonassEphemerisResponse::numofephemeris() const {
  // @@protoc_insertion_point(field_get:PBGlonassEphemerisResponse.numOfEphemeris)
  return numofephemeris_;
}
inline void PBGlonassEphemerisResponse::set_numofephemeris(::google::protobuf::uint32 value) {
  
  numofephemeris_ = value;
  // @@protoc_insertion_point(field_set:PBGlonassEphemerisResponse.numOfEphemeris)
}

// repeated .PBGlonassEphemeris gloEphemerisData = 2;
inline int PBGlonassEphemerisResponse::gloephemerisdata_size() const {
  return gloephemerisdata_.size();
}
inline void PBGlonassEphemerisResponse::clear_gloephemerisdata() {
  gloephemerisdata_.Clear();
}
inline const ::PBGlonassEphemeris& PBGlonassEphemerisResponse::gloephemerisdata(int index) const {
  // @@protoc_insertion_point(field_get:PBGlonassEphemerisResponse.gloEphemerisData)
  return gloephemerisdata_.Get(index);
}
inline ::PBGlonassEphemeris* PBGlonassEphemerisResponse::mutable_gloephemerisdata(int index) {
  // @@protoc_insertion_point(field_mutable:PBGlonassEphemerisResponse.gloEphemerisData)
  return gloephemerisdata_.Mutable(index);
}
inline ::PBGlonassEphemeris* PBGlonassEphemerisResponse::add_gloephemerisdata() {
  // @@protoc_insertion_point(field_add:PBGlonassEphemerisResponse.gloEphemerisData)
  return gloephemerisdata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PBGlonassEphemeris >*
PBGlonassEphemerisResponse::mutable_gloephemerisdata() {
  // @@protoc_insertion_point(field_mutable_list:PBGlonassEphemerisResponse.gloEphemerisData)
  return &gloephemerisdata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PBGlonassEphemeris >&
PBGlonassEphemerisResponse::gloephemerisdata() const {
  // @@protoc_insertion_point(field_list:PBGlonassEphemerisResponse.gloEphemerisData)
  return gloephemerisdata_;
}

// -------------------------------------------------------------------

// PBBdsEphemerisResponse

// uint32 numOfEphemeris = 1;
inline void PBBdsEphemerisResponse::clear_numofephemeris() {
  numofephemeris_ = 0u;
}
inline ::google::protobuf::uint32 PBBdsEphemerisResponse::numofephemeris() const {
  // @@protoc_insertion_point(field_get:PBBdsEphemerisResponse.numOfEphemeris)
  return numofephemeris_;
}
inline void PBBdsEphemerisResponse::set_numofephemeris(::google::protobuf::uint32 value) {
  
  numofephemeris_ = value;
  // @@protoc_insertion_point(field_set:PBBdsEphemerisResponse.numOfEphemeris)
}

// repeated .PBBdsEphemeris bdsEphemerisData = 2;
inline int PBBdsEphemerisResponse::bdsephemerisdata_size() const {
  return bdsephemerisdata_.size();
}
inline void PBBdsEphemerisResponse::clear_bdsephemerisdata() {
  bdsephemerisdata_.Clear();
}
inline const ::PBBdsEphemeris& PBBdsEphemerisResponse::bdsephemerisdata(int index) const {
  // @@protoc_insertion_point(field_get:PBBdsEphemerisResponse.bdsEphemerisData)
  return bdsephemerisdata_.Get(index);
}
inline ::PBBdsEphemeris* PBBdsEphemerisResponse::mutable_bdsephemerisdata(int index) {
  // @@protoc_insertion_point(field_mutable:PBBdsEphemerisResponse.bdsEphemerisData)
  return bdsephemerisdata_.Mutable(index);
}
inline ::PBBdsEphemeris* PBBdsEphemerisResponse::add_bdsephemerisdata() {
  // @@protoc_insertion_point(field_add:PBBdsEphemerisResponse.bdsEphemerisData)
  return bdsephemerisdata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PBBdsEphemeris >*
PBBdsEphemerisResponse::mutable_bdsephemerisdata() {
  // @@protoc_insertion_point(field_mutable_list:PBBdsEphemerisResponse.bdsEphemerisData)
  return &bdsephemerisdata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PBBdsEphemeris >&
PBBdsEphemerisResponse::bdsephemerisdata() const {
  // @@protoc_insertion_point(field_list:PBBdsEphemerisResponse.bdsEphemerisData)
  return bdsephemerisdata_;
}

// -------------------------------------------------------------------

// PBGalileoEphemerisResponse

// uint32 numOfEphemeris = 1;
inline void PBGalileoEphemerisResponse::clear_numofephemeris() {
  numofephemeris_ = 0u;
}
inline ::google::protobuf::uint32 PBGalileoEphemerisResponse::numofephemeris() const {
  // @@protoc_insertion_point(field_get:PBGalileoEphemerisResponse.numOfEphemeris)
  return numofephemeris_;
}
inline void PBGalileoEphemerisResponse::set_numofephemeris(::google::protobuf::uint32 value) {
  
  numofephemeris_ = value;
  // @@protoc_insertion_point(field_set:PBGalileoEphemerisResponse.numOfEphemeris)
}

// repeated .PBGalileoEphemeris galEphemerisData = 2;
inline int PBGalileoEphemerisResponse::galephemerisdata_size() const {
  return galephemerisdata_.size();
}
inline void PBGalileoEphemerisResponse::clear_galephemerisdata() {
  galephemerisdata_.Clear();
}
inline const ::PBGalileoEphemeris& PBGalileoEphemerisResponse::galephemerisdata(int index) const {
  // @@protoc_insertion_point(field_get:PBGalileoEphemerisResponse.galEphemerisData)
  return galephemerisdata_.Get(index);
}
inline ::PBGalileoEphemeris* PBGalileoEphemerisResponse::mutable_galephemerisdata(int index) {
  // @@protoc_insertion_point(field_mutable:PBGalileoEphemerisResponse.galEphemerisData)
  return galephemerisdata_.Mutable(index);
}
inline ::PBGalileoEphemeris* PBGalileoEphemerisResponse::add_galephemerisdata() {
  // @@protoc_insertion_point(field_add:PBGalileoEphemerisResponse.galEphemerisData)
  return galephemerisdata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PBGalileoEphemeris >*
PBGalileoEphemerisResponse::mutable_galephemerisdata() {
  // @@protoc_insertion_point(field_mutable_list:PBGalileoEphemerisResponse.galEphemerisData)
  return &galephemerisdata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PBGalileoEphemeris >&
PBGalileoEphemerisResponse::galephemerisdata() const {
  // @@protoc_insertion_point(field_list:PBGalileoEphemerisResponse.galEphemerisData)
  return galephemerisdata_;
}

// -------------------------------------------------------------------

// PBQzssEphemerisResponse

// uint32 numOfEphemeris = 1;
inline void PBQzssEphemerisResponse::clear_numofephemeris() {
  numofephemeris_ = 0u;
}
inline ::google::protobuf::uint32 PBQzssEphemerisResponse::numofephemeris() const {
  // @@protoc_insertion_point(field_get:PBQzssEphemerisResponse.numOfEphemeris)
  return numofephemeris_;
}
inline void PBQzssEphemerisResponse::set_numofephemeris(::google::protobuf::uint32 value) {
  
  numofephemeris_ = value;
  // @@protoc_insertion_point(field_set:PBQzssEphemerisResponse.numOfEphemeris)
}

// repeated .PBGpsEphemeris qzssEphemerisData = 2;
inline int PBQzssEphemerisResponse::qzssephemerisdata_size() const {
  return qzssephemerisdata_.size();
}
inline void PBQzssEphemerisResponse::clear_qzssephemerisdata() {
  qzssephemerisdata_.Clear();
}
inline const ::PBGpsEphemeris& PBQzssEphemerisResponse::qzssephemerisdata(int index) const {
  // @@protoc_insertion_point(field_get:PBQzssEphemerisResponse.qzssEphemerisData)
  return qzssephemerisdata_.Get(index);
}
inline ::PBGpsEphemeris* PBQzssEphemerisResponse::mutable_qzssephemerisdata(int index) {
  // @@protoc_insertion_point(field_mutable:PBQzssEphemerisResponse.qzssEphemerisData)
  return qzssephemerisdata_.Mutable(index);
}
inline ::PBGpsEphemeris* PBQzssEphemerisResponse::add_qzssephemerisdata() {
  // @@protoc_insertion_point(field_add:PBQzssEphemerisResponse.qzssEphemerisData)
  return qzssephemerisdata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PBGpsEphemeris >*
PBQzssEphemerisResponse::mutable_qzssephemerisdata() {
  // @@protoc_insertion_point(field_mutable_list:PBQzssEphemerisResponse.qzssEphemerisData)
  return &qzssephemerisdata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PBGpsEphemeris >&
PBQzssEphemerisResponse::qzssephemerisdata() const {
  // @@protoc_insertion_point(field_list:PBQzssEphemerisResponse.qzssEphemerisData)
  return qzssephemerisdata_;
}

// -------------------------------------------------------------------

// PBGnssEphCommon

// uint32 gnssSvId = 1;
inline void PBGnssEphCommon::clear_gnsssvid() {
  gnsssvid_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssEphCommon::gnsssvid() const {
  // @@protoc_insertion_point(field_get:PBGnssEphCommon.gnssSvId)
  return gnsssvid_;
}
inline void PBGnssEphCommon::set_gnsssvid(::google::protobuf::uint32 value) {
  
  gnsssvid_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEphCommon.gnssSvId)
}

// .PBGnssEphAction updateAction = 2;
inline void PBGnssEphCommon::clear_updateaction() {
  updateaction_ = 0;
}
inline ::PBGnssEphAction PBGnssEphCommon::updateaction() const {
  // @@protoc_insertion_point(field_get:PBGnssEphCommon.updateAction)
  return static_cast< ::PBGnssEphAction >(updateaction_);
}
inline void PBGnssEphCommon::set_updateaction(::PBGnssEphAction value) {
  
  updateaction_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEphCommon.updateAction)
}

// uint32 IODE = 3;
inline void PBGnssEphCommon::clear_iode() {
  iode_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssEphCommon::iode() const {
  // @@protoc_insertion_point(field_get:PBGnssEphCommon.IODE)
  return iode_;
}
inline void PBGnssEphCommon::set_iode(::google::protobuf::uint32 value) {
  
  iode_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEphCommon.IODE)
}

// float aSqrt = 4;
inline void PBGnssEphCommon::clear_asqrt() {
  asqrt_ = 0;
}
inline float PBGnssEphCommon::asqrt() const {
  // @@protoc_insertion_point(field_get:PBGnssEphCommon.aSqrt)
  return asqrt_;
}
inline void PBGnssEphCommon::set_asqrt(float value) {
  
  asqrt_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEphCommon.aSqrt)
}

// float deltaN = 5;
inline void PBGnssEphCommon::clear_deltan() {
  deltan_ = 0;
}
inline float PBGnssEphCommon::deltan() const {
  // @@protoc_insertion_point(field_get:PBGnssEphCommon.deltaN)
  return deltan_;
}
inline void PBGnssEphCommon::set_deltan(float value) {
  
  deltan_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEphCommon.deltaN)
}

// float m0 = 6;
inline void PBGnssEphCommon::clear_m0() {
  m0_ = 0;
}
inline float PBGnssEphCommon::m0() const {
  // @@protoc_insertion_point(field_get:PBGnssEphCommon.m0)
  return m0_;
}
inline void PBGnssEphCommon::set_m0(float value) {
  
  m0_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEphCommon.m0)
}

// float eccentricity = 7;
inline void PBGnssEphCommon::clear_eccentricity() {
  eccentricity_ = 0;
}
inline float PBGnssEphCommon::eccentricity() const {
  // @@protoc_insertion_point(field_get:PBGnssEphCommon.eccentricity)
  return eccentricity_;
}
inline void PBGnssEphCommon::set_eccentricity(float value) {
  
  eccentricity_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEphCommon.eccentricity)
}

// float omega0 = 8;
inline void PBGnssEphCommon::clear_omega0() {
  omega0_ = 0;
}
inline float PBGnssEphCommon::omega0() const {
  // @@protoc_insertion_point(field_get:PBGnssEphCommon.omega0)
  return omega0_;
}
inline void PBGnssEphCommon::set_omega0(float value) {
  
  omega0_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEphCommon.omega0)
}

// float i0 = 9;
inline void PBGnssEphCommon::clear_i0() {
  i0_ = 0;
}
inline float PBGnssEphCommon::i0() const {
  // @@protoc_insertion_point(field_get:PBGnssEphCommon.i0)
  return i0_;
}
inline void PBGnssEphCommon::set_i0(float value) {
  
  i0_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEphCommon.i0)
}

// float omega = 10;
inline void PBGnssEphCommon::clear_omega() {
  omega_ = 0;
}
inline float PBGnssEphCommon::omega() const {
  // @@protoc_insertion_point(field_get:PBGnssEphCommon.omega)
  return omega_;
}
inline void PBGnssEphCommon::set_omega(float value) {
  
  omega_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEphCommon.omega)
}

// float omegaDot = 11;
inline void PBGnssEphCommon::clear_omegadot() {
  omegadot_ = 0;
}
inline float PBGnssEphCommon::omegadot() const {
  // @@protoc_insertion_point(field_get:PBGnssEphCommon.omegaDot)
  return omegadot_;
}
inline void PBGnssEphCommon::set_omegadot(float value) {
  
  omegadot_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEphCommon.omegaDot)
}

// float iDot = 12;
inline void PBGnssEphCommon::clear_idot() {
  idot_ = 0;
}
inline float PBGnssEphCommon::idot() const {
  // @@protoc_insertion_point(field_get:PBGnssEphCommon.iDot)
  return idot_;
}
inline void PBGnssEphCommon::set_idot(float value) {
  
  idot_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEphCommon.iDot)
}

// float cUc = 13;
inline void PBGnssEphCommon::clear_cuc() {
  cuc_ = 0;
}
inline float PBGnssEphCommon::cuc() const {
  // @@protoc_insertion_point(field_get:PBGnssEphCommon.cUc)
  return cuc_;
}
inline void PBGnssEphCommon::set_cuc(float value) {
  
  cuc_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEphCommon.cUc)
}

// float cUs = 14;
inline void PBGnssEphCommon::clear_cus() {
  cus_ = 0;
}
inline float PBGnssEphCommon::cus() const {
  // @@protoc_insertion_point(field_get:PBGnssEphCommon.cUs)
  return cus_;
}
inline void PBGnssEphCommon::set_cus(float value) {
  
  cus_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEphCommon.cUs)
}

// float cRc = 15;
inline void PBGnssEphCommon::clear_crc() {
  crc_ = 0;
}
inline float PBGnssEphCommon::crc() const {
  // @@protoc_insertion_point(field_get:PBGnssEphCommon.cRc)
  return crc_;
}
inline void PBGnssEphCommon::set_crc(float value) {
  
  crc_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEphCommon.cRc)
}

// float cRs = 16;
inline void PBGnssEphCommon::clear_crs() {
  crs_ = 0;
}
inline float PBGnssEphCommon::crs() const {
  // @@protoc_insertion_point(field_get:PBGnssEphCommon.cRs)
  return crs_;
}
inline void PBGnssEphCommon::set_crs(float value) {
  
  crs_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEphCommon.cRs)
}

// float cIc = 17;
inline void PBGnssEphCommon::clear_cic() {
  cic_ = 0;
}
inline float PBGnssEphCommon::cic() const {
  // @@protoc_insertion_point(field_get:PBGnssEphCommon.cIc)
  return cic_;
}
inline void PBGnssEphCommon::set_cic(float value) {
  
  cic_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEphCommon.cIc)
}

// float cIs = 18;
inline void PBGnssEphCommon::clear_cis() {
  cis_ = 0;
}
inline float PBGnssEphCommon::cis() const {
  // @@protoc_insertion_point(field_get:PBGnssEphCommon.cIs)
  return cis_;
}
inline void PBGnssEphCommon::set_cis(float value) {
  
  cis_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEphCommon.cIs)
}

// uint32 toe = 19;
inline void PBGnssEphCommon::clear_toe() {
  toe_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssEphCommon::toe() const {
  // @@protoc_insertion_point(field_get:PBGnssEphCommon.toe)
  return toe_;
}
inline void PBGnssEphCommon::set_toe(::google::protobuf::uint32 value) {
  
  toe_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEphCommon.toe)
}

// uint32 toc = 20;
inline void PBGnssEphCommon::clear_toc() {
  toc_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssEphCommon::toc() const {
  // @@protoc_insertion_point(field_get:PBGnssEphCommon.toc)
  return toc_;
}
inline void PBGnssEphCommon::set_toc(::google::protobuf::uint32 value) {
  
  toc_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEphCommon.toc)
}

// float af0 = 21;
inline void PBGnssEphCommon::clear_af0() {
  af0_ = 0;
}
inline float PBGnssEphCommon::af0() const {
  // @@protoc_insertion_point(field_get:PBGnssEphCommon.af0)
  return af0_;
}
inline void PBGnssEphCommon::set_af0(float value) {
  
  af0_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEphCommon.af0)
}

// float af1 = 22;
inline void PBGnssEphCommon::clear_af1() {
  af1_ = 0;
}
inline float PBGnssEphCommon::af1() const {
  // @@protoc_insertion_point(field_get:PBGnssEphCommon.af1)
  return af1_;
}
inline void PBGnssEphCommon::set_af1(float value) {
  
  af1_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEphCommon.af1)
}

// float af2 = 23;
inline void PBGnssEphCommon::clear_af2() {
  af2_ = 0;
}
inline float PBGnssEphCommon::af2() const {
  // @@protoc_insertion_point(field_get:PBGnssEphCommon.af2)
  return af2_;
}
inline void PBGnssEphCommon::set_af2(float value) {
  
  af2_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEphCommon.af2)
}

// -------------------------------------------------------------------

// PBGpsEphemeris

// .PBGnssEphCommon commonEphemerisData = 1;
inline bool PBGpsEphemeris::has_commonephemerisdata() const {
  return this != internal_default_instance() && commonephemerisdata_ != NULL;
}
inline void PBGpsEphemeris::clear_commonephemerisdata() {
  if (GetArenaNoVirtual() == NULL && commonephemerisdata_ != NULL) delete commonephemerisdata_;
  commonephemerisdata_ = NULL;
}
inline const ::PBGnssEphCommon& PBGpsEphemeris::commonephemerisdata() const {
  // @@protoc_insertion_point(field_get:PBGpsEphemeris.commonEphemerisData)
  return commonephemerisdata_ != NULL ? *commonephemerisdata_
                         : *::PBGnssEphCommon::internal_default_instance();
}
inline ::PBGnssEphCommon* PBGpsEphemeris::mutable_commonephemerisdata() {
  
  if (commonephemerisdata_ == NULL) {
    commonephemerisdata_ = new ::PBGnssEphCommon;
  }
  // @@protoc_insertion_point(field_mutable:PBGpsEphemeris.commonEphemerisData)
  return commonephemerisdata_;
}
inline ::PBGnssEphCommon* PBGpsEphemeris::release_commonephemerisdata() {
  // @@protoc_insertion_point(field_release:PBGpsEphemeris.commonEphemerisData)
  
  ::PBGnssEphCommon* temp = commonephemerisdata_;
  commonephemerisdata_ = NULL;
  return temp;
}
inline void PBGpsEphemeris::set_allocated_commonephemerisdata(::PBGnssEphCommon* commonephemerisdata) {
  delete commonephemerisdata_;
  commonephemerisdata_ = commonephemerisdata;
  if (commonephemerisdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGpsEphemeris.commonEphemerisData)
}

// uint32 signalHealth = 2;
inline void PBGpsEphemeris::clear_signalhealth() {
  signalhealth_ = 0u;
}
inline ::google::protobuf::uint32 PBGpsEphemeris::signalhealth() const {
  // @@protoc_insertion_point(field_get:PBGpsEphemeris.signalHealth)
  return signalhealth_;
}
inline void PBGpsEphemeris::set_signalhealth(::google::protobuf::uint32 value) {
  
  signalhealth_ = value;
  // @@protoc_insertion_point(field_set:PBGpsEphemeris.signalHealth)
}

// uint32 URAI = 3;
inline void PBGpsEphemeris::clear_urai() {
  urai_ = 0u;
}
inline ::google::protobuf::uint32 PBGpsEphemeris::urai() const {
  // @@protoc_insertion_point(field_get:PBGpsEphemeris.URAI)
  return urai_;
}
inline void PBGpsEphemeris::set_urai(::google::protobuf::uint32 value) {
  
  urai_ = value;
  // @@protoc_insertion_point(field_set:PBGpsEphemeris.URAI)
}

// uint32 codeL2 = 4;
inline void PBGpsEphemeris::clear_codel2() {
  codel2_ = 0u;
}
inline ::google::protobuf::uint32 PBGpsEphemeris::codel2() const {
  // @@protoc_insertion_point(field_get:PBGpsEphemeris.codeL2)
  return codel2_;
}
inline void PBGpsEphemeris::set_codel2(::google::protobuf::uint32 value) {
  
  codel2_ = value;
  // @@protoc_insertion_point(field_set:PBGpsEphemeris.codeL2)
}

// uint32 dataFlagL2P = 5;
inline void PBGpsEphemeris::clear_dataflagl2p() {
  dataflagl2p_ = 0u;
}
inline ::google::protobuf::uint32 PBGpsEphemeris::dataflagl2p() const {
  // @@protoc_insertion_point(field_get:PBGpsEphemeris.dataFlagL2P)
  return dataflagl2p_;
}
inline void PBGpsEphemeris::set_dataflagl2p(::google::protobuf::uint32 value) {
  
  dataflagl2p_ = value;
  // @@protoc_insertion_point(field_set:PBGpsEphemeris.dataFlagL2P)
}

// float tgd = 6;
inline void PBGpsEphemeris::clear_tgd() {
  tgd_ = 0;
}
inline float PBGpsEphemeris::tgd() const {
  // @@protoc_insertion_point(field_get:PBGpsEphemeris.tgd)
  return tgd_;
}
inline void PBGpsEphemeris::set_tgd(float value) {
  
  tgd_ = value;
  // @@protoc_insertion_point(field_set:PBGpsEphemeris.tgd)
}

// uint32 fitInterval = 7;
inline void PBGpsEphemeris::clear_fitinterval() {
  fitinterval_ = 0u;
}
inline ::google::protobuf::uint32 PBGpsEphemeris::fitinterval() const {
  // @@protoc_insertion_point(field_get:PBGpsEphemeris.fitInterval)
  return fitinterval_;
}
inline void PBGpsEphemeris::set_fitinterval(::google::protobuf::uint32 value) {
  
  fitinterval_ = value;
  // @@protoc_insertion_point(field_set:PBGpsEphemeris.fitInterval)
}

// uint32 IODC = 8;
inline void PBGpsEphemeris::clear_iodc() {
  iodc_ = 0u;
}
inline ::google::protobuf::uint32 PBGpsEphemeris::iodc() const {
  // @@protoc_insertion_point(field_get:PBGpsEphemeris.IODC)
  return iodc_;
}
inline void PBGpsEphemeris::set_iodc(::google::protobuf::uint32 value) {
  
  iodc_ = value;
  // @@protoc_insertion_point(field_set:PBGpsEphemeris.IODC)
}

// -------------------------------------------------------------------

// PBGlonassEphemeris

// uint32 gnssSvId = 1;
inline void PBGlonassEphemeris::clear_gnsssvid() {
  gnsssvid_ = 0u;
}
inline ::google::protobuf::uint32 PBGlonassEphemeris::gnsssvid() const {
  // @@protoc_insertion_point(field_get:PBGlonassEphemeris.gnssSvId)
  return gnsssvid_;
}
inline void PBGlonassEphemeris::set_gnsssvid(::google::protobuf::uint32 value) {
  
  gnsssvid_ = value;
  // @@protoc_insertion_point(field_set:PBGlonassEphemeris.gnssSvId)
}

// .PBGnssEphAction updateAction = 2;
inline void PBGlonassEphemeris::clear_updateaction() {
  updateaction_ = 0;
}
inline ::PBGnssEphAction PBGlonassEphemeris::updateaction() const {
  // @@protoc_insertion_point(field_get:PBGlonassEphemeris.updateAction)
  return static_cast< ::PBGnssEphAction >(updateaction_);
}
inline void PBGlonassEphemeris::set_updateaction(::PBGnssEphAction value) {
  
  updateaction_ = value;
  // @@protoc_insertion_point(field_set:PBGlonassEphemeris.updateAction)
}

// uint32 bnHealth = 3;
inline void PBGlonassEphemeris::clear_bnhealth() {
  bnhealth_ = 0u;
}
inline ::google::protobuf::uint32 PBGlonassEphemeris::bnhealth() const {
  // @@protoc_insertion_point(field_get:PBGlonassEphemeris.bnHealth)
  return bnhealth_;
}
inline void PBGlonassEphemeris::set_bnhealth(::google::protobuf::uint32 value) {
  
  bnhealth_ = value;
  // @@protoc_insertion_point(field_set:PBGlonassEphemeris.bnHealth)
}

// uint32 lnHealth = 4;
inline void PBGlonassEphemeris::clear_lnhealth() {
  lnhealth_ = 0u;
}
inline ::google::protobuf::uint32 PBGlonassEphemeris::lnhealth() const {
  // @@protoc_insertion_point(field_get:PBGlonassEphemeris.lnHealth)
  return lnhealth_;
}
inline void PBGlonassEphemeris::set_lnhealth(::google::protobuf::uint32 value) {
  
  lnhealth_ = value;
  // @@protoc_insertion_point(field_set:PBGlonassEphemeris.lnHealth)
}

// uint32 tb = 5;
inline void PBGlonassEphemeris::clear_tb() {
  tb_ = 0u;
}
inline ::google::protobuf::uint32 PBGlonassEphemeris::tb() const {
  // @@protoc_insertion_point(field_get:PBGlonassEphemeris.tb)
  return tb_;
}
inline void PBGlonassEphemeris::set_tb(::google::protobuf::uint32 value) {
  
  tb_ = value;
  // @@protoc_insertion_point(field_set:PBGlonassEphemeris.tb)
}

// uint32 ft = 6;
inline void PBGlonassEphemeris::clear_ft() {
  ft_ = 0u;
}
inline ::google::protobuf::uint32 PBGlonassEphemeris::ft() const {
  // @@protoc_insertion_point(field_get:PBGlonassEphemeris.ft)
  return ft_;
}
inline void PBGlonassEphemeris::set_ft(::google::protobuf::uint32 value) {
  
  ft_ = value;
  // @@protoc_insertion_point(field_set:PBGlonassEphemeris.ft)
}

// uint32 gloM = 7;
inline void PBGlonassEphemeris::clear_glom() {
  glom_ = 0u;
}
inline ::google::protobuf::uint32 PBGlonassEphemeris::glom() const {
  // @@protoc_insertion_point(field_get:PBGlonassEphemeris.gloM)
  return glom_;
}
inline void PBGlonassEphemeris::set_glom(::google::protobuf::uint32 value) {
  
  glom_ = value;
  // @@protoc_insertion_point(field_set:PBGlonassEphemeris.gloM)
}

// uint32 enAge = 8;
inline void PBGlonassEphemeris::clear_enage() {
  enage_ = 0u;
}
inline ::google::protobuf::uint32 PBGlonassEphemeris::enage() const {
  // @@protoc_insertion_point(field_get:PBGlonassEphemeris.enAge)
  return enage_;
}
inline void PBGlonassEphemeris::set_enage(::google::protobuf::uint32 value) {
  
  enage_ = value;
  // @@protoc_insertion_point(field_set:PBGlonassEphemeris.enAge)
}

// uint32 gloFrequency = 9;
inline void PBGlonassEphemeris::clear_glofrequency() {
  glofrequency_ = 0u;
}
inline ::google::protobuf::uint32 PBGlonassEphemeris::glofrequency() const {
  // @@protoc_insertion_point(field_get:PBGlonassEphemeris.gloFrequency)
  return glofrequency_;
}
inline void PBGlonassEphemeris::set_glofrequency(::google::protobuf::uint32 value) {
  
  glofrequency_ = value;
  // @@protoc_insertion_point(field_set:PBGlonassEphemeris.gloFrequency)
}

// uint32 p1 = 10;
inline void PBGlonassEphemeris::clear_p1() {
  p1_ = 0u;
}
inline ::google::protobuf::uint32 PBGlonassEphemeris::p1() const {
  // @@protoc_insertion_point(field_get:PBGlonassEphemeris.p1)
  return p1_;
}
inline void PBGlonassEphemeris::set_p1(::google::protobuf::uint32 value) {
  
  p1_ = value;
  // @@protoc_insertion_point(field_set:PBGlonassEphemeris.p1)
}

// uint32 p2 = 11;
inline void PBGlonassEphemeris::clear_p2() {
  p2_ = 0u;
}
inline ::google::protobuf::uint32 PBGlonassEphemeris::p2() const {
  // @@protoc_insertion_point(field_get:PBGlonassEphemeris.p2)
  return p2_;
}
inline void PBGlonassEphemeris::set_p2(::google::protobuf::uint32 value) {
  
  p2_ = value;
  // @@protoc_insertion_point(field_set:PBGlonassEphemeris.p2)
}

// float deltaTau = 12;
inline void PBGlonassEphemeris::clear_deltatau() {
  deltatau_ = 0;
}
inline float PBGlonassEphemeris::deltatau() const {
  // @@protoc_insertion_point(field_get:PBGlonassEphemeris.deltaTau)
  return deltatau_;
}
inline void PBGlonassEphemeris::set_deltatau(float value) {
  
  deltatau_ = value;
  // @@protoc_insertion_point(field_set:PBGlonassEphemeris.deltaTau)
}

// repeated float position = 13;
inline int PBGlonassEphemeris::position_size() const {
  return position_.size();
}
inline void PBGlonassEphemeris::clear_position() {
  position_.Clear();
}
inline float PBGlonassEphemeris::position(int index) const {
  // @@protoc_insertion_point(field_get:PBGlonassEphemeris.position)
  return position_.Get(index);
}
inline void PBGlonassEphemeris::set_position(int index, float value) {
  position_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBGlonassEphemeris.position)
}
inline void PBGlonassEphemeris::add_position(float value) {
  position_.Add(value);
  // @@protoc_insertion_point(field_add:PBGlonassEphemeris.position)
}
inline const ::google::protobuf::RepeatedField< float >&
PBGlonassEphemeris::position() const {
  // @@protoc_insertion_point(field_list:PBGlonassEphemeris.position)
  return position_;
}
inline ::google::protobuf::RepeatedField< float >*
PBGlonassEphemeris::mutable_position() {
  // @@protoc_insertion_point(field_mutable_list:PBGlonassEphemeris.position)
  return &position_;
}

// repeated float velocity = 14;
inline int PBGlonassEphemeris::velocity_size() const {
  return velocity_.size();
}
inline void PBGlonassEphemeris::clear_velocity() {
  velocity_.Clear();
}
inline float PBGlonassEphemeris::velocity(int index) const {
  // @@protoc_insertion_point(field_get:PBGlonassEphemeris.velocity)
  return velocity_.Get(index);
}
inline void PBGlonassEphemeris::set_velocity(int index, float value) {
  velocity_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBGlonassEphemeris.velocity)
}
inline void PBGlonassEphemeris::add_velocity(float value) {
  velocity_.Add(value);
  // @@protoc_insertion_point(field_add:PBGlonassEphemeris.velocity)
}
inline const ::google::protobuf::RepeatedField< float >&
PBGlonassEphemeris::velocity() const {
  // @@protoc_insertion_point(field_list:PBGlonassEphemeris.velocity)
  return velocity_;
}
inline ::google::protobuf::RepeatedField< float >*
PBGlonassEphemeris::mutable_velocity() {
  // @@protoc_insertion_point(field_mutable_list:PBGlonassEphemeris.velocity)
  return &velocity_;
}

// repeated float acceleration = 15;
inline int PBGlonassEphemeris::acceleration_size() const {
  return acceleration_.size();
}
inline void PBGlonassEphemeris::clear_acceleration() {
  acceleration_.Clear();
}
inline float PBGlonassEphemeris::acceleration(int index) const {
  // @@protoc_insertion_point(field_get:PBGlonassEphemeris.acceleration)
  return acceleration_.Get(index);
}
inline void PBGlonassEphemeris::set_acceleration(int index, float value) {
  acceleration_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBGlonassEphemeris.acceleration)
}
inline void PBGlonassEphemeris::add_acceleration(float value) {
  acceleration_.Add(value);
  // @@protoc_insertion_point(field_add:PBGlonassEphemeris.acceleration)
}
inline const ::google::protobuf::RepeatedField< float >&
PBGlonassEphemeris::acceleration() const {
  // @@protoc_insertion_point(field_list:PBGlonassEphemeris.acceleration)
  return acceleration_;
}
inline ::google::protobuf::RepeatedField< float >*
PBGlonassEphemeris::mutable_acceleration() {
  // @@protoc_insertion_point(field_mutable_list:PBGlonassEphemeris.acceleration)
  return &acceleration_;
}

// float tauN = 16;
inline void PBGlonassEphemeris::clear_taun() {
  taun_ = 0;
}
inline float PBGlonassEphemeris::taun() const {
  // @@protoc_insertion_point(field_get:PBGlonassEphemeris.tauN)
  return taun_;
}
inline void PBGlonassEphemeris::set_taun(float value) {
  
  taun_ = value;
  // @@protoc_insertion_point(field_set:PBGlonassEphemeris.tauN)
}

// float gamma = 17;
inline void PBGlonassEphemeris::clear_gamma() {
  gamma_ = 0;
}
inline float PBGlonassEphemeris::gamma() const {
  // @@protoc_insertion_point(field_get:PBGlonassEphemeris.gamma)
  return gamma_;
}
inline void PBGlonassEphemeris::set_gamma(float value) {
  
  gamma_ = value;
  // @@protoc_insertion_point(field_set:PBGlonassEphemeris.gamma)
}

// float toe = 18;
inline void PBGlonassEphemeris::clear_toe() {
  toe_ = 0;
}
inline float PBGlonassEphemeris::toe() const {
  // @@protoc_insertion_point(field_get:PBGlonassEphemeris.toe)
  return toe_;
}
inline void PBGlonassEphemeris::set_toe(float value) {
  
  toe_ = value;
  // @@protoc_insertion_point(field_set:PBGlonassEphemeris.toe)
}

// uint32 nt = 19;
inline void PBGlonassEphemeris::clear_nt() {
  nt_ = 0u;
}
inline ::google::protobuf::uint32 PBGlonassEphemeris::nt() const {
  // @@protoc_insertion_point(field_get:PBGlonassEphemeris.nt)
  return nt_;
}
inline void PBGlonassEphemeris::set_nt(::google::protobuf::uint32 value) {
  
  nt_ = value;
  // @@protoc_insertion_point(field_set:PBGlonassEphemeris.nt)
}

// -------------------------------------------------------------------

// PBBdsEphemeris

// .PBGnssEphCommon commonEphemerisData = 1;
inline bool PBBdsEphemeris::has_commonephemerisdata() const {
  return this != internal_default_instance() && commonephemerisdata_ != NULL;
}
inline void PBBdsEphemeris::clear_commonephemerisdata() {
  if (GetArenaNoVirtual() == NULL && commonephemerisdata_ != NULL) delete commonephemerisdata_;
  commonephemerisdata_ = NULL;
}
inline const ::PBGnssEphCommon& PBBdsEphemeris::commonephemerisdata() const {
  // @@protoc_insertion_point(field_get:PBBdsEphemeris.commonEphemerisData)
  return commonephemerisdata_ != NULL ? *commonephemerisdata_
                         : *::PBGnssEphCommon::internal_default_instance();
}
inline ::PBGnssEphCommon* PBBdsEphemeris::mutable_commonephemerisdata() {
  
  if (commonephemerisdata_ == NULL) {
    commonephemerisdata_ = new ::PBGnssEphCommon;
  }
  // @@protoc_insertion_point(field_mutable:PBBdsEphemeris.commonEphemerisData)
  return commonephemerisdata_;
}
inline ::PBGnssEphCommon* PBBdsEphemeris::release_commonephemerisdata() {
  // @@protoc_insertion_point(field_release:PBBdsEphemeris.commonEphemerisData)
  
  ::PBGnssEphCommon* temp = commonephemerisdata_;
  commonephemerisdata_ = NULL;
  return temp;
}
inline void PBBdsEphemeris::set_allocated_commonephemerisdata(::PBGnssEphCommon* commonephemerisdata) {
  delete commonephemerisdata_;
  commonephemerisdata_ = commonephemerisdata;
  if (commonephemerisdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBBdsEphemeris.commonEphemerisData)
}

// uint32 svHealth = 2;
inline void PBBdsEphemeris::clear_svhealth() {
  svhealth_ = 0u;
}
inline ::google::protobuf::uint32 PBBdsEphemeris::svhealth() const {
  // @@protoc_insertion_point(field_get:PBBdsEphemeris.svHealth)
  return svhealth_;
}
inline void PBBdsEphemeris::set_svhealth(::google::protobuf::uint32 value) {
  
  svhealth_ = value;
  // @@protoc_insertion_point(field_set:PBBdsEphemeris.svHealth)
}

// uint32 AODC = 3;
inline void PBBdsEphemeris::clear_aodc() {
  aodc_ = 0u;
}
inline ::google::protobuf::uint32 PBBdsEphemeris::aodc() const {
  // @@protoc_insertion_point(field_get:PBBdsEphemeris.AODC)
  return aodc_;
}
inline void PBBdsEphemeris::set_aodc(::google::protobuf::uint32 value) {
  
  aodc_ = value;
  // @@protoc_insertion_point(field_set:PBBdsEphemeris.AODC)
}

// float tgd1 = 4;
inline void PBBdsEphemeris::clear_tgd1() {
  tgd1_ = 0;
}
inline float PBBdsEphemeris::tgd1() const {
  // @@protoc_insertion_point(field_get:PBBdsEphemeris.tgd1)
  return tgd1_;
}
inline void PBBdsEphemeris::set_tgd1(float value) {
  
  tgd1_ = value;
  // @@protoc_insertion_point(field_set:PBBdsEphemeris.tgd1)
}

// float tgd2 = 5;
inline void PBBdsEphemeris::clear_tgd2() {
  tgd2_ = 0;
}
inline float PBBdsEphemeris::tgd2() const {
  // @@protoc_insertion_point(field_get:PBBdsEphemeris.tgd2)
  return tgd2_;
}
inline void PBBdsEphemeris::set_tgd2(float value) {
  
  tgd2_ = value;
  // @@protoc_insertion_point(field_set:PBBdsEphemeris.tgd2)
}

// uint32 URAI = 6;
inline void PBBdsEphemeris::clear_urai() {
  urai_ = 0u;
}
inline ::google::protobuf::uint32 PBBdsEphemeris::urai() const {
  // @@protoc_insertion_point(field_get:PBBdsEphemeris.URAI)
  return urai_;
}
inline void PBBdsEphemeris::set_urai(::google::protobuf::uint32 value) {
  
  urai_ = value;
  // @@protoc_insertion_point(field_set:PBBdsEphemeris.URAI)
}

// -------------------------------------------------------------------

// PBGalileoEphemeris

// .PBGnssEphCommon commonEphemerisData = 1;
inline bool PBGalileoEphemeris::has_commonephemerisdata() const {
  return this != internal_default_instance() && commonephemerisdata_ != NULL;
}
inline void PBGalileoEphemeris::clear_commonephemerisdata() {
  if (GetArenaNoVirtual() == NULL && commonephemerisdata_ != NULL) delete commonephemerisdata_;
  commonephemerisdata_ = NULL;
}
inline const ::PBGnssEphCommon& PBGalileoEphemeris::commonephemerisdata() const {
  // @@protoc_insertion_point(field_get:PBGalileoEphemeris.commonEphemerisData)
  return commonephemerisdata_ != NULL ? *commonephemerisdata_
                         : *::PBGnssEphCommon::internal_default_instance();
}
inline ::PBGnssEphCommon* PBGalileoEphemeris::mutable_commonephemerisdata() {
  
  if (commonephemerisdata_ == NULL) {
    commonephemerisdata_ = new ::PBGnssEphCommon;
  }
  // @@protoc_insertion_point(field_mutable:PBGalileoEphemeris.commonEphemerisData)
  return commonephemerisdata_;
}
inline ::PBGnssEphCommon* PBGalileoEphemeris::release_commonephemerisdata() {
  // @@protoc_insertion_point(field_release:PBGalileoEphemeris.commonEphemerisData)
  
  ::PBGnssEphCommon* temp = commonephemerisdata_;
  commonephemerisdata_ = NULL;
  return temp;
}
inline void PBGalileoEphemeris::set_allocated_commonephemerisdata(::PBGnssEphCommon* commonephemerisdata) {
  delete commonephemerisdata_;
  commonephemerisdata_ = commonephemerisdata;
  if (commonephemerisdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGalileoEphemeris.commonEphemerisData)
}

// .PBGalEphSignalSource dataSourceSignal = 2;
inline void PBGalileoEphemeris::clear_datasourcesignal() {
  datasourcesignal_ = 0;
}
inline ::PBGalEphSignalSource PBGalileoEphemeris::datasourcesignal() const {
  // @@protoc_insertion_point(field_get:PBGalileoEphemeris.dataSourceSignal)
  return static_cast< ::PBGalEphSignalSource >(datasourcesignal_);
}
inline void PBGalileoEphemeris::set_datasourcesignal(::PBGalEphSignalSource value) {
  
  datasourcesignal_ = value;
  // @@protoc_insertion_point(field_set:PBGalileoEphemeris.dataSourceSignal)
}

// uint32 sisIndex = 3;
inline void PBGalileoEphemeris::clear_sisindex() {
  sisindex_ = 0u;
}
inline ::google::protobuf::uint32 PBGalileoEphemeris::sisindex() const {
  // @@protoc_insertion_point(field_get:PBGalileoEphemeris.sisIndex)
  return sisindex_;
}
inline void PBGalileoEphemeris::set_sisindex(::google::protobuf::uint32 value) {
  
  sisindex_ = value;
  // @@protoc_insertion_point(field_set:PBGalileoEphemeris.sisIndex)
}

// float bgdE1E5a = 4;
inline void PBGalileoEphemeris::clear_bgde1e5a() {
  bgde1e5a_ = 0;
}
inline float PBGalileoEphemeris::bgde1e5a() const {
  // @@protoc_insertion_point(field_get:PBGalileoEphemeris.bgdE1E5a)
  return bgde1e5a_;
}
inline void PBGalileoEphemeris::set_bgde1e5a(float value) {
  
  bgde1e5a_ = value;
  // @@protoc_insertion_point(field_set:PBGalileoEphemeris.bgdE1E5a)
}

// float bgdE1E5b = 5;
inline void PBGalileoEphemeris::clear_bgde1e5b() {
  bgde1e5b_ = 0;
}
inline float PBGalileoEphemeris::bgde1e5b() const {
  // @@protoc_insertion_point(field_get:PBGalileoEphemeris.bgdE1E5b)
  return bgde1e5b_;
}
inline void PBGalileoEphemeris::set_bgde1e5b(float value) {
  
  bgde1e5b_ = value;
  // @@protoc_insertion_point(field_set:PBGalileoEphemeris.bgdE1E5b)
}

// uint32 svHealth = 6;
inline void PBGalileoEphemeris::clear_svhealth() {
  svhealth_ = 0u;
}
inline ::google::protobuf::uint32 PBGalileoEphemeris::svhealth() const {
  // @@protoc_insertion_point(field_get:PBGalileoEphemeris.svHealth)
  return svhealth_;
}
inline void PBGalileoEphemeris::set_svhealth(::google::protobuf::uint32 value) {
  
  svhealth_ = value;
  // @@protoc_insertion_point(field_set:PBGalileoEphemeris.svHealth)
}

// -------------------------------------------------------------------

// PBGnssKlobucharIonoModel

// bool isSystemTimeValid = 1;
inline void PBGnssKlobucharIonoModel::clear_issystemtimevalid() {
  issystemtimevalid_ = false;
}
inline bool PBGnssKlobucharIonoModel::issystemtimevalid() const {
  // @@protoc_insertion_point(field_get:PBGnssKlobucharIonoModel.isSystemTimeValid)
  return issystemtimevalid_;
}
inline void PBGnssKlobucharIonoModel::set_issystemtimevalid(bool value) {
  
  issystemtimevalid_ = value;
  // @@protoc_insertion_point(field_set:PBGnssKlobucharIonoModel.isSystemTimeValid)
}

// .PBGnssSystemTimeStructType systemTime = 2;
inline bool PBGnssKlobucharIonoModel::has_systemtime() const {
  return this != internal_default_instance() && systemtime_ != NULL;
}
inline void PBGnssKlobucharIonoModel::clear_systemtime() {
  if (GetArenaNoVirtual() == NULL && systemtime_ != NULL) delete systemtime_;
  systemtime_ = NULL;
}
inline const ::PBGnssSystemTimeStructType& PBGnssKlobucharIonoModel::systemtime() const {
  // @@protoc_insertion_point(field_get:PBGnssKlobucharIonoModel.systemTime)
  return systemtime_ != NULL ? *systemtime_
                         : *::PBGnssSystemTimeStructType::internal_default_instance();
}
inline ::PBGnssSystemTimeStructType* PBGnssKlobucharIonoModel::mutable_systemtime() {
  
  if (systemtime_ == NULL) {
    systemtime_ = new ::PBGnssSystemTimeStructType;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssKlobucharIonoModel.systemTime)
  return systemtime_;
}
inline ::PBGnssSystemTimeStructType* PBGnssKlobucharIonoModel::release_systemtime() {
  // @@protoc_insertion_point(field_release:PBGnssKlobucharIonoModel.systemTime)
  
  ::PBGnssSystemTimeStructType* temp = systemtime_;
  systemtime_ = NULL;
  return temp;
}
inline void PBGnssKlobucharIonoModel::set_allocated_systemtime(::PBGnssSystemTimeStructType* systemtime) {
  delete systemtime_;
  systemtime_ = systemtime;
  if (systemtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssKlobucharIonoModel.systemTime)
}

// .PBGnss_LocSvSystemEnumType gnssConstellation = 3;
inline void PBGnssKlobucharIonoModel::clear_gnssconstellation() {
  gnssconstellation_ = 0;
}
inline ::PBGnss_LocSvSystemEnumType PBGnssKlobucharIonoModel::gnssconstellation() const {
  // @@protoc_insertion_point(field_get:PBGnssKlobucharIonoModel.gnssConstellation)
  return static_cast< ::PBGnss_LocSvSystemEnumType >(gnssconstellation_);
}
inline void PBGnssKlobucharIonoModel::set_gnssconstellation(::PBGnss_LocSvSystemEnumType value) {
  
  gnssconstellation_ = value;
  // @@protoc_insertion_point(field_set:PBGnssKlobucharIonoModel.gnssConstellation)
}

// float alpha0 = 4;
inline void PBGnssKlobucharIonoModel::clear_alpha0() {
  alpha0_ = 0;
}
inline float PBGnssKlobucharIonoModel::alpha0() const {
  // @@protoc_insertion_point(field_get:PBGnssKlobucharIonoModel.alpha0)
  return alpha0_;
}
inline void PBGnssKlobucharIonoModel::set_alpha0(float value) {
  
  alpha0_ = value;
  // @@protoc_insertion_point(field_set:PBGnssKlobucharIonoModel.alpha0)
}

// float alpha1 = 5;
inline void PBGnssKlobucharIonoModel::clear_alpha1() {
  alpha1_ = 0;
}
inline float PBGnssKlobucharIonoModel::alpha1() const {
  // @@protoc_insertion_point(field_get:PBGnssKlobucharIonoModel.alpha1)
  return alpha1_;
}
inline void PBGnssKlobucharIonoModel::set_alpha1(float value) {
  
  alpha1_ = value;
  // @@protoc_insertion_point(field_set:PBGnssKlobucharIonoModel.alpha1)
}

// float alpha2 = 6;
inline void PBGnssKlobucharIonoModel::clear_alpha2() {
  alpha2_ = 0;
}
inline float PBGnssKlobucharIonoModel::alpha2() const {
  // @@protoc_insertion_point(field_get:PBGnssKlobucharIonoModel.alpha2)
  return alpha2_;
}
inline void PBGnssKlobucharIonoModel::set_alpha2(float value) {
  
  alpha2_ = value;
  // @@protoc_insertion_point(field_set:PBGnssKlobucharIonoModel.alpha2)
}

// float alpha3 = 7;
inline void PBGnssKlobucharIonoModel::clear_alpha3() {
  alpha3_ = 0;
}
inline float PBGnssKlobucharIonoModel::alpha3() const {
  // @@protoc_insertion_point(field_get:PBGnssKlobucharIonoModel.alpha3)
  return alpha3_;
}
inline void PBGnssKlobucharIonoModel::set_alpha3(float value) {
  
  alpha3_ = value;
  // @@protoc_insertion_point(field_set:PBGnssKlobucharIonoModel.alpha3)
}

// float beta0 = 8;
inline void PBGnssKlobucharIonoModel::clear_beta0() {
  beta0_ = 0;
}
inline float PBGnssKlobucharIonoModel::beta0() const {
  // @@protoc_insertion_point(field_get:PBGnssKlobucharIonoModel.beta0)
  return beta0_;
}
inline void PBGnssKlobucharIonoModel::set_beta0(float value) {
  
  beta0_ = value;
  // @@protoc_insertion_point(field_set:PBGnssKlobucharIonoModel.beta0)
}

// float beta1 = 9;
inline void PBGnssKlobucharIonoModel::clear_beta1() {
  beta1_ = 0;
}
inline float PBGnssKlobucharIonoModel::beta1() const {
  // @@protoc_insertion_point(field_get:PBGnssKlobucharIonoModel.beta1)
  return beta1_;
}
inline void PBGnssKlobucharIonoModel::set_beta1(float value) {
  
  beta1_ = value;
  // @@protoc_insertion_point(field_set:PBGnssKlobucharIonoModel.beta1)
}

// float beta2 = 10;
inline void PBGnssKlobucharIonoModel::clear_beta2() {
  beta2_ = 0;
}
inline float PBGnssKlobucharIonoModel::beta2() const {
  // @@protoc_insertion_point(field_get:PBGnssKlobucharIonoModel.beta2)
  return beta2_;
}
inline void PBGnssKlobucharIonoModel::set_beta2(float value) {
  
  beta2_ = value;
  // @@protoc_insertion_point(field_set:PBGnssKlobucharIonoModel.beta2)
}

// float beta3 = 11;
inline void PBGnssKlobucharIonoModel::clear_beta3() {
  beta3_ = 0;
}
inline float PBGnssKlobucharIonoModel::beta3() const {
  // @@protoc_insertion_point(field_get:PBGnssKlobucharIonoModel.beta3)
  return beta3_;
}
inline void PBGnssKlobucharIonoModel::set_beta3(float value) {
  
  beta3_ = value;
  // @@protoc_insertion_point(field_set:PBGnssKlobucharIonoModel.beta3)
}

// -------------------------------------------------------------------

// PBGnssAdditionalSystemInfo

// bool isSystemTimeValid = 1;
inline void PBGnssAdditionalSystemInfo::clear_issystemtimevalid() {
  issystemtimevalid_ = false;
}
inline bool PBGnssAdditionalSystemInfo::issystemtimevalid() const {
  // @@protoc_insertion_point(field_get:PBGnssAdditionalSystemInfo.isSystemTimeValid)
  return issystemtimevalid_;
}
inline void PBGnssAdditionalSystemInfo::set_issystemtimevalid(bool value) {
  
  issystemtimevalid_ = value;
  // @@protoc_insertion_point(field_set:PBGnssAdditionalSystemInfo.isSystemTimeValid)
}

// .PBGnssSystemTimeStructType systemTime = 2;
inline bool PBGnssAdditionalSystemInfo::has_systemtime() const {
  return this != internal_default_instance() && systemtime_ != NULL;
}
inline void PBGnssAdditionalSystemInfo::clear_systemtime() {
  if (GetArenaNoVirtual() == NULL && systemtime_ != NULL) delete systemtime_;
  systemtime_ = NULL;
}
inline const ::PBGnssSystemTimeStructType& PBGnssAdditionalSystemInfo::systemtime() const {
  // @@protoc_insertion_point(field_get:PBGnssAdditionalSystemInfo.systemTime)
  return systemtime_ != NULL ? *systemtime_
                         : *::PBGnssSystemTimeStructType::internal_default_instance();
}
inline ::PBGnssSystemTimeStructType* PBGnssAdditionalSystemInfo::mutable_systemtime() {
  
  if (systemtime_ == NULL) {
    systemtime_ = new ::PBGnssSystemTimeStructType;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssAdditionalSystemInfo.systemTime)
  return systemtime_;
}
inline ::PBGnssSystemTimeStructType* PBGnssAdditionalSystemInfo::release_systemtime() {
  // @@protoc_insertion_point(field_release:PBGnssAdditionalSystemInfo.systemTime)
  
  ::PBGnssSystemTimeStructType* temp = systemtime_;
  systemtime_ = NULL;
  return temp;
}
inline void PBGnssAdditionalSystemInfo::set_allocated_systemtime(::PBGnssSystemTimeStructType* systemtime) {
  delete systemtime_;
  systemtime_ = systemtime;
  if (systemtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssAdditionalSystemInfo.systemTime)
}

// uint32 validityMask = 3;
inline void PBGnssAdditionalSystemInfo::clear_validitymask() {
  validitymask_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssAdditionalSystemInfo::validitymask() const {
  // @@protoc_insertion_point(field_get:PBGnssAdditionalSystemInfo.validityMask)
  return validitymask_;
}
inline void PBGnssAdditionalSystemInfo::set_validitymask(::google::protobuf::uint32 value) {
  
  validitymask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssAdditionalSystemInfo.validityMask)
}

// float tauC = 4;
inline void PBGnssAdditionalSystemInfo::clear_tauc() {
  tauc_ = 0;
}
inline float PBGnssAdditionalSystemInfo::tauc() const {
  // @@protoc_insertion_point(field_get:PBGnssAdditionalSystemInfo.tauC)
  return tauc_;
}
inline void PBGnssAdditionalSystemInfo::set_tauc(float value) {
  
  tauc_ = value;
  // @@protoc_insertion_point(field_set:PBGnssAdditionalSystemInfo.tauC)
}

// uint32 leapSec = 5;
inline void PBGnssAdditionalSystemInfo::clear_leapsec() {
  leapsec_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssAdditionalSystemInfo::leapsec() const {
  // @@protoc_insertion_point(field_get:PBGnssAdditionalSystemInfo.leapSec)
  return leapsec_;
}
inline void PBGnssAdditionalSystemInfo::set_leapsec(::google::protobuf::uint32 value) {
  
  leapsec_ = value;
  // @@protoc_insertion_point(field_set:PBGnssAdditionalSystemInfo.leapSec)
}

// -------------------------------------------------------------------

// PBGpsMeasUsageInfo

// uint32 gnssSignalType = 1;
inline void PBGpsMeasUsageInfo::clear_gnsssignaltype() {
  gnsssignaltype_ = 0u;
}
inline ::google::protobuf::uint32 PBGpsMeasUsageInfo::gnsssignaltype() const {
  // @@protoc_insertion_point(field_get:PBGpsMeasUsageInfo.gnssSignalType)
  return gnsssignaltype_;
}
inline void PBGpsMeasUsageInfo::set_gnsssignaltype(::google::protobuf::uint32 value) {
  
  gnsssignaltype_ = value;
  // @@protoc_insertion_point(field_set:PBGpsMeasUsageInfo.gnssSignalType)
}

// .PBGnss_LocSvSystemEnumType gnssConstellation = 2;
inline void PBGpsMeasUsageInfo::clear_gnssconstellation() {
  gnssconstellation_ = 0;
}
inline ::PBGnss_LocSvSystemEnumType PBGpsMeasUsageInfo::gnssconstellation() const {
  // @@protoc_insertion_point(field_get:PBGpsMeasUsageInfo.gnssConstellation)
  return static_cast< ::PBGnss_LocSvSystemEnumType >(gnssconstellation_);
}
inline void PBGpsMeasUsageInfo::set_gnssconstellation(::PBGnss_LocSvSystemEnumType value) {
  
  gnssconstellation_ = value;
  // @@protoc_insertion_point(field_set:PBGpsMeasUsageInfo.gnssConstellation)
}

// uint32 gnssSvId = 3;
inline void PBGpsMeasUsageInfo::clear_gnsssvid() {
  gnsssvid_ = 0u;
}
inline ::google::protobuf::uint32 PBGpsMeasUsageInfo::gnsssvid() const {
  // @@protoc_insertion_point(field_get:PBGpsMeasUsageInfo.gnssSvId)
  return gnsssvid_;
}
inline void PBGpsMeasUsageInfo::set_gnsssvid(::google::protobuf::uint32 value) {
  
  gnsssvid_ = value;
  // @@protoc_insertion_point(field_set:PBGpsMeasUsageInfo.gnssSvId)
}

// uint32 gloFrequency = 4;
inline void PBGpsMeasUsageInfo::clear_glofrequency() {
  glofrequency_ = 0u;
}
inline ::google::protobuf::uint32 PBGpsMeasUsageInfo::glofrequency() const {
  // @@protoc_insertion_point(field_get:PBGpsMeasUsageInfo.gloFrequency)
  return glofrequency_;
}
inline void PBGpsMeasUsageInfo::set_glofrequency(::google::protobuf::uint32 value) {
  
  glofrequency_ = value;
  // @@protoc_insertion_point(field_set:PBGpsMeasUsageInfo.gloFrequency)
}

// .PBCarrierPhaseAmbiguityType carrierPhaseAmbiguityType = 5;
inline void PBGpsMeasUsageInfo::clear_carrierphaseambiguitytype() {
  carrierphaseambiguitytype_ = 0;
}
inline ::PBCarrierPhaseAmbiguityType PBGpsMeasUsageInfo::carrierphaseambiguitytype() const {
  // @@protoc_insertion_point(field_get:PBGpsMeasUsageInfo.carrierPhaseAmbiguityType)
  return static_cast< ::PBCarrierPhaseAmbiguityType >(carrierphaseambiguitytype_);
}
inline void PBGpsMeasUsageInfo::set_carrierphaseambiguitytype(::PBCarrierPhaseAmbiguityType value) {
  
  carrierphaseambiguitytype_ = value;
  // @@protoc_insertion_point(field_set:PBGpsMeasUsageInfo.carrierPhaseAmbiguityType)
}

// uint32 measUsageStatusMask = 6;
inline void PBGpsMeasUsageInfo::clear_measusagestatusmask() {
  measusagestatusmask_ = 0u;
}
inline ::google::protobuf::uint32 PBGpsMeasUsageInfo::measusagestatusmask() const {
  // @@protoc_insertion_point(field_get:PBGpsMeasUsageInfo.measUsageStatusMask)
  return measusagestatusmask_;
}
inline void PBGpsMeasUsageInfo::set_measusagestatusmask(::google::protobuf::uint32 value) {
  
  measusagestatusmask_ = value;
  // @@protoc_insertion_point(field_set:PBGpsMeasUsageInfo.measUsageStatusMask)
}

// uint32 validityMask = 7;
inline void PBGpsMeasUsageInfo::clear_validitymask() {
  validitymask_ = 0u;
}
inline ::google::protobuf::uint32 PBGpsMeasUsageInfo::validitymask() const {
  // @@protoc_insertion_point(field_get:PBGpsMeasUsageInfo.validityMask)
  return validitymask_;
}
inline void PBGpsMeasUsageInfo::set_validitymask(::google::protobuf::uint32 value) {
  
  validitymask_ = value;
  // @@protoc_insertion_point(field_set:PBGpsMeasUsageInfo.validityMask)
}

// float pseudorangeResidual = 8;
inline void PBGpsMeasUsageInfo::clear_pseudorangeresidual() {
  pseudorangeresidual_ = 0;
}
inline float PBGpsMeasUsageInfo::pseudorangeresidual() const {
  // @@protoc_insertion_point(field_get:PBGpsMeasUsageInfo.pseudorangeResidual)
  return pseudorangeresidual_;
}
inline void PBGpsMeasUsageInfo::set_pseudorangeresidual(float value) {
  
  pseudorangeresidual_ = value;
  // @@protoc_insertion_point(field_set:PBGpsMeasUsageInfo.pseudorangeResidual)
}

// float dopplerResidual = 9;
inline void PBGpsMeasUsageInfo::clear_dopplerresidual() {
  dopplerresidual_ = 0;
}
inline float PBGpsMeasUsageInfo::dopplerresidual() const {
  // @@protoc_insertion_point(field_get:PBGpsMeasUsageInfo.dopplerResidual)
  return dopplerresidual_;
}
inline void PBGpsMeasUsageInfo::set_dopplerresidual(float value) {
  
  dopplerresidual_ = value;
  // @@protoc_insertion_point(field_set:PBGpsMeasUsageInfo.dopplerResidual)
}

// float carrierPhaseResidual = 10;
inline void PBGpsMeasUsageInfo::clear_carrierphaseresidual() {
  carrierphaseresidual_ = 0;
}
inline float PBGpsMeasUsageInfo::carrierphaseresidual() const {
  // @@protoc_insertion_point(field_get:PBGpsMeasUsageInfo.carrierPhaseResidual)
  return carrierphaseresidual_;
}
inline void PBGpsMeasUsageInfo::set_carrierphaseresidual(float value) {
  
  carrierphaseresidual_ = value;
  // @@protoc_insertion_point(field_set:PBGpsMeasUsageInfo.carrierPhaseResidual)
}

// float carrierPhasAmbiguity = 11;
inline void PBGpsMeasUsageInfo::clear_carrierphasambiguity() {
  carrierphasambiguity_ = 0;
}
inline float PBGpsMeasUsageInfo::carrierphasambiguity() const {
  // @@protoc_insertion_point(field_get:PBGpsMeasUsageInfo.carrierPhasAmbiguity)
  return carrierphasambiguity_;
}
inline void PBGpsMeasUsageInfo::set_carrierphasambiguity(float value) {
  
  carrierphasambiguity_ = value;
  // @@protoc_insertion_point(field_set:PBGpsMeasUsageInfo.carrierPhasAmbiguity)
}

// -------------------------------------------------------------------

// PBLocExtDOP

// float PDOP = 1;
inline void PBLocExtDOP::clear_pdop() {
  pdop_ = 0;
}
inline float PBLocExtDOP::pdop() const {
  // @@protoc_insertion_point(field_get:PBLocExtDOP.PDOP)
  return pdop_;
}
inline void PBLocExtDOP::set_pdop(float value) {
  
  pdop_ = value;
  // @@protoc_insertion_point(field_set:PBLocExtDOP.PDOP)
}

// float HDOP = 2;
inline void PBLocExtDOP::clear_hdop() {
  hdop_ = 0;
}
inline float PBLocExtDOP::hdop() const {
  // @@protoc_insertion_point(field_get:PBLocExtDOP.HDOP)
  return hdop_;
}
inline void PBLocExtDOP::set_hdop(float value) {
  
  hdop_ = value;
  // @@protoc_insertion_point(field_set:PBLocExtDOP.HDOP)
}

// float VDOP = 3;
inline void PBLocExtDOP::clear_vdop() {
  vdop_ = 0;
}
inline float PBLocExtDOP::vdop() const {
  // @@protoc_insertion_point(field_get:PBLocExtDOP.VDOP)
  return vdop_;
}
inline void PBLocExtDOP::set_vdop(float value) {
  
  vdop_ = value;
  // @@protoc_insertion_point(field_set:PBLocExtDOP.VDOP)
}

// float GDOP = 4;
inline void PBLocExtDOP::clear_gdop() {
  gdop_ = 0;
}
inline float PBLocExtDOP::gdop() const {
  // @@protoc_insertion_point(field_get:PBLocExtDOP.GDOP)
  return gdop_;
}
inline void PBLocExtDOP::set_gdop(float value) {
  
  gdop_ = value;
  // @@protoc_insertion_point(field_set:PBLocExtDOP.GDOP)
}

// float TDOP = 5;
inline void PBLocExtDOP::clear_tdop() {
  tdop_ = 0;
}
inline float PBLocExtDOP::tdop() const {
  // @@protoc_insertion_point(field_get:PBLocExtDOP.TDOP)
  return tdop_;
}
inline void PBLocExtDOP::set_tdop(float value) {
  
  tdop_ = value;
  // @@protoc_insertion_point(field_set:PBLocExtDOP.TDOP)
}

// -------------------------------------------------------------------

// PBSystemTimeStructUnion

// .PBGnssSystemTimeStructType gpsSystemTime = 1;
inline bool PBSystemTimeStructUnion::has_gpssystemtime() const {
  return sysTimeUnion_case() == kGpsSystemTime;
}
inline void PBSystemTimeStructUnion::set_has_gpssystemtime() {
  _oneof_case_[0] = kGpsSystemTime;
}
inline void PBSystemTimeStructUnion::clear_gpssystemtime() {
  if (has_gpssystemtime()) {
    delete sysTimeUnion_.gpssystemtime_;
    clear_has_sysTimeUnion();
  }
}
inline  const ::PBGnssSystemTimeStructType& PBSystemTimeStructUnion::gpssystemtime() const {
  // @@protoc_insertion_point(field_get:PBSystemTimeStructUnion.gpsSystemTime)
  return has_gpssystemtime()
      ? *sysTimeUnion_.gpssystemtime_
      : ::PBGnssSystemTimeStructType::default_instance();
}
inline ::PBGnssSystemTimeStructType* PBSystemTimeStructUnion::mutable_gpssystemtime() {
  if (!has_gpssystemtime()) {
    clear_sysTimeUnion();
    set_has_gpssystemtime();
    sysTimeUnion_.gpssystemtime_ = new ::PBGnssSystemTimeStructType;
  }
  // @@protoc_insertion_point(field_mutable:PBSystemTimeStructUnion.gpsSystemTime)
  return sysTimeUnion_.gpssystemtime_;
}
inline ::PBGnssSystemTimeStructType* PBSystemTimeStructUnion::release_gpssystemtime() {
  // @@protoc_insertion_point(field_release:PBSystemTimeStructUnion.gpsSystemTime)
  if (has_gpssystemtime()) {
    clear_has_sysTimeUnion();
    ::PBGnssSystemTimeStructType* temp = sysTimeUnion_.gpssystemtime_;
    sysTimeUnion_.gpssystemtime_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void PBSystemTimeStructUnion::set_allocated_gpssystemtime(::PBGnssSystemTimeStructType* gpssystemtime) {
  clear_sysTimeUnion();
  if (gpssystemtime) {
    set_has_gpssystemtime();
    sysTimeUnion_.gpssystemtime_ = gpssystemtime;
  }
  // @@protoc_insertion_point(field_set_allocated:PBSystemTimeStructUnion.gpsSystemTime)
}

// .PBGnssSystemTimeStructType galSystemTime = 2;
inline bool PBSystemTimeStructUnion::has_galsystemtime() const {
  return sysTimeUnion_case() == kGalSystemTime;
}
inline void PBSystemTimeStructUnion::set_has_galsystemtime() {
  _oneof_case_[0] = kGalSystemTime;
}
inline void PBSystemTimeStructUnion::clear_galsystemtime() {
  if (has_galsystemtime()) {
    delete sysTimeUnion_.galsystemtime_;
    clear_has_sysTimeUnion();
  }
}
inline  const ::PBGnssSystemTimeStructType& PBSystemTimeStructUnion::galsystemtime() const {
  // @@protoc_insertion_point(field_get:PBSystemTimeStructUnion.galSystemTime)
  return has_galsystemtime()
      ? *sysTimeUnion_.galsystemtime_
      : ::PBGnssSystemTimeStructType::default_instance();
}
inline ::PBGnssSystemTimeStructType* PBSystemTimeStructUnion::mutable_galsystemtime() {
  if (!has_galsystemtime()) {
    clear_sysTimeUnion();
    set_has_galsystemtime();
    sysTimeUnion_.galsystemtime_ = new ::PBGnssSystemTimeStructType;
  }
  // @@protoc_insertion_point(field_mutable:PBSystemTimeStructUnion.galSystemTime)
  return sysTimeUnion_.galsystemtime_;
}
inline ::PBGnssSystemTimeStructType* PBSystemTimeStructUnion::release_galsystemtime() {
  // @@protoc_insertion_point(field_release:PBSystemTimeStructUnion.galSystemTime)
  if (has_galsystemtime()) {
    clear_has_sysTimeUnion();
    ::PBGnssSystemTimeStructType* temp = sysTimeUnion_.galsystemtime_;
    sysTimeUnion_.galsystemtime_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void PBSystemTimeStructUnion::set_allocated_galsystemtime(::PBGnssSystemTimeStructType* galsystemtime) {
  clear_sysTimeUnion();
  if (galsystemtime) {
    set_has_galsystemtime();
    sysTimeUnion_.galsystemtime_ = galsystemtime;
  }
  // @@protoc_insertion_point(field_set_allocated:PBSystemTimeStructUnion.galSystemTime)
}

// .PBGnssSystemTimeStructType bdsSystemTime = 3;
inline bool PBSystemTimeStructUnion::has_bdssystemtime() const {
  return sysTimeUnion_case() == kBdsSystemTime;
}
inline void PBSystemTimeStructUnion::set_has_bdssystemtime() {
  _oneof_case_[0] = kBdsSystemTime;
}
inline void PBSystemTimeStructUnion::clear_bdssystemtime() {
  if (has_bdssystemtime()) {
    delete sysTimeUnion_.bdssystemtime_;
    clear_has_sysTimeUnion();
  }
}
inline  const ::PBGnssSystemTimeStructType& PBSystemTimeStructUnion::bdssystemtime() const {
  // @@protoc_insertion_point(field_get:PBSystemTimeStructUnion.bdsSystemTime)
  return has_bdssystemtime()
      ? *sysTimeUnion_.bdssystemtime_
      : ::PBGnssSystemTimeStructType::default_instance();
}
inline ::PBGnssSystemTimeStructType* PBSystemTimeStructUnion::mutable_bdssystemtime() {
  if (!has_bdssystemtime()) {
    clear_sysTimeUnion();
    set_has_bdssystemtime();
    sysTimeUnion_.bdssystemtime_ = new ::PBGnssSystemTimeStructType;
  }
  // @@protoc_insertion_point(field_mutable:PBSystemTimeStructUnion.bdsSystemTime)
  return sysTimeUnion_.bdssystemtime_;
}
inline ::PBGnssSystemTimeStructType* PBSystemTimeStructUnion::release_bdssystemtime() {
  // @@protoc_insertion_point(field_release:PBSystemTimeStructUnion.bdsSystemTime)
  if (has_bdssystemtime()) {
    clear_has_sysTimeUnion();
    ::PBGnssSystemTimeStructType* temp = sysTimeUnion_.bdssystemtime_;
    sysTimeUnion_.bdssystemtime_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void PBSystemTimeStructUnion::set_allocated_bdssystemtime(::PBGnssSystemTimeStructType* bdssystemtime) {
  clear_sysTimeUnion();
  if (bdssystemtime) {
    set_has_bdssystemtime();
    sysTimeUnion_.bdssystemtime_ = bdssystemtime;
  }
  // @@protoc_insertion_point(field_set_allocated:PBSystemTimeStructUnion.bdsSystemTime)
}

// .PBGnssSystemTimeStructType qzssSystemTime = 4;
inline bool PBSystemTimeStructUnion::has_qzsssystemtime() const {
  return sysTimeUnion_case() == kQzssSystemTime;
}
inline void PBSystemTimeStructUnion::set_has_qzsssystemtime() {
  _oneof_case_[0] = kQzssSystemTime;
}
inline void PBSystemTimeStructUnion::clear_qzsssystemtime() {
  if (has_qzsssystemtime()) {
    delete sysTimeUnion_.qzsssystemtime_;
    clear_has_sysTimeUnion();
  }
}
inline  const ::PBGnssSystemTimeStructType& PBSystemTimeStructUnion::qzsssystemtime() const {
  // @@protoc_insertion_point(field_get:PBSystemTimeStructUnion.qzssSystemTime)
  return has_qzsssystemtime()
      ? *sysTimeUnion_.qzsssystemtime_
      : ::PBGnssSystemTimeStructType::default_instance();
}
inline ::PBGnssSystemTimeStructType* PBSystemTimeStructUnion::mutable_qzsssystemtime() {
  if (!has_qzsssystemtime()) {
    clear_sysTimeUnion();
    set_has_qzsssystemtime();
    sysTimeUnion_.qzsssystemtime_ = new ::PBGnssSystemTimeStructType;
  }
  // @@protoc_insertion_point(field_mutable:PBSystemTimeStructUnion.qzssSystemTime)
  return sysTimeUnion_.qzsssystemtime_;
}
inline ::PBGnssSystemTimeStructType* PBSystemTimeStructUnion::release_qzsssystemtime() {
  // @@protoc_insertion_point(field_release:PBSystemTimeStructUnion.qzssSystemTime)
  if (has_qzsssystemtime()) {
    clear_has_sysTimeUnion();
    ::PBGnssSystemTimeStructType* temp = sysTimeUnion_.qzsssystemtime_;
    sysTimeUnion_.qzsssystemtime_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void PBSystemTimeStructUnion::set_allocated_qzsssystemtime(::PBGnssSystemTimeStructType* qzsssystemtime) {
  clear_sysTimeUnion();
  if (qzsssystemtime) {
    set_has_qzsssystemtime();
    sysTimeUnion_.qzsssystemtime_ = qzsssystemtime;
  }
  // @@protoc_insertion_point(field_set_allocated:PBSystemTimeStructUnion.qzssSystemTime)
}

// .PBGnssGloTimeStructType gloSystemTime = 5;
inline bool PBSystemTimeStructUnion::has_glosystemtime() const {
  return sysTimeUnion_case() == kGloSystemTime;
}
inline void PBSystemTimeStructUnion::set_has_glosystemtime() {
  _oneof_case_[0] = kGloSystemTime;
}
inline void PBSystemTimeStructUnion::clear_glosystemtime() {
  if (has_glosystemtime()) {
    delete sysTimeUnion_.glosystemtime_;
    clear_has_sysTimeUnion();
  }
}
inline  const ::PBGnssGloTimeStructType& PBSystemTimeStructUnion::glosystemtime() const {
  // @@protoc_insertion_point(field_get:PBSystemTimeStructUnion.gloSystemTime)
  return has_glosystemtime()
      ? *sysTimeUnion_.glosystemtime_
      : ::PBGnssGloTimeStructType::default_instance();
}
inline ::PBGnssGloTimeStructType* PBSystemTimeStructUnion::mutable_glosystemtime() {
  if (!has_glosystemtime()) {
    clear_sysTimeUnion();
    set_has_glosystemtime();
    sysTimeUnion_.glosystemtime_ = new ::PBGnssGloTimeStructType;
  }
  // @@protoc_insertion_point(field_mutable:PBSystemTimeStructUnion.gloSystemTime)
  return sysTimeUnion_.glosystemtime_;
}
inline ::PBGnssGloTimeStructType* PBSystemTimeStructUnion::release_glosystemtime() {
  // @@protoc_insertion_point(field_release:PBSystemTimeStructUnion.gloSystemTime)
  if (has_glosystemtime()) {
    clear_has_sysTimeUnion();
    ::PBGnssGloTimeStructType* temp = sysTimeUnion_.glosystemtime_;
    sysTimeUnion_.glosystemtime_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void PBSystemTimeStructUnion::set_allocated_glosystemtime(::PBGnssGloTimeStructType* glosystemtime) {
  clear_sysTimeUnion();
  if (glosystemtime) {
    set_has_glosystemtime();
    sysTimeUnion_.glosystemtime_ = glosystemtime;
  }
  // @@protoc_insertion_point(field_set_allocated:PBSystemTimeStructUnion.gloSystemTime)
}

inline bool PBSystemTimeStructUnion::has_sysTimeUnion() const {
  return sysTimeUnion_case() != SYSTIMEUNION_NOT_SET;
}
inline void PBSystemTimeStructUnion::clear_has_sysTimeUnion() {
  _oneof_case_[0] = SYSTIMEUNION_NOT_SET;
}
inline PBSystemTimeStructUnion::SysTimeUnionCase PBSystemTimeStructUnion::sysTimeUnion_case() const {
  return PBSystemTimeStructUnion::SysTimeUnionCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// PBGnssSystemTime

// .PBGnss_LocSvSystemEnumType gnssSystemTimeSrc = 1;
inline void PBGnssSystemTime::clear_gnsssystemtimesrc() {
  gnsssystemtimesrc_ = 0;
}
inline ::PBGnss_LocSvSystemEnumType PBGnssSystemTime::gnsssystemtimesrc() const {
  // @@protoc_insertion_point(field_get:PBGnssSystemTime.gnssSystemTimeSrc)
  return static_cast< ::PBGnss_LocSvSystemEnumType >(gnsssystemtimesrc_);
}
inline void PBGnssSystemTime::set_gnsssystemtimesrc(::PBGnss_LocSvSystemEnumType value) {
  
  gnsssystemtimesrc_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSystemTime.gnssSystemTimeSrc)
}

// .PBSystemTimeStructUnion u = 2;
inline bool PBGnssSystemTime::has_u() const {
  return this != internal_default_instance() && u_ != NULL;
}
inline void PBGnssSystemTime::clear_u() {
  if (GetArenaNoVirtual() == NULL && u_ != NULL) delete u_;
  u_ = NULL;
}
inline const ::PBSystemTimeStructUnion& PBGnssSystemTime::u() const {
  // @@protoc_insertion_point(field_get:PBGnssSystemTime.u)
  return u_ != NULL ? *u_
                         : *::PBSystemTimeStructUnion::internal_default_instance();
}
inline ::PBSystemTimeStructUnion* PBGnssSystemTime::mutable_u() {
  
  if (u_ == NULL) {
    u_ = new ::PBSystemTimeStructUnion;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSystemTime.u)
  return u_;
}
inline ::PBSystemTimeStructUnion* PBGnssSystemTime::release_u() {
  // @@protoc_insertion_point(field_release:PBGnssSystemTime.u)
  
  ::PBSystemTimeStructUnion* temp = u_;
  u_ = NULL;
  return temp;
}
inline void PBGnssSystemTime::set_allocated_u(::PBSystemTimeStructUnion* u) {
  delete u_;
  u_ = u;
  if (u) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSystemTime.u)
}

// -------------------------------------------------------------------

// PBGPSTimeStruct

// uint32 gpsWeek = 1;
inline void PBGPSTimeStruct::clear_gpsweek() {
  gpsweek_ = 0u;
}
inline ::google::protobuf::uint32 PBGPSTimeStruct::gpsweek() const {
  // @@protoc_insertion_point(field_get:PBGPSTimeStruct.gpsWeek)
  return gpsweek_;
}
inline void PBGPSTimeStruct::set_gpsweek(::google::protobuf::uint32 value) {
  
  gpsweek_ = value;
  // @@protoc_insertion_point(field_set:PBGPSTimeStruct.gpsWeek)
}

// uint32 gpsTimeOfWeekMs = 2;
inline void PBGPSTimeStruct::clear_gpstimeofweekms() {
  gpstimeofweekms_ = 0u;
}
inline ::google::protobuf::uint32 PBGPSTimeStruct::gpstimeofweekms() const {
  // @@protoc_insertion_point(field_get:PBGPSTimeStruct.gpsTimeOfWeekMs)
  return gpstimeofweekms_;
}
inline void PBGPSTimeStruct::set_gpstimeofweekms(::google::protobuf::uint32 value) {
  
  gpstimeofweekms_ = value;
  // @@protoc_insertion_point(field_set:PBGPSTimeStruct.gpsTimeOfWeekMs)
}

// -------------------------------------------------------------------

// PBGnssLocationPositionDynamics

// uint32 bodyFrameDataMask = 1;
inline void PBGnssLocationPositionDynamics::clear_bodyframedatamask() {
  bodyframedatamask_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssLocationPositionDynamics::bodyframedatamask() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationPositionDynamics.bodyFrameDataMask)
  return bodyframedatamask_;
}
inline void PBGnssLocationPositionDynamics::set_bodyframedatamask(::google::protobuf::uint32 value) {
  
  bodyframedatamask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationPositionDynamics.bodyFrameDataMask)
}

// float longAccel = 2;
inline void PBGnssLocationPositionDynamics::clear_longaccel() {
  longaccel_ = 0;
}
inline float PBGnssLocationPositionDynamics::longaccel() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationPositionDynamics.longAccel)
  return longaccel_;
}
inline void PBGnssLocationPositionDynamics::set_longaccel(float value) {
  
  longaccel_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationPositionDynamics.longAccel)
}

// float latAccel = 3;
inline void PBGnssLocationPositionDynamics::clear_lataccel() {
  lataccel_ = 0;
}
inline float PBGnssLocationPositionDynamics::lataccel() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationPositionDynamics.latAccel)
  return lataccel_;
}
inline void PBGnssLocationPositionDynamics::set_lataccel(float value) {
  
  lataccel_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationPositionDynamics.latAccel)
}

// float vertAccel = 4;
inline void PBGnssLocationPositionDynamics::clear_vertaccel() {
  vertaccel_ = 0;
}
inline float PBGnssLocationPositionDynamics::vertaccel() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationPositionDynamics.vertAccel)
  return vertaccel_;
}
inline void PBGnssLocationPositionDynamics::set_vertaccel(float value) {
  
  vertaccel_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationPositionDynamics.vertAccel)
}

// float yawRate = 5;
inline void PBGnssLocationPositionDynamics::clear_yawrate() {
  yawrate_ = 0;
}
inline float PBGnssLocationPositionDynamics::yawrate() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationPositionDynamics.yawRate)
  return yawrate_;
}
inline void PBGnssLocationPositionDynamics::set_yawrate(float value) {
  
  yawrate_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationPositionDynamics.yawRate)
}

// float pitch = 6;
inline void PBGnssLocationPositionDynamics::clear_pitch() {
  pitch_ = 0;
}
inline float PBGnssLocationPositionDynamics::pitch() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationPositionDynamics.pitch)
  return pitch_;
}
inline void PBGnssLocationPositionDynamics::set_pitch(float value) {
  
  pitch_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationPositionDynamics.pitch)
}

// float longAccelUnc = 7;
inline void PBGnssLocationPositionDynamics::clear_longaccelunc() {
  longaccelunc_ = 0;
}
inline float PBGnssLocationPositionDynamics::longaccelunc() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationPositionDynamics.longAccelUnc)
  return longaccelunc_;
}
inline void PBGnssLocationPositionDynamics::set_longaccelunc(float value) {
  
  longaccelunc_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationPositionDynamics.longAccelUnc)
}

// float latAccelUnc = 8;
inline void PBGnssLocationPositionDynamics::clear_lataccelunc() {
  lataccelunc_ = 0;
}
inline float PBGnssLocationPositionDynamics::lataccelunc() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationPositionDynamics.latAccelUnc)
  return lataccelunc_;
}
inline void PBGnssLocationPositionDynamics::set_lataccelunc(float value) {
  
  lataccelunc_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationPositionDynamics.latAccelUnc)
}

// float vertAccelUnc = 9;
inline void PBGnssLocationPositionDynamics::clear_vertaccelunc() {
  vertaccelunc_ = 0;
}
inline float PBGnssLocationPositionDynamics::vertaccelunc() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationPositionDynamics.vertAccelUnc)
  return vertaccelunc_;
}
inline void PBGnssLocationPositionDynamics::set_vertaccelunc(float value) {
  
  vertaccelunc_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationPositionDynamics.vertAccelUnc)
}

// float yawRateUnc = 10;
inline void PBGnssLocationPositionDynamics::clear_yawrateunc() {
  yawrateunc_ = 0;
}
inline float PBGnssLocationPositionDynamics::yawrateunc() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationPositionDynamics.yawRateUnc)
  return yawrateunc_;
}
inline void PBGnssLocationPositionDynamics::set_yawrateunc(float value) {
  
  yawrateunc_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationPositionDynamics.yawRateUnc)
}

// float pitchUnc = 11;
inline void PBGnssLocationPositionDynamics::clear_pitchunc() {
  pitchunc_ = 0;
}
inline float PBGnssLocationPositionDynamics::pitchunc() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationPositionDynamics.pitchUnc)
  return pitchunc_;
}
inline void PBGnssLocationPositionDynamics::set_pitchunc(float value) {
  
  pitchunc_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationPositionDynamics.pitchUnc)
}

// float pitchRate = 12;
inline void PBGnssLocationPositionDynamics::clear_pitchrate() {
  pitchrate_ = 0;
}
inline float PBGnssLocationPositionDynamics::pitchrate() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationPositionDynamics.pitchRate)
  return pitchrate_;
}
inline void PBGnssLocationPositionDynamics::set_pitchrate(float value) {
  
  pitchrate_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationPositionDynamics.pitchRate)
}

// float pitchRateUnc = 13;
inline void PBGnssLocationPositionDynamics::clear_pitchrateunc() {
  pitchrateunc_ = 0;
}
inline float PBGnssLocationPositionDynamics::pitchrateunc() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationPositionDynamics.pitchRateUnc)
  return pitchrateunc_;
}
inline void PBGnssLocationPositionDynamics::set_pitchrateunc(float value) {
  
  pitchrateunc_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationPositionDynamics.pitchRateUnc)
}

// float roll = 14;
inline void PBGnssLocationPositionDynamics::clear_roll() {
  roll_ = 0;
}
inline float PBGnssLocationPositionDynamics::roll() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationPositionDynamics.roll)
  return roll_;
}
inline void PBGnssLocationPositionDynamics::set_roll(float value) {
  
  roll_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationPositionDynamics.roll)
}

// float rollUnc = 15;
inline void PBGnssLocationPositionDynamics::clear_rollunc() {
  rollunc_ = 0;
}
inline float PBGnssLocationPositionDynamics::rollunc() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationPositionDynamics.rollUnc)
  return rollunc_;
}
inline void PBGnssLocationPositionDynamics::set_rollunc(float value) {
  
  rollunc_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationPositionDynamics.rollUnc)
}

// float rollRate = 16;
inline void PBGnssLocationPositionDynamics::clear_rollrate() {
  rollrate_ = 0;
}
inline float PBGnssLocationPositionDynamics::rollrate() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationPositionDynamics.rollRate)
  return rollrate_;
}
inline void PBGnssLocationPositionDynamics::set_rollrate(float value) {
  
  rollrate_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationPositionDynamics.rollRate)
}

// float rollRateUnc = 17;
inline void PBGnssLocationPositionDynamics::clear_rollrateunc() {
  rollrateunc_ = 0;
}
inline float PBGnssLocationPositionDynamics::rollrateunc() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationPositionDynamics.rollRateUnc)
  return rollrateunc_;
}
inline void PBGnssLocationPositionDynamics::set_rollrateunc(float value) {
  
  rollrateunc_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationPositionDynamics.rollRateUnc)
}

// float yaw = 18;
inline void PBGnssLocationPositionDynamics::clear_yaw() {
  yaw_ = 0;
}
inline float PBGnssLocationPositionDynamics::yaw() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationPositionDynamics.yaw)
  return yaw_;
}
inline void PBGnssLocationPositionDynamics::set_yaw(float value) {
  
  yaw_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationPositionDynamics.yaw)
}

// float yawUnc = 19;
inline void PBGnssLocationPositionDynamics::clear_yawunc() {
  yawunc_ = 0;
}
inline float PBGnssLocationPositionDynamics::yawunc() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationPositionDynamics.yawUnc)
  return yawunc_;
}
inline void PBGnssLocationPositionDynamics::set_yawunc(float value) {
  
  yawunc_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationPositionDynamics.yawUnc)
}

// -------------------------------------------------------------------

// PBGnssSvUsedInPosition

// uint64 gps_sv_used_ids_mask = 1;
inline void PBGnssSvUsedInPosition::clear_gps_sv_used_ids_mask() {
  gps_sv_used_ids_mask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvUsedInPosition::gps_sv_used_ids_mask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvUsedInPosition.gps_sv_used_ids_mask)
  return gps_sv_used_ids_mask_;
}
inline void PBGnssSvUsedInPosition::set_gps_sv_used_ids_mask(::google::protobuf::uint64 value) {
  
  gps_sv_used_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvUsedInPosition.gps_sv_used_ids_mask)
}

// uint64 glo_sv_used_ids_mask = 2;
inline void PBGnssSvUsedInPosition::clear_glo_sv_used_ids_mask() {
  glo_sv_used_ids_mask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvUsedInPosition::glo_sv_used_ids_mask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvUsedInPosition.glo_sv_used_ids_mask)
  return glo_sv_used_ids_mask_;
}
inline void PBGnssSvUsedInPosition::set_glo_sv_used_ids_mask(::google::protobuf::uint64 value) {
  
  glo_sv_used_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvUsedInPosition.glo_sv_used_ids_mask)
}

// uint64 gal_sv_used_ids_mask = 3;
inline void PBGnssSvUsedInPosition::clear_gal_sv_used_ids_mask() {
  gal_sv_used_ids_mask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvUsedInPosition::gal_sv_used_ids_mask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvUsedInPosition.gal_sv_used_ids_mask)
  return gal_sv_used_ids_mask_;
}
inline void PBGnssSvUsedInPosition::set_gal_sv_used_ids_mask(::google::protobuf::uint64 value) {
  
  gal_sv_used_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvUsedInPosition.gal_sv_used_ids_mask)
}

// uint64 bds_sv_used_ids_mask = 4;
inline void PBGnssSvUsedInPosition::clear_bds_sv_used_ids_mask() {
  bds_sv_used_ids_mask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvUsedInPosition::bds_sv_used_ids_mask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvUsedInPosition.bds_sv_used_ids_mask)
  return bds_sv_used_ids_mask_;
}
inline void PBGnssSvUsedInPosition::set_bds_sv_used_ids_mask(::google::protobuf::uint64 value) {
  
  bds_sv_used_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvUsedInPosition.bds_sv_used_ids_mask)
}

// uint64 qzss_sv_used_ids_mask = 5;
inline void PBGnssSvUsedInPosition::clear_qzss_sv_used_ids_mask() {
  qzss_sv_used_ids_mask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvUsedInPosition::qzss_sv_used_ids_mask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvUsedInPosition.qzss_sv_used_ids_mask)
  return qzss_sv_used_ids_mask_;
}
inline void PBGnssSvUsedInPosition::set_qzss_sv_used_ids_mask(::google::protobuf::uint64 value) {
  
  qzss_sv_used_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvUsedInPosition.qzss_sv_used_ids_mask)
}

// -------------------------------------------------------------------

// PBGnssSvMbUsedInPosition

// uint64 gps_l1ca_sv_used_ids_mask = 1;
inline void PBGnssSvMbUsedInPosition::clear_gps_l1ca_sv_used_ids_mask() {
  gps_l1ca_sv_used_ids_mask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvMbUsedInPosition::gps_l1ca_sv_used_ids_mask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMbUsedInPosition.gps_l1ca_sv_used_ids_mask)
  return gps_l1ca_sv_used_ids_mask_;
}
inline void PBGnssSvMbUsedInPosition::set_gps_l1ca_sv_used_ids_mask(::google::protobuf::uint64 value) {
  
  gps_l1ca_sv_used_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMbUsedInPosition.gps_l1ca_sv_used_ids_mask)
}

// uint64 gps_l1c_sv_used_ids_mask = 2;
inline void PBGnssSvMbUsedInPosition::clear_gps_l1c_sv_used_ids_mask() {
  gps_l1c_sv_used_ids_mask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvMbUsedInPosition::gps_l1c_sv_used_ids_mask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMbUsedInPosition.gps_l1c_sv_used_ids_mask)
  return gps_l1c_sv_used_ids_mask_;
}
inline void PBGnssSvMbUsedInPosition::set_gps_l1c_sv_used_ids_mask(::google::protobuf::uint64 value) {
  
  gps_l1c_sv_used_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMbUsedInPosition.gps_l1c_sv_used_ids_mask)
}

// uint64 gps_l2_sv_used_ids_mask = 3;
inline void PBGnssSvMbUsedInPosition::clear_gps_l2_sv_used_ids_mask() {
  gps_l2_sv_used_ids_mask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvMbUsedInPosition::gps_l2_sv_used_ids_mask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMbUsedInPosition.gps_l2_sv_used_ids_mask)
  return gps_l2_sv_used_ids_mask_;
}
inline void PBGnssSvMbUsedInPosition::set_gps_l2_sv_used_ids_mask(::google::protobuf::uint64 value) {
  
  gps_l2_sv_used_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMbUsedInPosition.gps_l2_sv_used_ids_mask)
}

// uint64 gps_l5_sv_used_ids_mask = 4;
inline void PBGnssSvMbUsedInPosition::clear_gps_l5_sv_used_ids_mask() {
  gps_l5_sv_used_ids_mask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvMbUsedInPosition::gps_l5_sv_used_ids_mask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMbUsedInPosition.gps_l5_sv_used_ids_mask)
  return gps_l5_sv_used_ids_mask_;
}
inline void PBGnssSvMbUsedInPosition::set_gps_l5_sv_used_ids_mask(::google::protobuf::uint64 value) {
  
  gps_l5_sv_used_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMbUsedInPosition.gps_l5_sv_used_ids_mask)
}

// uint64 glo_g1_sv_used_ids_mask = 5;
inline void PBGnssSvMbUsedInPosition::clear_glo_g1_sv_used_ids_mask() {
  glo_g1_sv_used_ids_mask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvMbUsedInPosition::glo_g1_sv_used_ids_mask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMbUsedInPosition.glo_g1_sv_used_ids_mask)
  return glo_g1_sv_used_ids_mask_;
}
inline void PBGnssSvMbUsedInPosition::set_glo_g1_sv_used_ids_mask(::google::protobuf::uint64 value) {
  
  glo_g1_sv_used_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMbUsedInPosition.glo_g1_sv_used_ids_mask)
}

// uint64 glo_g2_sv_used_ids_mask = 6;
inline void PBGnssSvMbUsedInPosition::clear_glo_g2_sv_used_ids_mask() {
  glo_g2_sv_used_ids_mask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvMbUsedInPosition::glo_g2_sv_used_ids_mask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMbUsedInPosition.glo_g2_sv_used_ids_mask)
  return glo_g2_sv_used_ids_mask_;
}
inline void PBGnssSvMbUsedInPosition::set_glo_g2_sv_used_ids_mask(::google::protobuf::uint64 value) {
  
  glo_g2_sv_used_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMbUsedInPosition.glo_g2_sv_used_ids_mask)
}

// uint64 gal_e1_sv_used_ids_mask = 7;
inline void PBGnssSvMbUsedInPosition::clear_gal_e1_sv_used_ids_mask() {
  gal_e1_sv_used_ids_mask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvMbUsedInPosition::gal_e1_sv_used_ids_mask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMbUsedInPosition.gal_e1_sv_used_ids_mask)
  return gal_e1_sv_used_ids_mask_;
}
inline void PBGnssSvMbUsedInPosition::set_gal_e1_sv_used_ids_mask(::google::protobuf::uint64 value) {
  
  gal_e1_sv_used_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMbUsedInPosition.gal_e1_sv_used_ids_mask)
}

// uint64 gal_e5a_sv_used_ids_mask = 8;
inline void PBGnssSvMbUsedInPosition::clear_gal_e5a_sv_used_ids_mask() {
  gal_e5a_sv_used_ids_mask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvMbUsedInPosition::gal_e5a_sv_used_ids_mask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMbUsedInPosition.gal_e5a_sv_used_ids_mask)
  return gal_e5a_sv_used_ids_mask_;
}
inline void PBGnssSvMbUsedInPosition::set_gal_e5a_sv_used_ids_mask(::google::protobuf::uint64 value) {
  
  gal_e5a_sv_used_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMbUsedInPosition.gal_e5a_sv_used_ids_mask)
}

// uint64 gal_e5b_sv_used_ids_mask = 9;
inline void PBGnssSvMbUsedInPosition::clear_gal_e5b_sv_used_ids_mask() {
  gal_e5b_sv_used_ids_mask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvMbUsedInPosition::gal_e5b_sv_used_ids_mask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMbUsedInPosition.gal_e5b_sv_used_ids_mask)
  return gal_e5b_sv_used_ids_mask_;
}
inline void PBGnssSvMbUsedInPosition::set_gal_e5b_sv_used_ids_mask(::google::protobuf::uint64 value) {
  
  gal_e5b_sv_used_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMbUsedInPosition.gal_e5b_sv_used_ids_mask)
}

// uint64 bds_b1i_sv_used_ids_mask = 10;
inline void PBGnssSvMbUsedInPosition::clear_bds_b1i_sv_used_ids_mask() {
  bds_b1i_sv_used_ids_mask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvMbUsedInPosition::bds_b1i_sv_used_ids_mask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMbUsedInPosition.bds_b1i_sv_used_ids_mask)
  return bds_b1i_sv_used_ids_mask_;
}
inline void PBGnssSvMbUsedInPosition::set_bds_b1i_sv_used_ids_mask(::google::protobuf::uint64 value) {
  
  bds_b1i_sv_used_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMbUsedInPosition.bds_b1i_sv_used_ids_mask)
}

// uint64 bds_b1c_sv_used_ids_mask = 11;
inline void PBGnssSvMbUsedInPosition::clear_bds_b1c_sv_used_ids_mask() {
  bds_b1c_sv_used_ids_mask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvMbUsedInPosition::bds_b1c_sv_used_ids_mask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMbUsedInPosition.bds_b1c_sv_used_ids_mask)
  return bds_b1c_sv_used_ids_mask_;
}
inline void PBGnssSvMbUsedInPosition::set_bds_b1c_sv_used_ids_mask(::google::protobuf::uint64 value) {
  
  bds_b1c_sv_used_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMbUsedInPosition.bds_b1c_sv_used_ids_mask)
}

// uint64 bds_b2i_sv_used_ids_mask = 12;
inline void PBGnssSvMbUsedInPosition::clear_bds_b2i_sv_used_ids_mask() {
  bds_b2i_sv_used_ids_mask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvMbUsedInPosition::bds_b2i_sv_used_ids_mask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMbUsedInPosition.bds_b2i_sv_used_ids_mask)
  return bds_b2i_sv_used_ids_mask_;
}
inline void PBGnssSvMbUsedInPosition::set_bds_b2i_sv_used_ids_mask(::google::protobuf::uint64 value) {
  
  bds_b2i_sv_used_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMbUsedInPosition.bds_b2i_sv_used_ids_mask)
}

// uint64 bds_b2ai_sv_used_ids_mask = 13;
inline void PBGnssSvMbUsedInPosition::clear_bds_b2ai_sv_used_ids_mask() {
  bds_b2ai_sv_used_ids_mask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvMbUsedInPosition::bds_b2ai_sv_used_ids_mask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMbUsedInPosition.bds_b2ai_sv_used_ids_mask)
  return bds_b2ai_sv_used_ids_mask_;
}
inline void PBGnssSvMbUsedInPosition::set_bds_b2ai_sv_used_ids_mask(::google::protobuf::uint64 value) {
  
  bds_b2ai_sv_used_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMbUsedInPosition.bds_b2ai_sv_used_ids_mask)
}

// uint64 qzss_l1ca_sv_used_ids_mask = 14;
inline void PBGnssSvMbUsedInPosition::clear_qzss_l1ca_sv_used_ids_mask() {
  qzss_l1ca_sv_used_ids_mask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvMbUsedInPosition::qzss_l1ca_sv_used_ids_mask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMbUsedInPosition.qzss_l1ca_sv_used_ids_mask)
  return qzss_l1ca_sv_used_ids_mask_;
}
inline void PBGnssSvMbUsedInPosition::set_qzss_l1ca_sv_used_ids_mask(::google::protobuf::uint64 value) {
  
  qzss_l1ca_sv_used_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMbUsedInPosition.qzss_l1ca_sv_used_ids_mask)
}

// uint64 qzss_l1s_sv_used_ids_mask = 15;
inline void PBGnssSvMbUsedInPosition::clear_qzss_l1s_sv_used_ids_mask() {
  qzss_l1s_sv_used_ids_mask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvMbUsedInPosition::qzss_l1s_sv_used_ids_mask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMbUsedInPosition.qzss_l1s_sv_used_ids_mask)
  return qzss_l1s_sv_used_ids_mask_;
}
inline void PBGnssSvMbUsedInPosition::set_qzss_l1s_sv_used_ids_mask(::google::protobuf::uint64 value) {
  
  qzss_l1s_sv_used_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMbUsedInPosition.qzss_l1s_sv_used_ids_mask)
}

// uint64 qzss_l2_sv_used_ids_mask = 16;
inline void PBGnssSvMbUsedInPosition::clear_qzss_l2_sv_used_ids_mask() {
  qzss_l2_sv_used_ids_mask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvMbUsedInPosition::qzss_l2_sv_used_ids_mask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMbUsedInPosition.qzss_l2_sv_used_ids_mask)
  return qzss_l2_sv_used_ids_mask_;
}
inline void PBGnssSvMbUsedInPosition::set_qzss_l2_sv_used_ids_mask(::google::protobuf::uint64 value) {
  
  qzss_l2_sv_used_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMbUsedInPosition.qzss_l2_sv_used_ids_mask)
}

// uint64 qzss_l5_sv_used_ids_mask = 17;
inline void PBGnssSvMbUsedInPosition::clear_qzss_l5_sv_used_ids_mask() {
  qzss_l5_sv_used_ids_mask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvMbUsedInPosition::qzss_l5_sv_used_ids_mask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMbUsedInPosition.qzss_l5_sv_used_ids_mask)
  return qzss_l5_sv_used_ids_mask_;
}
inline void PBGnssSvMbUsedInPosition::set_qzss_l5_sv_used_ids_mask(::google::protobuf::uint64 value) {
  
  qzss_l5_sv_used_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMbUsedInPosition.qzss_l5_sv_used_ids_mask)
}

// uint64 sbas_l1_sv_used_ids_mask = 18;
inline void PBGnssSvMbUsedInPosition::clear_sbas_l1_sv_used_ids_mask() {
  sbas_l1_sv_used_ids_mask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvMbUsedInPosition::sbas_l1_sv_used_ids_mask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMbUsedInPosition.sbas_l1_sv_used_ids_mask)
  return sbas_l1_sv_used_ids_mask_;
}
inline void PBGnssSvMbUsedInPosition::set_sbas_l1_sv_used_ids_mask(::google::protobuf::uint64 value) {
  
  sbas_l1_sv_used_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMbUsedInPosition.sbas_l1_sv_used_ids_mask)
}

// uint64 bds_b2aq_sv_used_ids_mask = 19;
inline void PBGnssSvMbUsedInPosition::clear_bds_b2aq_sv_used_ids_mask() {
  bds_b2aq_sv_used_ids_mask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvMbUsedInPosition::bds_b2aq_sv_used_ids_mask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMbUsedInPosition.bds_b2aq_sv_used_ids_mask)
  return bds_b2aq_sv_used_ids_mask_;
}
inline void PBGnssSvMbUsedInPosition::set_bds_b2aq_sv_used_ids_mask(::google::protobuf::uint64 value) {
  
  bds_b2aq_sv_used_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMbUsedInPosition.bds_b2aq_sv_used_ids_mask)
}

// -------------------------------------------------------------------

// PBTimespec

// uint32 tv_sec = 1;
inline void PBTimespec::clear_tv_sec() {
  tv_sec_ = 0u;
}
inline ::google::protobuf::uint32 PBTimespec::tv_sec() const {
  // @@protoc_insertion_point(field_get:PBTimespec.tv_sec)
  return tv_sec_;
}
inline void PBTimespec::set_tv_sec(::google::protobuf::uint32 value) {
  
  tv_sec_ = value;
  // @@protoc_insertion_point(field_set:PBTimespec.tv_sec)
}

// uint32 tv_nsec = 2;
inline void PBTimespec::clear_tv_nsec() {
  tv_nsec_ = 0u;
}
inline ::google::protobuf::uint32 PBTimespec::tv_nsec() const {
  // @@protoc_insertion_point(field_get:PBTimespec.tv_nsec)
  return tv_nsec_;
}
inline void PBTimespec::set_tv_nsec(::google::protobuf::uint32 value) {
  
  tv_nsec_ = value;
  // @@protoc_insertion_point(field_set:PBTimespec.tv_nsec)
}

// -------------------------------------------------------------------

// PBLeapSecondInfo

// uint32 leapSec = 1;
inline void PBLeapSecondInfo::clear_leapsec() {
  leapsec_ = 0u;
}
inline ::google::protobuf::uint32 PBLeapSecondInfo::leapsec() const {
  // @@protoc_insertion_point(field_get:PBLeapSecondInfo.leapSec)
  return leapsec_;
}
inline void PBLeapSecondInfo::set_leapsec(::google::protobuf::uint32 value) {
  
  leapsec_ = value;
  // @@protoc_insertion_point(field_set:PBLeapSecondInfo.leapSec)
}

// uint32 leapSecUnc = 2;
inline void PBLeapSecondInfo::clear_leapsecunc() {
  leapsecunc_ = 0u;
}
inline ::google::protobuf::uint32 PBLeapSecondInfo::leapsecunc() const {
  // @@protoc_insertion_point(field_get:PBLeapSecondInfo.leapSecUnc)
  return leapsecunc_;
}
inline void PBLeapSecondInfo::set_leapsecunc(::google::protobuf::uint32 value) {
  
  leapsecunc_ = value;
  // @@protoc_insertion_point(field_set:PBLeapSecondInfo.leapSecUnc)
}

// -------------------------------------------------------------------

// PBApTimeStampStructType

// .PBTimespec apTimeStamp = 1;
inline bool PBApTimeStampStructType::has_aptimestamp() const {
  return this != internal_default_instance() && aptimestamp_ != NULL;
}
inline void PBApTimeStampStructType::clear_aptimestamp() {
  if (GetArenaNoVirtual() == NULL && aptimestamp_ != NULL) delete aptimestamp_;
  aptimestamp_ = NULL;
}
inline const ::PBTimespec& PBApTimeStampStructType::aptimestamp() const {
  // @@protoc_insertion_point(field_get:PBApTimeStampStructType.apTimeStamp)
  return aptimestamp_ != NULL ? *aptimestamp_
                         : *::PBTimespec::internal_default_instance();
}
inline ::PBTimespec* PBApTimeStampStructType::mutable_aptimestamp() {
  
  if (aptimestamp_ == NULL) {
    aptimestamp_ = new ::PBTimespec;
  }
  // @@protoc_insertion_point(field_mutable:PBApTimeStampStructType.apTimeStamp)
  return aptimestamp_;
}
inline ::PBTimespec* PBApTimeStampStructType::release_aptimestamp() {
  // @@protoc_insertion_point(field_release:PBApTimeStampStructType.apTimeStamp)
  
  ::PBTimespec* temp = aptimestamp_;
  aptimestamp_ = NULL;
  return temp;
}
inline void PBApTimeStampStructType::set_allocated_aptimestamp(::PBTimespec* aptimestamp) {
  delete aptimestamp_;
  aptimestamp_ = aptimestamp;
  if (aptimestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBApTimeStampStructType.apTimeStamp)
}

// float apTimeStampUncMs = 2;
inline void PBApTimeStampStructType::clear_aptimestampuncms() {
  aptimestampuncms_ = 0;
}
inline float PBApTimeStampStructType::aptimestampuncms() const {
  // @@protoc_insertion_point(field_get:PBApTimeStampStructType.apTimeStampUncMs)
  return aptimestampuncms_;
}
inline void PBApTimeStampStructType::set_aptimestampuncms(float value) {
  
  aptimestampuncms_ = value;
  // @@protoc_insertion_point(field_set:PBApTimeStampStructType.apTimeStampUncMs)
}

// -------------------------------------------------------------------

// PBLocRcvrClockFreqInfo

// float clockDrift = 1;
inline void PBLocRcvrClockFreqInfo::clear_clockdrift() {
  clockdrift_ = 0;
}
inline float PBLocRcvrClockFreqInfo::clockdrift() const {
  // @@protoc_insertion_point(field_get:PBLocRcvrClockFreqInfo.clockDrift)
  return clockdrift_;
}
inline void PBLocRcvrClockFreqInfo::set_clockdrift(float value) {
  
  clockdrift_ = value;
  // @@protoc_insertion_point(field_set:PBLocRcvrClockFreqInfo.clockDrift)
}

// float clockDriftUnc = 2;
inline void PBLocRcvrClockFreqInfo::clear_clockdriftunc() {
  clockdriftunc_ = 0;
}
inline float PBLocRcvrClockFreqInfo::clockdriftunc() const {
  // @@protoc_insertion_point(field_get:PBLocRcvrClockFreqInfo.clockDriftUnc)
  return clockdriftunc_;
}
inline void PBLocRcvrClockFreqInfo::set_clockdriftunc(float value) {
  
  clockdriftunc_ = value;
  // @@protoc_insertion_point(field_set:PBLocRcvrClockFreqInfo.clockDriftUnc)
}

// .PBLocSourceofFreqEnumType sourceOfFreq = 3;
inline void PBLocRcvrClockFreqInfo::clear_sourceoffreq() {
  sourceoffreq_ = 0;
}
inline ::PBLocSourceofFreqEnumType PBLocRcvrClockFreqInfo::sourceoffreq() const {
  // @@protoc_insertion_point(field_get:PBLocRcvrClockFreqInfo.sourceOfFreq)
  return static_cast< ::PBLocSourceofFreqEnumType >(sourceoffreq_);
}
inline void PBLocRcvrClockFreqInfo::set_sourceoffreq(::PBLocSourceofFreqEnumType value) {
  
  sourceoffreq_ = value;
  // @@protoc_insertion_point(field_set:PBLocRcvrClockFreqInfo.sourceOfFreq)
}

// -------------------------------------------------------------------

// PBGnssInterSystemBias

// uint32 validMask = 1;
inline void PBGnssInterSystemBias::clear_validmask() {
  validmask_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssInterSystemBias::validmask() const {
  // @@protoc_insertion_point(field_get:PBGnssInterSystemBias.validMask)
  return validmask_;
}
inline void PBGnssInterSystemBias::set_validmask(::google::protobuf::uint32 value) {
  
  validmask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssInterSystemBias.validMask)
}

// float timeBias = 2;
inline void PBGnssInterSystemBias::clear_timebias() {
  timebias_ = 0;
}
inline float PBGnssInterSystemBias::timebias() const {
  // @@protoc_insertion_point(field_get:PBGnssInterSystemBias.timeBias)
  return timebias_;
}
inline void PBGnssInterSystemBias::set_timebias(float value) {
  
  timebias_ = value;
  // @@protoc_insertion_point(field_set:PBGnssInterSystemBias.timeBias)
}

// float timeBiasUnc = 3;
inline void PBGnssInterSystemBias::clear_timebiasunc() {
  timebiasunc_ = 0;
}
inline float PBGnssInterSystemBias::timebiasunc() const {
  // @@protoc_insertion_point(field_get:PBGnssInterSystemBias.timeBiasUnc)
  return timebiasunc_;
}
inline void PBGnssInterSystemBias::set_timebiasunc(float value) {
  
  timebiasunc_ = value;
  // @@protoc_insertion_point(field_set:PBGnssInterSystemBias.timeBiasUnc)
}

// -------------------------------------------------------------------

// PBGnssSystemTimeStructType

// uint32 validityMask = 1;
inline void PBGnssSystemTimeStructType::clear_validitymask() {
  validitymask_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssSystemTimeStructType::validitymask() const {
  // @@protoc_insertion_point(field_get:PBGnssSystemTimeStructType.validityMask)
  return validitymask_;
}
inline void PBGnssSystemTimeStructType::set_validitymask(::google::protobuf::uint32 value) {
  
  validitymask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSystemTimeStructType.validityMask)
}

// uint32 systemWeek = 2;
inline void PBGnssSystemTimeStructType::clear_systemweek() {
  systemweek_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssSystemTimeStructType::systemweek() const {
  // @@protoc_insertion_point(field_get:PBGnssSystemTimeStructType.systemWeek)
  return systemweek_;
}
inline void PBGnssSystemTimeStructType::set_systemweek(::google::protobuf::uint32 value) {
  
  systemweek_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSystemTimeStructType.systemWeek)
}

// uint32 systemMsec = 3;
inline void PBGnssSystemTimeStructType::clear_systemmsec() {
  systemmsec_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssSystemTimeStructType::systemmsec() const {
  // @@protoc_insertion_point(field_get:PBGnssSystemTimeStructType.systemMsec)
  return systemmsec_;
}
inline void PBGnssSystemTimeStructType::set_systemmsec(::google::protobuf::uint32 value) {
  
  systemmsec_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSystemTimeStructType.systemMsec)
}

// float systemClkTimeBias = 4;
inline void PBGnssSystemTimeStructType::clear_systemclktimebias() {
  systemclktimebias_ = 0;
}
inline float PBGnssSystemTimeStructType::systemclktimebias() const {
  // @@protoc_insertion_point(field_get:PBGnssSystemTimeStructType.systemClkTimeBias)
  return systemclktimebias_;
}
inline void PBGnssSystemTimeStructType::set_systemclktimebias(float value) {
  
  systemclktimebias_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSystemTimeStructType.systemClkTimeBias)
}

// float systemClkTimeUncMs = 5;
inline void PBGnssSystemTimeStructType::clear_systemclktimeuncms() {
  systemclktimeuncms_ = 0;
}
inline float PBGnssSystemTimeStructType::systemclktimeuncms() const {
  // @@protoc_insertion_point(field_get:PBGnssSystemTimeStructType.systemClkTimeUncMs)
  return systemclktimeuncms_;
}
inline void PBGnssSystemTimeStructType::set_systemclktimeuncms(float value) {
  
  systemclktimeuncms_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSystemTimeStructType.systemClkTimeUncMs)
}

// uint32 refFCount = 6;
inline void PBGnssSystemTimeStructType::clear_reffcount() {
  reffcount_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssSystemTimeStructType::reffcount() const {
  // @@protoc_insertion_point(field_get:PBGnssSystemTimeStructType.refFCount)
  return reffcount_;
}
inline void PBGnssSystemTimeStructType::set_reffcount(::google::protobuf::uint32 value) {
  
  reffcount_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSystemTimeStructType.refFCount)
}

// uint32 numClockResets = 7;
inline void PBGnssSystemTimeStructType::clear_numclockresets() {
  numclockresets_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssSystemTimeStructType::numclockresets() const {
  // @@protoc_insertion_point(field_get:PBGnssSystemTimeStructType.numClockResets)
  return numclockresets_;
}
inline void PBGnssSystemTimeStructType::set_numclockresets(::google::protobuf::uint32 value) {
  
  numclockresets_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSystemTimeStructType.numClockResets)
}

// -------------------------------------------------------------------

// PBGnssGloTimeStructType

// uint32 gloDays = 1;
inline void PBGnssGloTimeStructType::clear_glodays() {
  glodays_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssGloTimeStructType::glodays() const {
  // @@protoc_insertion_point(field_get:PBGnssGloTimeStructType.gloDays)
  return glodays_;
}
inline void PBGnssGloTimeStructType::set_glodays(::google::protobuf::uint32 value) {
  
  glodays_ = value;
  // @@protoc_insertion_point(field_set:PBGnssGloTimeStructType.gloDays)
}

// uint32 validityMask = 2;
inline void PBGnssGloTimeStructType::clear_validitymask() {
  validitymask_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssGloTimeStructType::validitymask() const {
  // @@protoc_insertion_point(field_get:PBGnssGloTimeStructType.validityMask)
  return validitymask_;
}
inline void PBGnssGloTimeStructType::set_validitymask(::google::protobuf::uint32 value) {
  
  validitymask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssGloTimeStructType.validityMask)
}

// uint32 gloMsec = 3;
inline void PBGnssGloTimeStructType::clear_glomsec() {
  glomsec_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssGloTimeStructType::glomsec() const {
  // @@protoc_insertion_point(field_get:PBGnssGloTimeStructType.gloMsec)
  return glomsec_;
}
inline void PBGnssGloTimeStructType::set_glomsec(::google::protobuf::uint32 value) {
  
  glomsec_ = value;
  // @@protoc_insertion_point(field_set:PBGnssGloTimeStructType.gloMsec)
}

// float gloClkTimeBias = 4;
inline void PBGnssGloTimeStructType::clear_gloclktimebias() {
  gloclktimebias_ = 0;
}
inline float PBGnssGloTimeStructType::gloclktimebias() const {
  // @@protoc_insertion_point(field_get:PBGnssGloTimeStructType.gloClkTimeBias)
  return gloclktimebias_;
}
inline void PBGnssGloTimeStructType::set_gloclktimebias(float value) {
  
  gloclktimebias_ = value;
  // @@protoc_insertion_point(field_set:PBGnssGloTimeStructType.gloClkTimeBias)
}

// float gloClkTimeUncMs = 5;
inline void PBGnssGloTimeStructType::clear_gloclktimeuncms() {
  gloclktimeuncms_ = 0;
}
inline float PBGnssGloTimeStructType::gloclktimeuncms() const {
  // @@protoc_insertion_point(field_get:PBGnssGloTimeStructType.gloClkTimeUncMs)
  return gloclktimeuncms_;
}
inline void PBGnssGloTimeStructType::set_gloclktimeuncms(float value) {
  
  gloclktimeuncms_ = value;
  // @@protoc_insertion_point(field_set:PBGnssGloTimeStructType.gloClkTimeUncMs)
}

// uint32 refFCount = 6;
inline void PBGnssGloTimeStructType::clear_reffcount() {
  reffcount_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssGloTimeStructType::reffcount() const {
  // @@protoc_insertion_point(field_get:PBGnssGloTimeStructType.refFCount)
  return reffcount_;
}
inline void PBGnssGloTimeStructType::set_reffcount(::google::protobuf::uint32 value) {
  
  reffcount_ = value;
  // @@protoc_insertion_point(field_set:PBGnssGloTimeStructType.refFCount)
}

// uint32 numClockResets = 7;
inline void PBGnssGloTimeStructType::clear_numclockresets() {
  numclockresets_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssGloTimeStructType::numclockresets() const {
  // @@protoc_insertion_point(field_get:PBGnssGloTimeStructType.numClockResets)
  return numclockresets_;
}
inline void PBGnssGloTimeStructType::set_numclockresets(::google::protobuf::uint32 value) {
  
  numclockresets_ = value;
  // @@protoc_insertion_point(field_set:PBGnssGloTimeStructType.numClockResets)
}

// uint32 gloFourYear = 8;
inline void PBGnssGloTimeStructType::clear_glofouryear() {
  glofouryear_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssGloTimeStructType::glofouryear() const {
  // @@protoc_insertion_point(field_get:PBGnssGloTimeStructType.gloFourYear)
  return glofouryear_;
}
inline void PBGnssGloTimeStructType::set_glofouryear(::google::protobuf::uint32 value) {
  
  glofouryear_ = value;
  // @@protoc_insertion_point(field_set:PBGnssGloTimeStructType.gloFourYear)
}

// -------------------------------------------------------------------

// PBLocGnssTimeExtInfo

// bool systemRtcValid = 1;
inline void PBLocGnssTimeExtInfo::clear_systemrtcvalid() {
  systemrtcvalid_ = false;
}
inline bool PBLocGnssTimeExtInfo::systemrtcvalid() const {
  // @@protoc_insertion_point(field_get:PBLocGnssTimeExtInfo.systemRtcValid)
  return systemrtcvalid_;
}
inline void PBLocGnssTimeExtInfo::set_systemrtcvalid(bool value) {
  
  systemrtcvalid_ = value;
  // @@protoc_insertion_point(field_set:PBLocGnssTimeExtInfo.systemRtcValid)
}

// uint64 systemRtcMs = 2;
inline void PBLocGnssTimeExtInfo::clear_systemrtcms() {
  systemrtcms_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBLocGnssTimeExtInfo::systemrtcms() const {
  // @@protoc_insertion_point(field_get:PBLocGnssTimeExtInfo.systemRtcMs)
  return systemrtcms_;
}
inline void PBLocGnssTimeExtInfo::set_systemrtcms(::google::protobuf::uint64 value) {
  
  systemrtcms_ = value;
  // @@protoc_insertion_point(field_set:PBLocGnssTimeExtInfo.systemRtcMs)
}

// -------------------------------------------------------------------

// PBGnssSvMeasurementHeader

// uint64 flags = 1;
inline void PBGnssSvMeasurementHeader::clear_flags() {
  flags_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvMeasurementHeader::flags() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.flags)
  return flags_;
}
inline void PBGnssSvMeasurementHeader::set_flags(::google::protobuf::uint64 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMeasurementHeader.flags)
}

// .PBLeapSecondInfo leapSec = 2;
inline bool PBGnssSvMeasurementHeader::has_leapsec() const {
  return this != internal_default_instance() && leapsec_ != NULL;
}
inline void PBGnssSvMeasurementHeader::clear_leapsec() {
  if (GetArenaNoVirtual() == NULL && leapsec_ != NULL) delete leapsec_;
  leapsec_ = NULL;
}
inline const ::PBLeapSecondInfo& PBGnssSvMeasurementHeader::leapsec() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.leapSec)
  return leapsec_ != NULL ? *leapsec_
                         : *::PBLeapSecondInfo::internal_default_instance();
}
inline ::PBLeapSecondInfo* PBGnssSvMeasurementHeader::mutable_leapsec() {
  
  if (leapsec_ == NULL) {
    leapsec_ = new ::PBLeapSecondInfo;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvMeasurementHeader.leapSec)
  return leapsec_;
}
inline ::PBLeapSecondInfo* PBGnssSvMeasurementHeader::release_leapsec() {
  // @@protoc_insertion_point(field_release:PBGnssSvMeasurementHeader.leapSec)
  
  ::PBLeapSecondInfo* temp = leapsec_;
  leapsec_ = NULL;
  return temp;
}
inline void PBGnssSvMeasurementHeader::set_allocated_leapsec(::PBLeapSecondInfo* leapsec) {
  delete leapsec_;
  leapsec_ = leapsec;
  if (leapsec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvMeasurementHeader.leapSec)
}

// .PBLocRcvrClockFreqInfo clockFreq = 3;
inline bool PBGnssSvMeasurementHeader::has_clockfreq() const {
  return this != internal_default_instance() && clockfreq_ != NULL;
}
inline void PBGnssSvMeasurementHeader::clear_clockfreq() {
  if (GetArenaNoVirtual() == NULL && clockfreq_ != NULL) delete clockfreq_;
  clockfreq_ = NULL;
}
inline const ::PBLocRcvrClockFreqInfo& PBGnssSvMeasurementHeader::clockfreq() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.clockFreq)
  return clockfreq_ != NULL ? *clockfreq_
                         : *::PBLocRcvrClockFreqInfo::internal_default_instance();
}
inline ::PBLocRcvrClockFreqInfo* PBGnssSvMeasurementHeader::mutable_clockfreq() {
  
  if (clockfreq_ == NULL) {
    clockfreq_ = new ::PBLocRcvrClockFreqInfo;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvMeasurementHeader.clockFreq)
  return clockfreq_;
}
inline ::PBLocRcvrClockFreqInfo* PBGnssSvMeasurementHeader::release_clockfreq() {
  // @@protoc_insertion_point(field_release:PBGnssSvMeasurementHeader.clockFreq)
  
  ::PBLocRcvrClockFreqInfo* temp = clockfreq_;
  clockfreq_ = NULL;
  return temp;
}
inline void PBGnssSvMeasurementHeader::set_allocated_clockfreq(::PBLocRcvrClockFreqInfo* clockfreq) {
  delete clockfreq_;
  clockfreq_ = clockfreq;
  if (clockfreq) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvMeasurementHeader.clockFreq)
}

// .PBApTimeStampStructType apBootTimeStamp = 4;
inline bool PBGnssSvMeasurementHeader::has_apboottimestamp() const {
  return this != internal_default_instance() && apboottimestamp_ != NULL;
}
inline void PBGnssSvMeasurementHeader::clear_apboottimestamp() {
  if (GetArenaNoVirtual() == NULL && apboottimestamp_ != NULL) delete apboottimestamp_;
  apboottimestamp_ = NULL;
}
inline const ::PBApTimeStampStructType& PBGnssSvMeasurementHeader::apboottimestamp() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.apBootTimeStamp)
  return apboottimestamp_ != NULL ? *apboottimestamp_
                         : *::PBApTimeStampStructType::internal_default_instance();
}
inline ::PBApTimeStampStructType* PBGnssSvMeasurementHeader::mutable_apboottimestamp() {
  
  if (apboottimestamp_ == NULL) {
    apboottimestamp_ = new ::PBApTimeStampStructType;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvMeasurementHeader.apBootTimeStamp)
  return apboottimestamp_;
}
inline ::PBApTimeStampStructType* PBGnssSvMeasurementHeader::release_apboottimestamp() {
  // @@protoc_insertion_point(field_release:PBGnssSvMeasurementHeader.apBootTimeStamp)
  
  ::PBApTimeStampStructType* temp = apboottimestamp_;
  apboottimestamp_ = NULL;
  return temp;
}
inline void PBGnssSvMeasurementHeader::set_allocated_apboottimestamp(::PBApTimeStampStructType* apboottimestamp) {
  delete apboottimestamp_;
  apboottimestamp_ = apboottimestamp;
  if (apboottimestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvMeasurementHeader.apBootTimeStamp)
}

// .PBGnssInterSystemBias gpsGloInterSystemBias = 5;
inline bool PBGnssSvMeasurementHeader::has_gpsglointersystembias() const {
  return this != internal_default_instance() && gpsglointersystembias_ != NULL;
}
inline void PBGnssSvMeasurementHeader::clear_gpsglointersystembias() {
  if (GetArenaNoVirtual() == NULL && gpsglointersystembias_ != NULL) delete gpsglointersystembias_;
  gpsglointersystembias_ = NULL;
}
inline const ::PBGnssInterSystemBias& PBGnssSvMeasurementHeader::gpsglointersystembias() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.gpsGloInterSystemBias)
  return gpsglointersystembias_ != NULL ? *gpsglointersystembias_
                         : *::PBGnssInterSystemBias::internal_default_instance();
}
inline ::PBGnssInterSystemBias* PBGnssSvMeasurementHeader::mutable_gpsglointersystembias() {
  
  if (gpsglointersystembias_ == NULL) {
    gpsglointersystembias_ = new ::PBGnssInterSystemBias;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvMeasurementHeader.gpsGloInterSystemBias)
  return gpsglointersystembias_;
}
inline ::PBGnssInterSystemBias* PBGnssSvMeasurementHeader::release_gpsglointersystembias() {
  // @@protoc_insertion_point(field_release:PBGnssSvMeasurementHeader.gpsGloInterSystemBias)
  
  ::PBGnssInterSystemBias* temp = gpsglointersystembias_;
  gpsglointersystembias_ = NULL;
  return temp;
}
inline void PBGnssSvMeasurementHeader::set_allocated_gpsglointersystembias(::PBGnssInterSystemBias* gpsglointersystembias) {
  delete gpsglointersystembias_;
  gpsglointersystembias_ = gpsglointersystembias;
  if (gpsglointersystembias) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvMeasurementHeader.gpsGloInterSystemBias)
}

// .PBGnssInterSystemBias gpsBdsInterSystemBias = 6;
inline bool PBGnssSvMeasurementHeader::has_gpsbdsintersystembias() const {
  return this != internal_default_instance() && gpsbdsintersystembias_ != NULL;
}
inline void PBGnssSvMeasurementHeader::clear_gpsbdsintersystembias() {
  if (GetArenaNoVirtual() == NULL && gpsbdsintersystembias_ != NULL) delete gpsbdsintersystembias_;
  gpsbdsintersystembias_ = NULL;
}
inline const ::PBGnssInterSystemBias& PBGnssSvMeasurementHeader::gpsbdsintersystembias() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.gpsBdsInterSystemBias)
  return gpsbdsintersystembias_ != NULL ? *gpsbdsintersystembias_
                         : *::PBGnssInterSystemBias::internal_default_instance();
}
inline ::PBGnssInterSystemBias* PBGnssSvMeasurementHeader::mutable_gpsbdsintersystembias() {
  
  if (gpsbdsintersystembias_ == NULL) {
    gpsbdsintersystembias_ = new ::PBGnssInterSystemBias;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvMeasurementHeader.gpsBdsInterSystemBias)
  return gpsbdsintersystembias_;
}
inline ::PBGnssInterSystemBias* PBGnssSvMeasurementHeader::release_gpsbdsintersystembias() {
  // @@protoc_insertion_point(field_release:PBGnssSvMeasurementHeader.gpsBdsInterSystemBias)
  
  ::PBGnssInterSystemBias* temp = gpsbdsintersystembias_;
  gpsbdsintersystembias_ = NULL;
  return temp;
}
inline void PBGnssSvMeasurementHeader::set_allocated_gpsbdsintersystembias(::PBGnssInterSystemBias* gpsbdsintersystembias) {
  delete gpsbdsintersystembias_;
  gpsbdsintersystembias_ = gpsbdsintersystembias;
  if (gpsbdsintersystembias) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvMeasurementHeader.gpsBdsInterSystemBias)
}

// .PBGnssInterSystemBias gpsGalInterSystemBias = 7;
inline bool PBGnssSvMeasurementHeader::has_gpsgalintersystembias() const {
  return this != internal_default_instance() && gpsgalintersystembias_ != NULL;
}
inline void PBGnssSvMeasurementHeader::clear_gpsgalintersystembias() {
  if (GetArenaNoVirtual() == NULL && gpsgalintersystembias_ != NULL) delete gpsgalintersystembias_;
  gpsgalintersystembias_ = NULL;
}
inline const ::PBGnssInterSystemBias& PBGnssSvMeasurementHeader::gpsgalintersystembias() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.gpsGalInterSystemBias)
  return gpsgalintersystembias_ != NULL ? *gpsgalintersystembias_
                         : *::PBGnssInterSystemBias::internal_default_instance();
}
inline ::PBGnssInterSystemBias* PBGnssSvMeasurementHeader::mutable_gpsgalintersystembias() {
  
  if (gpsgalintersystembias_ == NULL) {
    gpsgalintersystembias_ = new ::PBGnssInterSystemBias;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvMeasurementHeader.gpsGalInterSystemBias)
  return gpsgalintersystembias_;
}
inline ::PBGnssInterSystemBias* PBGnssSvMeasurementHeader::release_gpsgalintersystembias() {
  // @@protoc_insertion_point(field_release:PBGnssSvMeasurementHeader.gpsGalInterSystemBias)
  
  ::PBGnssInterSystemBias* temp = gpsgalintersystembias_;
  gpsgalintersystembias_ = NULL;
  return temp;
}
inline void PBGnssSvMeasurementHeader::set_allocated_gpsgalintersystembias(::PBGnssInterSystemBias* gpsgalintersystembias) {
  delete gpsgalintersystembias_;
  gpsgalintersystembias_ = gpsgalintersystembias;
  if (gpsgalintersystembias) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvMeasurementHeader.gpsGalInterSystemBias)
}

// .PBGnssInterSystemBias bdsGloInterSystemBias = 8;
inline bool PBGnssSvMeasurementHeader::has_bdsglointersystembias() const {
  return this != internal_default_instance() && bdsglointersystembias_ != NULL;
}
inline void PBGnssSvMeasurementHeader::clear_bdsglointersystembias() {
  if (GetArenaNoVirtual() == NULL && bdsglointersystembias_ != NULL) delete bdsglointersystembias_;
  bdsglointersystembias_ = NULL;
}
inline const ::PBGnssInterSystemBias& PBGnssSvMeasurementHeader::bdsglointersystembias() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.bdsGloInterSystemBias)
  return bdsglointersystembias_ != NULL ? *bdsglointersystembias_
                         : *::PBGnssInterSystemBias::internal_default_instance();
}
inline ::PBGnssInterSystemBias* PBGnssSvMeasurementHeader::mutable_bdsglointersystembias() {
  
  if (bdsglointersystembias_ == NULL) {
    bdsglointersystembias_ = new ::PBGnssInterSystemBias;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvMeasurementHeader.bdsGloInterSystemBias)
  return bdsglointersystembias_;
}
inline ::PBGnssInterSystemBias* PBGnssSvMeasurementHeader::release_bdsglointersystembias() {
  // @@protoc_insertion_point(field_release:PBGnssSvMeasurementHeader.bdsGloInterSystemBias)
  
  ::PBGnssInterSystemBias* temp = bdsglointersystembias_;
  bdsglointersystembias_ = NULL;
  return temp;
}
inline void PBGnssSvMeasurementHeader::set_allocated_bdsglointersystembias(::PBGnssInterSystemBias* bdsglointersystembias) {
  delete bdsglointersystembias_;
  bdsglointersystembias_ = bdsglointersystembias;
  if (bdsglointersystembias) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvMeasurementHeader.bdsGloInterSystemBias)
}

// .PBGnssInterSystemBias galGloInterSystemBias = 9;
inline bool PBGnssSvMeasurementHeader::has_galglointersystembias() const {
  return this != internal_default_instance() && galglointersystembias_ != NULL;
}
inline void PBGnssSvMeasurementHeader::clear_galglointersystembias() {
  if (GetArenaNoVirtual() == NULL && galglointersystembias_ != NULL) delete galglointersystembias_;
  galglointersystembias_ = NULL;
}
inline const ::PBGnssInterSystemBias& PBGnssSvMeasurementHeader::galglointersystembias() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.galGloInterSystemBias)
  return galglointersystembias_ != NULL ? *galglointersystembias_
                         : *::PBGnssInterSystemBias::internal_default_instance();
}
inline ::PBGnssInterSystemBias* PBGnssSvMeasurementHeader::mutable_galglointersystembias() {
  
  if (galglointersystembias_ == NULL) {
    galglointersystembias_ = new ::PBGnssInterSystemBias;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvMeasurementHeader.galGloInterSystemBias)
  return galglointersystembias_;
}
inline ::PBGnssInterSystemBias* PBGnssSvMeasurementHeader::release_galglointersystembias() {
  // @@protoc_insertion_point(field_release:PBGnssSvMeasurementHeader.galGloInterSystemBias)
  
  ::PBGnssInterSystemBias* temp = galglointersystembias_;
  galglointersystembias_ = NULL;
  return temp;
}
inline void PBGnssSvMeasurementHeader::set_allocated_galglointersystembias(::PBGnssInterSystemBias* galglointersystembias) {
  delete galglointersystembias_;
  galglointersystembias_ = galglointersystembias;
  if (galglointersystembias) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvMeasurementHeader.galGloInterSystemBias)
}

// .PBGnssInterSystemBias galBdsInterSystemBias = 10;
inline bool PBGnssSvMeasurementHeader::has_galbdsintersystembias() const {
  return this != internal_default_instance() && galbdsintersystembias_ != NULL;
}
inline void PBGnssSvMeasurementHeader::clear_galbdsintersystembias() {
  if (GetArenaNoVirtual() == NULL && galbdsintersystembias_ != NULL) delete galbdsintersystembias_;
  galbdsintersystembias_ = NULL;
}
inline const ::PBGnssInterSystemBias& PBGnssSvMeasurementHeader::galbdsintersystembias() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.galBdsInterSystemBias)
  return galbdsintersystembias_ != NULL ? *galbdsintersystembias_
                         : *::PBGnssInterSystemBias::internal_default_instance();
}
inline ::PBGnssInterSystemBias* PBGnssSvMeasurementHeader::mutable_galbdsintersystembias() {
  
  if (galbdsintersystembias_ == NULL) {
    galbdsintersystembias_ = new ::PBGnssInterSystemBias;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvMeasurementHeader.galBdsInterSystemBias)
  return galbdsintersystembias_;
}
inline ::PBGnssInterSystemBias* PBGnssSvMeasurementHeader::release_galbdsintersystembias() {
  // @@protoc_insertion_point(field_release:PBGnssSvMeasurementHeader.galBdsInterSystemBias)
  
  ::PBGnssInterSystemBias* temp = galbdsintersystembias_;
  galbdsintersystembias_ = NULL;
  return temp;
}
inline void PBGnssSvMeasurementHeader::set_allocated_galbdsintersystembias(::PBGnssInterSystemBias* galbdsintersystembias) {
  delete galbdsintersystembias_;
  galbdsintersystembias_ = galbdsintersystembias;
  if (galbdsintersystembias) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvMeasurementHeader.galBdsInterSystemBias)
}

// .PBGnssInterSystemBias gpsL1L5TimeBias = 11;
inline bool PBGnssSvMeasurementHeader::has_gpsl1l5timebias() const {
  return this != internal_default_instance() && gpsl1l5timebias_ != NULL;
}
inline void PBGnssSvMeasurementHeader::clear_gpsl1l5timebias() {
  if (GetArenaNoVirtual() == NULL && gpsl1l5timebias_ != NULL) delete gpsl1l5timebias_;
  gpsl1l5timebias_ = NULL;
}
inline const ::PBGnssInterSystemBias& PBGnssSvMeasurementHeader::gpsl1l5timebias() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.gpsL1L5TimeBias)
  return gpsl1l5timebias_ != NULL ? *gpsl1l5timebias_
                         : *::PBGnssInterSystemBias::internal_default_instance();
}
inline ::PBGnssInterSystemBias* PBGnssSvMeasurementHeader::mutable_gpsl1l5timebias() {
  
  if (gpsl1l5timebias_ == NULL) {
    gpsl1l5timebias_ = new ::PBGnssInterSystemBias;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvMeasurementHeader.gpsL1L5TimeBias)
  return gpsl1l5timebias_;
}
inline ::PBGnssInterSystemBias* PBGnssSvMeasurementHeader::release_gpsl1l5timebias() {
  // @@protoc_insertion_point(field_release:PBGnssSvMeasurementHeader.gpsL1L5TimeBias)
  
  ::PBGnssInterSystemBias* temp = gpsl1l5timebias_;
  gpsl1l5timebias_ = NULL;
  return temp;
}
inline void PBGnssSvMeasurementHeader::set_allocated_gpsl1l5timebias(::PBGnssInterSystemBias* gpsl1l5timebias) {
  delete gpsl1l5timebias_;
  gpsl1l5timebias_ = gpsl1l5timebias;
  if (gpsl1l5timebias) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvMeasurementHeader.gpsL1L5TimeBias)
}

// .PBGnssInterSystemBias galE1E5aTimeBias = 12;
inline bool PBGnssSvMeasurementHeader::has_gale1e5atimebias() const {
  return this != internal_default_instance() && gale1e5atimebias_ != NULL;
}
inline void PBGnssSvMeasurementHeader::clear_gale1e5atimebias() {
  if (GetArenaNoVirtual() == NULL && gale1e5atimebias_ != NULL) delete gale1e5atimebias_;
  gale1e5atimebias_ = NULL;
}
inline const ::PBGnssInterSystemBias& PBGnssSvMeasurementHeader::gale1e5atimebias() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.galE1E5aTimeBias)
  return gale1e5atimebias_ != NULL ? *gale1e5atimebias_
                         : *::PBGnssInterSystemBias::internal_default_instance();
}
inline ::PBGnssInterSystemBias* PBGnssSvMeasurementHeader::mutable_gale1e5atimebias() {
  
  if (gale1e5atimebias_ == NULL) {
    gale1e5atimebias_ = new ::PBGnssInterSystemBias;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvMeasurementHeader.galE1E5aTimeBias)
  return gale1e5atimebias_;
}
inline ::PBGnssInterSystemBias* PBGnssSvMeasurementHeader::release_gale1e5atimebias() {
  // @@protoc_insertion_point(field_release:PBGnssSvMeasurementHeader.galE1E5aTimeBias)
  
  ::PBGnssInterSystemBias* temp = gale1e5atimebias_;
  gale1e5atimebias_ = NULL;
  return temp;
}
inline void PBGnssSvMeasurementHeader::set_allocated_gale1e5atimebias(::PBGnssInterSystemBias* gale1e5atimebias) {
  delete gale1e5atimebias_;
  gale1e5atimebias_ = gale1e5atimebias;
  if (gale1e5atimebias) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvMeasurementHeader.galE1E5aTimeBias)
}

// .PBGnssSystemTimeStructType gpsSystemTime = 13;
inline bool PBGnssSvMeasurementHeader::has_gpssystemtime() const {
  return this != internal_default_instance() && gpssystemtime_ != NULL;
}
inline void PBGnssSvMeasurementHeader::clear_gpssystemtime() {
  if (GetArenaNoVirtual() == NULL && gpssystemtime_ != NULL) delete gpssystemtime_;
  gpssystemtime_ = NULL;
}
inline const ::PBGnssSystemTimeStructType& PBGnssSvMeasurementHeader::gpssystemtime() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.gpsSystemTime)
  return gpssystemtime_ != NULL ? *gpssystemtime_
                         : *::PBGnssSystemTimeStructType::internal_default_instance();
}
inline ::PBGnssSystemTimeStructType* PBGnssSvMeasurementHeader::mutable_gpssystemtime() {
  
  if (gpssystemtime_ == NULL) {
    gpssystemtime_ = new ::PBGnssSystemTimeStructType;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvMeasurementHeader.gpsSystemTime)
  return gpssystemtime_;
}
inline ::PBGnssSystemTimeStructType* PBGnssSvMeasurementHeader::release_gpssystemtime() {
  // @@protoc_insertion_point(field_release:PBGnssSvMeasurementHeader.gpsSystemTime)
  
  ::PBGnssSystemTimeStructType* temp = gpssystemtime_;
  gpssystemtime_ = NULL;
  return temp;
}
inline void PBGnssSvMeasurementHeader::set_allocated_gpssystemtime(::PBGnssSystemTimeStructType* gpssystemtime) {
  delete gpssystemtime_;
  gpssystemtime_ = gpssystemtime;
  if (gpssystemtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvMeasurementHeader.gpsSystemTime)
}

// .PBGnssSystemTimeStructType galSystemTime = 14;
inline bool PBGnssSvMeasurementHeader::has_galsystemtime() const {
  return this != internal_default_instance() && galsystemtime_ != NULL;
}
inline void PBGnssSvMeasurementHeader::clear_galsystemtime() {
  if (GetArenaNoVirtual() == NULL && galsystemtime_ != NULL) delete galsystemtime_;
  galsystemtime_ = NULL;
}
inline const ::PBGnssSystemTimeStructType& PBGnssSvMeasurementHeader::galsystemtime() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.galSystemTime)
  return galsystemtime_ != NULL ? *galsystemtime_
                         : *::PBGnssSystemTimeStructType::internal_default_instance();
}
inline ::PBGnssSystemTimeStructType* PBGnssSvMeasurementHeader::mutable_galsystemtime() {
  
  if (galsystemtime_ == NULL) {
    galsystemtime_ = new ::PBGnssSystemTimeStructType;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvMeasurementHeader.galSystemTime)
  return galsystemtime_;
}
inline ::PBGnssSystemTimeStructType* PBGnssSvMeasurementHeader::release_galsystemtime() {
  // @@protoc_insertion_point(field_release:PBGnssSvMeasurementHeader.galSystemTime)
  
  ::PBGnssSystemTimeStructType* temp = galsystemtime_;
  galsystemtime_ = NULL;
  return temp;
}
inline void PBGnssSvMeasurementHeader::set_allocated_galsystemtime(::PBGnssSystemTimeStructType* galsystemtime) {
  delete galsystemtime_;
  galsystemtime_ = galsystemtime;
  if (galsystemtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvMeasurementHeader.galSystemTime)
}

// .PBGnssSystemTimeStructType bdsSystemTime = 15;
inline bool PBGnssSvMeasurementHeader::has_bdssystemtime() const {
  return this != internal_default_instance() && bdssystemtime_ != NULL;
}
inline void PBGnssSvMeasurementHeader::clear_bdssystemtime() {
  if (GetArenaNoVirtual() == NULL && bdssystemtime_ != NULL) delete bdssystemtime_;
  bdssystemtime_ = NULL;
}
inline const ::PBGnssSystemTimeStructType& PBGnssSvMeasurementHeader::bdssystemtime() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.bdsSystemTime)
  return bdssystemtime_ != NULL ? *bdssystemtime_
                         : *::PBGnssSystemTimeStructType::internal_default_instance();
}
inline ::PBGnssSystemTimeStructType* PBGnssSvMeasurementHeader::mutable_bdssystemtime() {
  
  if (bdssystemtime_ == NULL) {
    bdssystemtime_ = new ::PBGnssSystemTimeStructType;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvMeasurementHeader.bdsSystemTime)
  return bdssystemtime_;
}
inline ::PBGnssSystemTimeStructType* PBGnssSvMeasurementHeader::release_bdssystemtime() {
  // @@protoc_insertion_point(field_release:PBGnssSvMeasurementHeader.bdsSystemTime)
  
  ::PBGnssSystemTimeStructType* temp = bdssystemtime_;
  bdssystemtime_ = NULL;
  return temp;
}
inline void PBGnssSvMeasurementHeader::set_allocated_bdssystemtime(::PBGnssSystemTimeStructType* bdssystemtime) {
  delete bdssystemtime_;
  bdssystemtime_ = bdssystemtime;
  if (bdssystemtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvMeasurementHeader.bdsSystemTime)
}

// .PBGnssSystemTimeStructType qzssSystemTime = 16;
inline bool PBGnssSvMeasurementHeader::has_qzsssystemtime() const {
  return this != internal_default_instance() && qzsssystemtime_ != NULL;
}
inline void PBGnssSvMeasurementHeader::clear_qzsssystemtime() {
  if (GetArenaNoVirtual() == NULL && qzsssystemtime_ != NULL) delete qzsssystemtime_;
  qzsssystemtime_ = NULL;
}
inline const ::PBGnssSystemTimeStructType& PBGnssSvMeasurementHeader::qzsssystemtime() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.qzssSystemTime)
  return qzsssystemtime_ != NULL ? *qzsssystemtime_
                         : *::PBGnssSystemTimeStructType::internal_default_instance();
}
inline ::PBGnssSystemTimeStructType* PBGnssSvMeasurementHeader::mutable_qzsssystemtime() {
  
  if (qzsssystemtime_ == NULL) {
    qzsssystemtime_ = new ::PBGnssSystemTimeStructType;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvMeasurementHeader.qzssSystemTime)
  return qzsssystemtime_;
}
inline ::PBGnssSystemTimeStructType* PBGnssSvMeasurementHeader::release_qzsssystemtime() {
  // @@protoc_insertion_point(field_release:PBGnssSvMeasurementHeader.qzssSystemTime)
  
  ::PBGnssSystemTimeStructType* temp = qzsssystemtime_;
  qzsssystemtime_ = NULL;
  return temp;
}
inline void PBGnssSvMeasurementHeader::set_allocated_qzsssystemtime(::PBGnssSystemTimeStructType* qzsssystemtime) {
  delete qzsssystemtime_;
  qzsssystemtime_ = qzsssystemtime;
  if (qzsssystemtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvMeasurementHeader.qzssSystemTime)
}

// .PBGnssGloTimeStructType gloSystemTime = 17;
inline bool PBGnssSvMeasurementHeader::has_glosystemtime() const {
  return this != internal_default_instance() && glosystemtime_ != NULL;
}
inline void PBGnssSvMeasurementHeader::clear_glosystemtime() {
  if (GetArenaNoVirtual() == NULL && glosystemtime_ != NULL) delete glosystemtime_;
  glosystemtime_ = NULL;
}
inline const ::PBGnssGloTimeStructType& PBGnssSvMeasurementHeader::glosystemtime() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.gloSystemTime)
  return glosystemtime_ != NULL ? *glosystemtime_
                         : *::PBGnssGloTimeStructType::internal_default_instance();
}
inline ::PBGnssGloTimeStructType* PBGnssSvMeasurementHeader::mutable_glosystemtime() {
  
  if (glosystemtime_ == NULL) {
    glosystemtime_ = new ::PBGnssGloTimeStructType;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvMeasurementHeader.gloSystemTime)
  return glosystemtime_;
}
inline ::PBGnssGloTimeStructType* PBGnssSvMeasurementHeader::release_glosystemtime() {
  // @@protoc_insertion_point(field_release:PBGnssSvMeasurementHeader.gloSystemTime)
  
  ::PBGnssGloTimeStructType* temp = glosystemtime_;
  glosystemtime_ = NULL;
  return temp;
}
inline void PBGnssSvMeasurementHeader::set_allocated_glosystemtime(::PBGnssGloTimeStructType* glosystemtime) {
  delete glosystemtime_;
  glosystemtime_ = glosystemtime;
  if (glosystemtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvMeasurementHeader.gloSystemTime)
}

// .PBLocGnssTimeExtInfo gpsSystemTimeExt = 18;
inline bool PBGnssSvMeasurementHeader::has_gpssystemtimeext() const {
  return this != internal_default_instance() && gpssystemtimeext_ != NULL;
}
inline void PBGnssSvMeasurementHeader::clear_gpssystemtimeext() {
  if (GetArenaNoVirtual() == NULL && gpssystemtimeext_ != NULL) delete gpssystemtimeext_;
  gpssystemtimeext_ = NULL;
}
inline const ::PBLocGnssTimeExtInfo& PBGnssSvMeasurementHeader::gpssystemtimeext() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.gpsSystemTimeExt)
  return gpssystemtimeext_ != NULL ? *gpssystemtimeext_
                         : *::PBLocGnssTimeExtInfo::internal_default_instance();
}
inline ::PBLocGnssTimeExtInfo* PBGnssSvMeasurementHeader::mutable_gpssystemtimeext() {
  
  if (gpssystemtimeext_ == NULL) {
    gpssystemtimeext_ = new ::PBLocGnssTimeExtInfo;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvMeasurementHeader.gpsSystemTimeExt)
  return gpssystemtimeext_;
}
inline ::PBLocGnssTimeExtInfo* PBGnssSvMeasurementHeader::release_gpssystemtimeext() {
  // @@protoc_insertion_point(field_release:PBGnssSvMeasurementHeader.gpsSystemTimeExt)
  
  ::PBLocGnssTimeExtInfo* temp = gpssystemtimeext_;
  gpssystemtimeext_ = NULL;
  return temp;
}
inline void PBGnssSvMeasurementHeader::set_allocated_gpssystemtimeext(::PBLocGnssTimeExtInfo* gpssystemtimeext) {
  delete gpssystemtimeext_;
  gpssystemtimeext_ = gpssystemtimeext;
  if (gpssystemtimeext) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvMeasurementHeader.gpsSystemTimeExt)
}

// .PBLocGnssTimeExtInfo galSystemTimeExt = 19;
inline bool PBGnssSvMeasurementHeader::has_galsystemtimeext() const {
  return this != internal_default_instance() && galsystemtimeext_ != NULL;
}
inline void PBGnssSvMeasurementHeader::clear_galsystemtimeext() {
  if (GetArenaNoVirtual() == NULL && galsystemtimeext_ != NULL) delete galsystemtimeext_;
  galsystemtimeext_ = NULL;
}
inline const ::PBLocGnssTimeExtInfo& PBGnssSvMeasurementHeader::galsystemtimeext() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.galSystemTimeExt)
  return galsystemtimeext_ != NULL ? *galsystemtimeext_
                         : *::PBLocGnssTimeExtInfo::internal_default_instance();
}
inline ::PBLocGnssTimeExtInfo* PBGnssSvMeasurementHeader::mutable_galsystemtimeext() {
  
  if (galsystemtimeext_ == NULL) {
    galsystemtimeext_ = new ::PBLocGnssTimeExtInfo;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvMeasurementHeader.galSystemTimeExt)
  return galsystemtimeext_;
}
inline ::PBLocGnssTimeExtInfo* PBGnssSvMeasurementHeader::release_galsystemtimeext() {
  // @@protoc_insertion_point(field_release:PBGnssSvMeasurementHeader.galSystemTimeExt)
  
  ::PBLocGnssTimeExtInfo* temp = galsystemtimeext_;
  galsystemtimeext_ = NULL;
  return temp;
}
inline void PBGnssSvMeasurementHeader::set_allocated_galsystemtimeext(::PBLocGnssTimeExtInfo* galsystemtimeext) {
  delete galsystemtimeext_;
  galsystemtimeext_ = galsystemtimeext;
  if (galsystemtimeext) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvMeasurementHeader.galSystemTimeExt)
}

// .PBLocGnssTimeExtInfo bdsSystemTimeExt = 20;
inline bool PBGnssSvMeasurementHeader::has_bdssystemtimeext() const {
  return this != internal_default_instance() && bdssystemtimeext_ != NULL;
}
inline void PBGnssSvMeasurementHeader::clear_bdssystemtimeext() {
  if (GetArenaNoVirtual() == NULL && bdssystemtimeext_ != NULL) delete bdssystemtimeext_;
  bdssystemtimeext_ = NULL;
}
inline const ::PBLocGnssTimeExtInfo& PBGnssSvMeasurementHeader::bdssystemtimeext() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.bdsSystemTimeExt)
  return bdssystemtimeext_ != NULL ? *bdssystemtimeext_
                         : *::PBLocGnssTimeExtInfo::internal_default_instance();
}
inline ::PBLocGnssTimeExtInfo* PBGnssSvMeasurementHeader::mutable_bdssystemtimeext() {
  
  if (bdssystemtimeext_ == NULL) {
    bdssystemtimeext_ = new ::PBLocGnssTimeExtInfo;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvMeasurementHeader.bdsSystemTimeExt)
  return bdssystemtimeext_;
}
inline ::PBLocGnssTimeExtInfo* PBGnssSvMeasurementHeader::release_bdssystemtimeext() {
  // @@protoc_insertion_point(field_release:PBGnssSvMeasurementHeader.bdsSystemTimeExt)
  
  ::PBLocGnssTimeExtInfo* temp = bdssystemtimeext_;
  bdssystemtimeext_ = NULL;
  return temp;
}
inline void PBGnssSvMeasurementHeader::set_allocated_bdssystemtimeext(::PBLocGnssTimeExtInfo* bdssystemtimeext) {
  delete bdssystemtimeext_;
  bdssystemtimeext_ = bdssystemtimeext;
  if (bdssystemtimeext) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvMeasurementHeader.bdsSystemTimeExt)
}

// .PBLocGnssTimeExtInfo qzssSystemTimeExt = 21;
inline bool PBGnssSvMeasurementHeader::has_qzsssystemtimeext() const {
  return this != internal_default_instance() && qzsssystemtimeext_ != NULL;
}
inline void PBGnssSvMeasurementHeader::clear_qzsssystemtimeext() {
  if (GetArenaNoVirtual() == NULL && qzsssystemtimeext_ != NULL) delete qzsssystemtimeext_;
  qzsssystemtimeext_ = NULL;
}
inline const ::PBLocGnssTimeExtInfo& PBGnssSvMeasurementHeader::qzsssystemtimeext() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.qzssSystemTimeExt)
  return qzsssystemtimeext_ != NULL ? *qzsssystemtimeext_
                         : *::PBLocGnssTimeExtInfo::internal_default_instance();
}
inline ::PBLocGnssTimeExtInfo* PBGnssSvMeasurementHeader::mutable_qzsssystemtimeext() {
  
  if (qzsssystemtimeext_ == NULL) {
    qzsssystemtimeext_ = new ::PBLocGnssTimeExtInfo;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvMeasurementHeader.qzssSystemTimeExt)
  return qzsssystemtimeext_;
}
inline ::PBLocGnssTimeExtInfo* PBGnssSvMeasurementHeader::release_qzsssystemtimeext() {
  // @@protoc_insertion_point(field_release:PBGnssSvMeasurementHeader.qzssSystemTimeExt)
  
  ::PBLocGnssTimeExtInfo* temp = qzsssystemtimeext_;
  qzsssystemtimeext_ = NULL;
  return temp;
}
inline void PBGnssSvMeasurementHeader::set_allocated_qzsssystemtimeext(::PBLocGnssTimeExtInfo* qzsssystemtimeext) {
  delete qzsssystemtimeext_;
  qzsssystemtimeext_ = qzsssystemtimeext;
  if (qzsssystemtimeext) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvMeasurementHeader.qzssSystemTimeExt)
}

// .PBLocGnssTimeExtInfo gloSystemTimeExt = 22;
inline bool PBGnssSvMeasurementHeader::has_glosystemtimeext() const {
  return this != internal_default_instance() && glosystemtimeext_ != NULL;
}
inline void PBGnssSvMeasurementHeader::clear_glosystemtimeext() {
  if (GetArenaNoVirtual() == NULL && glosystemtimeext_ != NULL) delete glosystemtimeext_;
  glosystemtimeext_ = NULL;
}
inline const ::PBLocGnssTimeExtInfo& PBGnssSvMeasurementHeader::glosystemtimeext() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.gloSystemTimeExt)
  return glosystemtimeext_ != NULL ? *glosystemtimeext_
                         : *::PBLocGnssTimeExtInfo::internal_default_instance();
}
inline ::PBLocGnssTimeExtInfo* PBGnssSvMeasurementHeader::mutable_glosystemtimeext() {
  
  if (glosystemtimeext_ == NULL) {
    glosystemtimeext_ = new ::PBLocGnssTimeExtInfo;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssSvMeasurementHeader.gloSystemTimeExt)
  return glosystemtimeext_;
}
inline ::PBLocGnssTimeExtInfo* PBGnssSvMeasurementHeader::release_glosystemtimeext() {
  // @@protoc_insertion_point(field_release:PBGnssSvMeasurementHeader.gloSystemTimeExt)
  
  ::PBLocGnssTimeExtInfo* temp = glosystemtimeext_;
  glosystemtimeext_ = NULL;
  return temp;
}
inline void PBGnssSvMeasurementHeader::set_allocated_glosystemtimeext(::PBLocGnssTimeExtInfo* glosystemtimeext) {
  delete glosystemtimeext_;
  glosystemtimeext_ = glosystemtimeext;
  if (glosystemtimeext) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssSvMeasurementHeader.gloSystemTimeExt)
}

// uint64 refCountTicks = 23;
inline void PBGnssSvMeasurementHeader::clear_refcountticks() {
  refcountticks_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvMeasurementHeader::refcountticks() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.refCountTicks)
  return refcountticks_;
}
inline void PBGnssSvMeasurementHeader::set_refcountticks(::google::protobuf::uint64 value) {
  
  refcountticks_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMeasurementHeader.refCountTicks)
}

// .PBLocDgnssCorrectionSourceType dgnssCorrectionSourceType = 24;
inline void PBGnssSvMeasurementHeader::clear_dgnsscorrectionsourcetype() {
  dgnsscorrectionsourcetype_ = 0;
}
inline ::PBLocDgnssCorrectionSourceType PBGnssSvMeasurementHeader::dgnsscorrectionsourcetype() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.dgnssCorrectionSourceType)
  return static_cast< ::PBLocDgnssCorrectionSourceType >(dgnsscorrectionsourcetype_);
}
inline void PBGnssSvMeasurementHeader::set_dgnsscorrectionsourcetype(::PBLocDgnssCorrectionSourceType value) {
  
  dgnsscorrectionsourcetype_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMeasurementHeader.dgnssCorrectionSourceType)
}

// uint32 dgnssCorrectionSourceID = 25;
inline void PBGnssSvMeasurementHeader::clear_dgnsscorrectionsourceid() {
  dgnsscorrectionsourceid_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssSvMeasurementHeader::dgnsscorrectionsourceid() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.dgnssCorrectionSourceID)
  return dgnsscorrectionsourceid_;
}
inline void PBGnssSvMeasurementHeader::set_dgnsscorrectionsourceid(::google::protobuf::uint32 value) {
  
  dgnsscorrectionsourceid_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMeasurementHeader.dgnssCorrectionSourceID)
}

// uint32 dgnssRefStationId = 26;
inline void PBGnssSvMeasurementHeader::clear_dgnssrefstationid() {
  dgnssrefstationid_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssSvMeasurementHeader::dgnssrefstationid() const {
  // @@protoc_insertion_point(field_get:PBGnssSvMeasurementHeader.dgnssRefStationId)
  return dgnssrefstationid_;
}
inline void PBGnssSvMeasurementHeader::set_dgnssrefstationid(::google::protobuf::uint32 value) {
  
  dgnssrefstationid_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvMeasurementHeader.dgnssRefStationId)
}

// -------------------------------------------------------------------

// PBSVTimeSpeedInfo

// uint32 svMs = 1;
inline void PBSVTimeSpeedInfo::clear_svms() {
  svms_ = 0u;
}
inline ::google::protobuf::uint32 PBSVTimeSpeedInfo::svms() const {
  // @@protoc_insertion_point(field_get:PBSVTimeSpeedInfo.svMs)
  return svms_;
}
inline void PBSVTimeSpeedInfo::set_svms(::google::protobuf::uint32 value) {
  
  svms_ = value;
  // @@protoc_insertion_point(field_set:PBSVTimeSpeedInfo.svMs)
}

// float svSubMs = 2;
inline void PBSVTimeSpeedInfo::clear_svsubms() {
  svsubms_ = 0;
}
inline float PBSVTimeSpeedInfo::svsubms() const {
  // @@protoc_insertion_point(field_get:PBSVTimeSpeedInfo.svSubMs)
  return svsubms_;
}
inline void PBSVTimeSpeedInfo::set_svsubms(float value) {
  
  svsubms_ = value;
  // @@protoc_insertion_point(field_set:PBSVTimeSpeedInfo.svSubMs)
}

// float svTimeUncMs = 3;
inline void PBSVTimeSpeedInfo::clear_svtimeuncms() {
  svtimeuncms_ = 0;
}
inline float PBSVTimeSpeedInfo::svtimeuncms() const {
  // @@protoc_insertion_point(field_get:PBSVTimeSpeedInfo.svTimeUncMs)
  return svtimeuncms_;
}
inline void PBSVTimeSpeedInfo::set_svtimeuncms(float value) {
  
  svtimeuncms_ = value;
  // @@protoc_insertion_point(field_set:PBSVTimeSpeedInfo.svTimeUncMs)
}

// float dopplerShift = 4;
inline void PBSVTimeSpeedInfo::clear_dopplershift() {
  dopplershift_ = 0;
}
inline float PBSVTimeSpeedInfo::dopplershift() const {
  // @@protoc_insertion_point(field_get:PBSVTimeSpeedInfo.dopplerShift)
  return dopplershift_;
}
inline void PBSVTimeSpeedInfo::set_dopplershift(float value) {
  
  dopplershift_ = value;
  // @@protoc_insertion_point(field_set:PBSVTimeSpeedInfo.dopplerShift)
}

// float dopplerShiftUnc = 5;
inline void PBSVTimeSpeedInfo::clear_dopplershiftunc() {
  dopplershiftunc_ = 0;
}
inline float PBSVTimeSpeedInfo::dopplershiftunc() const {
  // @@protoc_insertion_point(field_get:PBSVTimeSpeedInfo.dopplerShiftUnc)
  return dopplershiftunc_;
}
inline void PBSVTimeSpeedInfo::set_dopplershiftunc(float value) {
  
  dopplershiftunc_ = value;
  // @@protoc_insertion_point(field_set:PBSVTimeSpeedInfo.dopplerShiftUnc)
}

// -------------------------------------------------------------------

// PBLeverArmParams

// float forwardOffsetMeters = 1;
inline void PBLeverArmParams::clear_forwardoffsetmeters() {
  forwardoffsetmeters_ = 0;
}
inline float PBLeverArmParams::forwardoffsetmeters() const {
  // @@protoc_insertion_point(field_get:PBLeverArmParams.forwardOffsetMeters)
  return forwardoffsetmeters_;
}
inline void PBLeverArmParams::set_forwardoffsetmeters(float value) {
  
  forwardoffsetmeters_ = value;
  // @@protoc_insertion_point(field_set:PBLeverArmParams.forwardOffsetMeters)
}

// float sidewaysOffsetMeters = 2;
inline void PBLeverArmParams::clear_sidewaysoffsetmeters() {
  sidewaysoffsetmeters_ = 0;
}
inline float PBLeverArmParams::sidewaysoffsetmeters() const {
  // @@protoc_insertion_point(field_get:PBLeverArmParams.sidewaysOffsetMeters)
  return sidewaysoffsetmeters_;
}
inline void PBLeverArmParams::set_sidewaysoffsetmeters(float value) {
  
  sidewaysoffsetmeters_ = value;
  // @@protoc_insertion_point(field_set:PBLeverArmParams.sidewaysOffsetMeters)
}

// float upOffsetMeters = 3;
inline void PBLeverArmParams::clear_upoffsetmeters() {
  upoffsetmeters_ = 0;
}
inline float PBLeverArmParams::upoffsetmeters() const {
  // @@protoc_insertion_point(field_get:PBLeverArmParams.upOffsetMeters)
  return upoffsetmeters_;
}
inline void PBLeverArmParams::set_upoffsetmeters(float value) {
  
  upoffsetmeters_ = value;
  // @@protoc_insertion_point(field_set:PBLeverArmParams.upOffsetMeters)
}

// -------------------------------------------------------------------

// PBLeverArmConfigInfo

// uint32 leverArmValidMask = 1;
inline void PBLeverArmConfigInfo::clear_leverarmvalidmask() {
  leverarmvalidmask_ = 0u;
}
inline ::google::protobuf::uint32 PBLeverArmConfigInfo::leverarmvalidmask() const {
  // @@protoc_insertion_point(field_get:PBLeverArmConfigInfo.leverArmValidMask)
  return leverarmvalidmask_;
}
inline void PBLeverArmConfigInfo::set_leverarmvalidmask(::google::protobuf::uint32 value) {
  
  leverarmvalidmask_ = value;
  // @@protoc_insertion_point(field_set:PBLeverArmConfigInfo.leverArmValidMask)
}

// .PBLeverArmParams gnssToVRP = 2;
inline bool PBLeverArmConfigInfo::has_gnsstovrp() const {
  return this != internal_default_instance() && gnsstovrp_ != NULL;
}
inline void PBLeverArmConfigInfo::clear_gnsstovrp() {
  if (GetArenaNoVirtual() == NULL && gnsstovrp_ != NULL) delete gnsstovrp_;
  gnsstovrp_ = NULL;
}
inline const ::PBLeverArmParams& PBLeverArmConfigInfo::gnsstovrp() const {
  // @@protoc_insertion_point(field_get:PBLeverArmConfigInfo.gnssToVRP)
  return gnsstovrp_ != NULL ? *gnsstovrp_
                         : *::PBLeverArmParams::internal_default_instance();
}
inline ::PBLeverArmParams* PBLeverArmConfigInfo::mutable_gnsstovrp() {
  
  if (gnsstovrp_ == NULL) {
    gnsstovrp_ = new ::PBLeverArmParams;
  }
  // @@protoc_insertion_point(field_mutable:PBLeverArmConfigInfo.gnssToVRP)
  return gnsstovrp_;
}
inline ::PBLeverArmParams* PBLeverArmConfigInfo::release_gnsstovrp() {
  // @@protoc_insertion_point(field_release:PBLeverArmConfigInfo.gnssToVRP)
  
  ::PBLeverArmParams* temp = gnsstovrp_;
  gnsstovrp_ = NULL;
  return temp;
}
inline void PBLeverArmConfigInfo::set_allocated_gnsstovrp(::PBLeverArmParams* gnsstovrp) {
  delete gnsstovrp_;
  gnsstovrp_ = gnsstovrp;
  if (gnsstovrp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBLeverArmConfigInfo.gnssToVRP)
}

// .PBLeverArmParams drImuToGnss = 3;
inline bool PBLeverArmConfigInfo::has_drimutognss() const {
  return this != internal_default_instance() && drimutognss_ != NULL;
}
inline void PBLeverArmConfigInfo::clear_drimutognss() {
  if (GetArenaNoVirtual() == NULL && drimutognss_ != NULL) delete drimutognss_;
  drimutognss_ = NULL;
}
inline const ::PBLeverArmParams& PBLeverArmConfigInfo::drimutognss() const {
  // @@protoc_insertion_point(field_get:PBLeverArmConfigInfo.drImuToGnss)
  return drimutognss_ != NULL ? *drimutognss_
                         : *::PBLeverArmParams::internal_default_instance();
}
inline ::PBLeverArmParams* PBLeverArmConfigInfo::mutable_drimutognss() {
  
  if (drimutognss_ == NULL) {
    drimutognss_ = new ::PBLeverArmParams;
  }
  // @@protoc_insertion_point(field_mutable:PBLeverArmConfigInfo.drImuToGnss)
  return drimutognss_;
}
inline ::PBLeverArmParams* PBLeverArmConfigInfo::release_drimutognss() {
  // @@protoc_insertion_point(field_release:PBLeverArmConfigInfo.drImuToGnss)
  
  ::PBLeverArmParams* temp = drimutognss_;
  drimutognss_ = NULL;
  return temp;
}
inline void PBLeverArmConfigInfo::set_allocated_drimutognss(::PBLeverArmParams* drimutognss) {
  delete drimutognss_;
  drimutognss_ = drimutognss;
  if (drimutognss) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBLeverArmConfigInfo.drImuToGnss)
}

// .PBLeverArmParams veppImuToGnss = 4;
inline bool PBLeverArmConfigInfo::has_veppimutognss() const {
  return this != internal_default_instance() && veppimutognss_ != NULL;
}
inline void PBLeverArmConfigInfo::clear_veppimutognss() {
  if (GetArenaNoVirtual() == NULL && veppimutognss_ != NULL) delete veppimutognss_;
  veppimutognss_ = NULL;
}
inline const ::PBLeverArmParams& PBLeverArmConfigInfo::veppimutognss() const {
  // @@protoc_insertion_point(field_get:PBLeverArmConfigInfo.veppImuToGnss)
  return veppimutognss_ != NULL ? *veppimutognss_
                         : *::PBLeverArmParams::internal_default_instance();
}
inline ::PBLeverArmParams* PBLeverArmConfigInfo::mutable_veppimutognss() {
  
  if (veppimutognss_ == NULL) {
    veppimutognss_ = new ::PBLeverArmParams;
  }
  // @@protoc_insertion_point(field_mutable:PBLeverArmConfigInfo.veppImuToGnss)
  return veppimutognss_;
}
inline ::PBLeverArmParams* PBLeverArmConfigInfo::release_veppimutognss() {
  // @@protoc_insertion_point(field_release:PBLeverArmConfigInfo.veppImuToGnss)
  
  ::PBLeverArmParams* temp = veppimutognss_;
  veppimutognss_ = NULL;
  return temp;
}
inline void PBLeverArmConfigInfo::set_allocated_veppimutognss(::PBLeverArmParams* veppimutognss) {
  delete veppimutognss_;
  veppimutognss_ = veppimutognss;
  if (veppimutognss) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBLeverArmConfigInfo.veppImuToGnss)
}

// -------------------------------------------------------------------

// PBBodyToSensorMountParams

// float rollOffset = 1;
inline void PBBodyToSensorMountParams::clear_rolloffset() {
  rolloffset_ = 0;
}
inline float PBBodyToSensorMountParams::rolloffset() const {
  // @@protoc_insertion_point(field_get:PBBodyToSensorMountParams.rollOffset)
  return rolloffset_;
}
inline void PBBodyToSensorMountParams::set_rolloffset(float value) {
  
  rolloffset_ = value;
  // @@protoc_insertion_point(field_set:PBBodyToSensorMountParams.rollOffset)
}

// float yawOffset = 2;
inline void PBBodyToSensorMountParams::clear_yawoffset() {
  yawoffset_ = 0;
}
inline float PBBodyToSensorMountParams::yawoffset() const {
  // @@protoc_insertion_point(field_get:PBBodyToSensorMountParams.yawOffset)
  return yawoffset_;
}
inline void PBBodyToSensorMountParams::set_yawoffset(float value) {
  
  yawoffset_ = value;
  // @@protoc_insertion_point(field_set:PBBodyToSensorMountParams.yawOffset)
}

// float pitchOffset = 3;
inline void PBBodyToSensorMountParams::clear_pitchoffset() {
  pitchoffset_ = 0;
}
inline float PBBodyToSensorMountParams::pitchoffset() const {
  // @@protoc_insertion_point(field_get:PBBodyToSensorMountParams.pitchOffset)
  return pitchoffset_;
}
inline void PBBodyToSensorMountParams::set_pitchoffset(float value) {
  
  pitchoffset_ = value;
  // @@protoc_insertion_point(field_set:PBBodyToSensorMountParams.pitchOffset)
}

// float offsetUnc = 4;
inline void PBBodyToSensorMountParams::clear_offsetunc() {
  offsetunc_ = 0;
}
inline float PBBodyToSensorMountParams::offsetunc() const {
  // @@protoc_insertion_point(field_get:PBBodyToSensorMountParams.offsetUnc)
  return offsetunc_;
}
inline void PBBodyToSensorMountParams::set_offsetunc(float value) {
  
  offsetunc_ = value;
  // @@protoc_insertion_point(field_set:PBBodyToSensorMountParams.offsetUnc)
}

// -------------------------------------------------------------------

// PBStationStatusIndicatorMask

// uint32 stationIndicator = 1;
inline void PBStationStatusIndicatorMask::clear_stationindicator() {
  stationindicator_ = 0u;
}
inline ::google::protobuf::uint32 PBStationStatusIndicatorMask::stationindicator() const {
  // @@protoc_insertion_point(field_get:PBStationStatusIndicatorMask.stationIndicator)
  return stationindicator_;
}
inline void PBStationStatusIndicatorMask::set_stationindicator(::google::protobuf::uint32 value) {
  
  stationindicator_ = value;
  // @@protoc_insertion_point(field_set:PBStationStatusIndicatorMask.stationIndicator)
}

// uint32 oscillatorIndicator = 2;
inline void PBStationStatusIndicatorMask::clear_oscillatorindicator() {
  oscillatorindicator_ = 0u;
}
inline ::google::protobuf::uint32 PBStationStatusIndicatorMask::oscillatorindicator() const {
  // @@protoc_insertion_point(field_get:PBStationStatusIndicatorMask.oscillatorIndicator)
  return oscillatorindicator_;
}
inline void PBStationStatusIndicatorMask::set_oscillatorindicator(::google::protobuf::uint32 value) {
  
  oscillatorindicator_ = value;
  // @@protoc_insertion_point(field_set:PBStationStatusIndicatorMask.oscillatorIndicator)
}

// uint32 quarterCycleIndicator = 3;
inline void PBStationStatusIndicatorMask::clear_quartercycleindicator() {
  quartercycleindicator_ = 0u;
}
inline ::google::protobuf::uint32 PBStationStatusIndicatorMask::quartercycleindicator() const {
  // @@protoc_insertion_point(field_get:PBStationStatusIndicatorMask.quarterCycleIndicator)
  return quartercycleindicator_;
}
inline void PBStationStatusIndicatorMask::set_quartercycleindicator(::google::protobuf::uint32 value) {
  
  quartercycleindicator_ = value;
  // @@protoc_insertion_point(field_set:PBStationStatusIndicatorMask.quarterCycleIndicator)
}

// uint32 heightAvailability = 4;
inline void PBStationStatusIndicatorMask::clear_heightavailability() {
  heightavailability_ = 0u;
}
inline ::google::protobuf::uint32 PBStationStatusIndicatorMask::heightavailability() const {
  // @@protoc_insertion_point(field_get:PBStationStatusIndicatorMask.heightAvailability)
  return heightavailability_;
}
inline void PBStationStatusIndicatorMask::set_heightavailability(::google::protobuf::uint32 value) {
  
  heightavailability_ = value;
  // @@protoc_insertion_point(field_set:PBStationStatusIndicatorMask.heightAvailability)
}

// uint32 referencePointUncertainty = 5;
inline void PBStationStatusIndicatorMask::clear_referencepointuncertainty() {
  referencepointuncertainty_ = 0u;
}
inline ::google::protobuf::uint32 PBStationStatusIndicatorMask::referencepointuncertainty() const {
  // @@protoc_insertion_point(field_get:PBStationStatusIndicatorMask.referencePointUncertainty)
  return referencepointuncertainty_;
}
inline void PBStationStatusIndicatorMask::set_referencepointuncertainty(::google::protobuf::uint32 value) {
  
  referencepointuncertainty_ = value;
  // @@protoc_insertion_point(field_set:PBStationStatusIndicatorMask.referencePointUncertainty)
}

// -------------------------------------------------------------------

// PBReferenceStation

// uint32 stationID = 1;
inline void PBReferenceStation::clear_stationid() {
  stationid_ = 0u;
}
inline ::google::protobuf::uint32 PBReferenceStation::stationid() const {
  // @@protoc_insertion_point(field_get:PBReferenceStation.stationID)
  return stationid_;
}
inline void PBReferenceStation::set_stationid(::google::protobuf::uint32 value) {
  
  stationid_ = value;
  // @@protoc_insertion_point(field_set:PBReferenceStation.stationID)
}

// .PBStationStatusIndicatorMask statusIndicator = 2;
inline bool PBReferenceStation::has_statusindicator() const {
  return this != internal_default_instance() && statusindicator_ != NULL;
}
inline void PBReferenceStation::clear_statusindicator() {
  if (GetArenaNoVirtual() == NULL && statusindicator_ != NULL) delete statusindicator_;
  statusindicator_ = NULL;
}
inline const ::PBStationStatusIndicatorMask& PBReferenceStation::statusindicator() const {
  // @@protoc_insertion_point(field_get:PBReferenceStation.statusIndicator)
  return statusindicator_ != NULL ? *statusindicator_
                         : *::PBStationStatusIndicatorMask::internal_default_instance();
}
inline ::PBStationStatusIndicatorMask* PBReferenceStation::mutable_statusindicator() {
  
  if (statusindicator_ == NULL) {
    statusindicator_ = new ::PBStationStatusIndicatorMask;
  }
  // @@protoc_insertion_point(field_mutable:PBReferenceStation.statusIndicator)
  return statusindicator_;
}
inline ::PBStationStatusIndicatorMask* PBReferenceStation::release_statusindicator() {
  // @@protoc_insertion_point(field_release:PBReferenceStation.statusIndicator)
  
  ::PBStationStatusIndicatorMask* temp = statusindicator_;
  statusindicator_ = NULL;
  return temp;
}
inline void PBReferenceStation::set_allocated_statusindicator(::PBStationStatusIndicatorMask* statusindicator) {
  delete statusindicator_;
  statusindicator_ = statusindicator;
  if (statusindicator) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBReferenceStation.statusIndicator)
}

// uint32 linkedStationID = 3;
inline void PBReferenceStation::clear_linkedstationid() {
  linkedstationid_ = 0u;
}
inline ::google::protobuf::uint32 PBReferenceStation::linkedstationid() const {
  // @@protoc_insertion_point(field_get:PBReferenceStation.linkedStationID)
  return linkedstationid_;
}
inline void PBReferenceStation::set_linkedstationid(::google::protobuf::uint32 value) {
  
  linkedstationid_ = value;
  // @@protoc_insertion_point(field_set:PBReferenceStation.linkedStationID)
}

// uint32 ITRFYear = 4;
inline void PBReferenceStation::clear_itrfyear() {
  itrfyear_ = 0u;
}
inline ::google::protobuf::uint32 PBReferenceStation::itrfyear() const {
  // @@protoc_insertion_point(field_get:PBReferenceStation.ITRFYear)
  return itrfyear_;
}
inline void PBReferenceStation::set_itrfyear(::google::protobuf::uint32 value) {
  
  itrfyear_ = value;
  // @@protoc_insertion_point(field_set:PBReferenceStation.ITRFYear)
}

// uint32 constellationBitMask = 5;
inline void PBReferenceStation::clear_constellationbitmask() {
  constellationbitmask_ = 0u;
}
inline ::google::protobuf::uint32 PBReferenceStation::constellationbitmask() const {
  // @@protoc_insertion_point(field_get:PBReferenceStation.constellationBitMask)
  return constellationbitmask_;
}
inline void PBReferenceStation::set_constellationbitmask(::google::protobuf::uint32 value) {
  
  constellationbitmask_ = value;
  // @@protoc_insertion_point(field_set:PBReferenceStation.constellationBitMask)
}

// double ecefX = 6;
inline void PBReferenceStation::clear_ecefx() {
  ecefx_ = 0;
}
inline double PBReferenceStation::ecefx() const {
  // @@protoc_insertion_point(field_get:PBReferenceStation.ecefX)
  return ecefx_;
}
inline void PBReferenceStation::set_ecefx(double value) {
  
  ecefx_ = value;
  // @@protoc_insertion_point(field_set:PBReferenceStation.ecefX)
}

// double ecefY = 7;
inline void PBReferenceStation::clear_ecefy() {
  ecefy_ = 0;
}
inline double PBReferenceStation::ecefy() const {
  // @@protoc_insertion_point(field_get:PBReferenceStation.ecefY)
  return ecefy_;
}
inline void PBReferenceStation::set_ecefy(double value) {
  
  ecefy_ = value;
  // @@protoc_insertion_point(field_set:PBReferenceStation.ecefY)
}

// double ecefZ = 8;
inline void PBReferenceStation::clear_ecefz() {
  ecefz_ = 0;
}
inline double PBReferenceStation::ecefz() const {
  // @@protoc_insertion_point(field_get:PBReferenceStation.ecefZ)
  return ecefz_;
}
inline void PBReferenceStation::set_ecefz(double value) {
  
  ecefz_ = value;
  // @@protoc_insertion_point(field_set:PBReferenceStation.ecefZ)
}

// float antennaHeight = 9;
inline void PBReferenceStation::clear_antennaheight() {
  antennaheight_ = 0;
}
inline float PBReferenceStation::antennaheight() const {
  // @@protoc_insertion_point(field_get:PBReferenceStation.antennaHeight)
  return antennaheight_;
}
inline void PBReferenceStation::set_antennaheight(float value) {
  
  antennaheight_ = value;
  // @@protoc_insertion_point(field_set:PBReferenceStation.antennaHeight)
}

// float uncertaintyX = 10;
inline void PBReferenceStation::clear_uncertaintyx() {
  uncertaintyx_ = 0;
}
inline float PBReferenceStation::uncertaintyx() const {
  // @@protoc_insertion_point(field_get:PBReferenceStation.uncertaintyX)
  return uncertaintyx_;
}
inline void PBReferenceStation::set_uncertaintyx(float value) {
  
  uncertaintyx_ = value;
  // @@protoc_insertion_point(field_set:PBReferenceStation.uncertaintyX)
}

// float uncertaintyY = 11;
inline void PBReferenceStation::clear_uncertaintyy() {
  uncertaintyy_ = 0;
}
inline float PBReferenceStation::uncertaintyy() const {
  // @@protoc_insertion_point(field_get:PBReferenceStation.uncertaintyY)
  return uncertaintyy_;
}
inline void PBReferenceStation::set_uncertaintyy(float value) {
  
  uncertaintyy_ = value;
  // @@protoc_insertion_point(field_set:PBReferenceStation.uncertaintyY)
}

// float uncertaintyZ = 12;
inline void PBReferenceStation::clear_uncertaintyz() {
  uncertaintyz_ = 0;
}
inline float PBReferenceStation::uncertaintyz() const {
  // @@protoc_insertion_point(field_get:PBReferenceStation.uncertaintyZ)
  return uncertaintyz_;
}
inline void PBReferenceStation::set_uncertaintyz(float value) {
  
  uncertaintyz_ = value;
  // @@protoc_insertion_point(field_set:PBReferenceStation.uncertaintyZ)
}

// uint32 uncertaintyConfidenceX = 13;
inline void PBReferenceStation::clear_uncertaintyconfidencex() {
  uncertaintyconfidencex_ = 0u;
}
inline ::google::protobuf::uint32 PBReferenceStation::uncertaintyconfidencex() const {
  // @@protoc_insertion_point(field_get:PBReferenceStation.uncertaintyConfidenceX)
  return uncertaintyconfidencex_;
}
inline void PBReferenceStation::set_uncertaintyconfidencex(::google::protobuf::uint32 value) {
  
  uncertaintyconfidencex_ = value;
  // @@protoc_insertion_point(field_set:PBReferenceStation.uncertaintyConfidenceX)
}

// uint32 uncertaintyConfidenceY = 14;
inline void PBReferenceStation::clear_uncertaintyconfidencey() {
  uncertaintyconfidencey_ = 0u;
}
inline ::google::protobuf::uint32 PBReferenceStation::uncertaintyconfidencey() const {
  // @@protoc_insertion_point(field_get:PBReferenceStation.uncertaintyConfidenceY)
  return uncertaintyconfidencey_;
}
inline void PBReferenceStation::set_uncertaintyconfidencey(::google::protobuf::uint32 value) {
  
  uncertaintyconfidencey_ = value;
  // @@protoc_insertion_point(field_set:PBReferenceStation.uncertaintyConfidenceY)
}

// uint32 uncertaintyConfidenceZ = 15;
inline void PBReferenceStation::clear_uncertaintyconfidencez() {
  uncertaintyconfidencez_ = 0u;
}
inline ::google::protobuf::uint32 PBReferenceStation::uncertaintyconfidencez() const {
  // @@protoc_insertion_point(field_get:PBReferenceStation.uncertaintyConfidenceZ)
  return uncertaintyconfidencez_;
}
inline void PBReferenceStation::set_uncertaintyconfidencez(::google::protobuf::uint32 value) {
  
  uncertaintyconfidencez_ = value;
  // @@protoc_insertion_point(field_set:PBReferenceStation.uncertaintyConfidenceZ)
}

// -------------------------------------------------------------------

// PBGnssEpochTime_glonassEpochTime

// uint32 timeOfDay = 1;
inline void PBGnssEpochTime_glonassEpochTime::clear_timeofday() {
  timeofday_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssEpochTime_glonassEpochTime::timeofday() const {
  // @@protoc_insertion_point(field_get:PBGnssEpochTime.glonassEpochTime.timeOfDay)
  return timeofday_;
}
inline void PBGnssEpochTime_glonassEpochTime::set_timeofday(::google::protobuf::uint32 value) {
  
  timeofday_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEpochTime.glonassEpochTime.timeOfDay)
}

// uint32 dayOfWeek = 2;
inline void PBGnssEpochTime_glonassEpochTime::clear_dayofweek() {
  dayofweek_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssEpochTime_glonassEpochTime::dayofweek() const {
  // @@protoc_insertion_point(field_get:PBGnssEpochTime.glonassEpochTime.dayOfWeek)
  return dayofweek_;
}
inline void PBGnssEpochTime_glonassEpochTime::set_dayofweek(::google::protobuf::uint32 value) {
  
  dayofweek_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEpochTime.glonassEpochTime.dayOfWeek)
}

// -------------------------------------------------------------------

// PBGnssEpochTime

// uint32 timeOfWeek = 1;
inline bool PBGnssEpochTime::has_timeofweek() const {
  return gnssEpochTime_case() == kTimeOfWeek;
}
inline void PBGnssEpochTime::set_has_timeofweek() {
  _oneof_case_[0] = kTimeOfWeek;
}
inline void PBGnssEpochTime::clear_timeofweek() {
  if (has_timeofweek()) {
    gnssEpochTime_.timeofweek_ = 0u;
    clear_has_gnssEpochTime();
  }
}
inline ::google::protobuf::uint32 PBGnssEpochTime::timeofweek() const {
  // @@protoc_insertion_point(field_get:PBGnssEpochTime.timeOfWeek)
  if (has_timeofweek()) {
    return gnssEpochTime_.timeofweek_;
  }
  return 0u;
}
inline void PBGnssEpochTime::set_timeofweek(::google::protobuf::uint32 value) {
  if (!has_timeofweek()) {
    clear_gnssEpochTime();
    set_has_timeofweek();
  }
  gnssEpochTime_.timeofweek_ = value;
  // @@protoc_insertion_point(field_set:PBGnssEpochTime.timeOfWeek)
}

// .PBGnssEpochTime.glonassEpochTime gloEpochTime = 2;
inline bool PBGnssEpochTime::has_gloepochtime() const {
  return gnssEpochTime_case() == kGloEpochTime;
}
inline void PBGnssEpochTime::set_has_gloepochtime() {
  _oneof_case_[0] = kGloEpochTime;
}
inline void PBGnssEpochTime::clear_gloepochtime() {
  if (has_gloepochtime()) {
    delete gnssEpochTime_.gloepochtime_;
    clear_has_gnssEpochTime();
  }
}
inline  const ::PBGnssEpochTime_glonassEpochTime& PBGnssEpochTime::gloepochtime() const {
  // @@protoc_insertion_point(field_get:PBGnssEpochTime.gloEpochTime)
  return has_gloepochtime()
      ? *gnssEpochTime_.gloepochtime_
      : ::PBGnssEpochTime_glonassEpochTime::default_instance();
}
inline ::PBGnssEpochTime_glonassEpochTime* PBGnssEpochTime::mutable_gloepochtime() {
  if (!has_gloepochtime()) {
    clear_gnssEpochTime();
    set_has_gloepochtime();
    gnssEpochTime_.gloepochtime_ = new ::PBGnssEpochTime_glonassEpochTime;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssEpochTime.gloEpochTime)
  return gnssEpochTime_.gloepochtime_;
}
inline ::PBGnssEpochTime_glonassEpochTime* PBGnssEpochTime::release_gloepochtime() {
  // @@protoc_insertion_point(field_release:PBGnssEpochTime.gloEpochTime)
  if (has_gloepochtime()) {
    clear_has_gnssEpochTime();
    ::PBGnssEpochTime_glonassEpochTime* temp = gnssEpochTime_.gloepochtime_;
    gnssEpochTime_.gloepochtime_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void PBGnssEpochTime::set_allocated_gloepochtime(::PBGnssEpochTime_glonassEpochTime* gloepochtime) {
  clear_gnssEpochTime();
  if (gloepochtime) {
    set_has_gloepochtime();
    gnssEpochTime_.gloepochtime_ = gloepochtime;
  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssEpochTime.gloEpochTime)
}

inline bool PBGnssEpochTime::has_gnssEpochTime() const {
  return gnssEpochTime_case() != GNSSEPOCHTIME_NOT_SET;
}
inline void PBGnssEpochTime::clear_has_gnssEpochTime() {
  _oneof_case_[0] = GNSSEPOCHTIME_NOT_SET;
}
inline PBGnssEpochTime::GnssEpochTimeCase PBGnssEpochTime::gnssEpochTime_case() const {
  return PBGnssEpochTime::GnssEpochTimeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// PBDGnssObservationStatusFlags

// uint32 synchronousFlag = 1;
inline void PBDGnssObservationStatusFlags::clear_synchronousflag() {
  synchronousflag_ = 0u;
}
inline ::google::protobuf::uint32 PBDGnssObservationStatusFlags::synchronousflag() const {
  // @@protoc_insertion_point(field_get:PBDGnssObservationStatusFlags.synchronousFlag)
  return synchronousflag_;
}
inline void PBDGnssObservationStatusFlags::set_synchronousflag(::google::protobuf::uint32 value) {
  
  synchronousflag_ = value;
  // @@protoc_insertion_point(field_set:PBDGnssObservationStatusFlags.synchronousFlag)
}

// uint32 smoothingIndicator = 2;
inline void PBDGnssObservationStatusFlags::clear_smoothingindicator() {
  smoothingindicator_ = 0u;
}
inline ::google::protobuf::uint32 PBDGnssObservationStatusFlags::smoothingindicator() const {
  // @@protoc_insertion_point(field_get:PBDGnssObservationStatusFlags.smoothingIndicator)
  return smoothingindicator_;
}
inline void PBDGnssObservationStatusFlags::set_smoothingindicator(::google::protobuf::uint32 value) {
  
  smoothingindicator_ = value;
  // @@protoc_insertion_point(field_set:PBDGnssObservationStatusFlags.smoothingIndicator)
}

// uint32 smoothingInterval = 3;
inline void PBDGnssObservationStatusFlags::clear_smoothinginterval() {
  smoothinginterval_ = 0u;
}
inline ::google::protobuf::uint32 PBDGnssObservationStatusFlags::smoothinginterval() const {
  // @@protoc_insertion_point(field_get:PBDGnssObservationStatusFlags.smoothingInterval)
  return smoothinginterval_;
}
inline void PBDGnssObservationStatusFlags::set_smoothinginterval(::google::protobuf::uint32 value) {
  
  smoothinginterval_ = value;
  // @@protoc_insertion_point(field_set:PBDGnssObservationStatusFlags.smoothingInterval)
}

// uint32 clockSteeringIndicator = 4;
inline void PBDGnssObservationStatusFlags::clear_clocksteeringindicator() {
  clocksteeringindicator_ = 0u;
}
inline ::google::protobuf::uint32 PBDGnssObservationStatusFlags::clocksteeringindicator() const {
  // @@protoc_insertion_point(field_get:PBDGnssObservationStatusFlags.clockSteeringIndicator)
  return clocksteeringindicator_;
}
inline void PBDGnssObservationStatusFlags::set_clocksteeringindicator(::google::protobuf::uint32 value) {
  
  clocksteeringindicator_ = value;
  // @@protoc_insertion_point(field_set:PBDGnssObservationStatusFlags.clockSteeringIndicator)
}

// uint32 externalClockIndicator = 5;
inline void PBDGnssObservationStatusFlags::clear_externalclockindicator() {
  externalclockindicator_ = 0u;
}
inline ::google::protobuf::uint32 PBDGnssObservationStatusFlags::externalclockindicator() const {
  // @@protoc_insertion_point(field_get:PBDGnssObservationStatusFlags.externalClockIndicator)
  return externalclockindicator_;
}
inline void PBDGnssObservationStatusFlags::set_externalclockindicator(::google::protobuf::uint32 value) {
  
  externalclockindicator_ = value;
  // @@protoc_insertion_point(field_set:PBDGnssObservationStatusFlags.externalClockIndicator)
}

// -------------------------------------------------------------------

// PBDGnssMeasurement

// uint32 svId = 1;
inline void PBDGnssMeasurement::clear_svid() {
  svid_ = 0u;
}
inline ::google::protobuf::uint32 PBDGnssMeasurement::svid() const {
  // @@protoc_insertion_point(field_get:PBDGnssMeasurement.svId)
  return svid_;
}
inline void PBDGnssMeasurement::set_svid(::google::protobuf::uint32 value) {
  
  svid_ = value;
  // @@protoc_insertion_point(field_set:PBDGnssMeasurement.svId)
}

// .PBExtendedSatelliteInformation extendedSatelliteInformation = 2;
inline void PBDGnssMeasurement::clear_extendedsatelliteinformation() {
  extendedsatelliteinformation_ = 0;
}
inline ::PBExtendedSatelliteInformation PBDGnssMeasurement::extendedsatelliteinformation() const {
  // @@protoc_insertion_point(field_get:PBDGnssMeasurement.extendedSatelliteInformation)
  return static_cast< ::PBExtendedSatelliteInformation >(extendedsatelliteinformation_);
}
inline void PBDGnssMeasurement::set_extendedsatelliteinformation(::PBExtendedSatelliteInformation value) {
  
  extendedsatelliteinformation_ = value;
  // @@protoc_insertion_point(field_set:PBDGnssMeasurement.extendedSatelliteInformation)
}

// .PBDGnssGpsSignalIdentifier gpsSignalIdentifier = 3;
inline bool PBDGnssMeasurement::has_gpssignalidentifier() const {
  return gnssSignalIdentifier_case() == kGpsSignalIdentifier;
}
inline void PBDGnssMeasurement::set_has_gpssignalidentifier() {
  _oneof_case_[0] = kGpsSignalIdentifier;
}
inline void PBDGnssMeasurement::clear_gpssignalidentifier() {
  if (has_gpssignalidentifier()) {
    gnssSignalIdentifier_.gpssignalidentifier_ = 0;
    clear_has_gnssSignalIdentifier();
  }
}
inline ::PBDGnssGpsSignalIdentifier PBDGnssMeasurement::gpssignalidentifier() const {
  // @@protoc_insertion_point(field_get:PBDGnssMeasurement.gpsSignalIdentifier)
  if (has_gpssignalidentifier()) {
    return static_cast< ::PBDGnssGpsSignalIdentifier >(gnssSignalIdentifier_.gpssignalidentifier_);
  }
  return static_cast< ::PBDGnssGpsSignalIdentifier >(0);
}
inline void PBDGnssMeasurement::set_gpssignalidentifier(::PBDGnssGpsSignalIdentifier value) {
  if (!has_gpssignalidentifier()) {
    clear_gnssSignalIdentifier();
    set_has_gpssignalidentifier();
  }
  gnssSignalIdentifier_.gpssignalidentifier_ = value;
  // @@protoc_insertion_point(field_set:PBDGnssMeasurement.gpsSignalIdentifier)
}

// .PBDGnssGlonassSignalIdentifier glonassSignalIdentifier = 4;
inline bool PBDGnssMeasurement::has_glonasssignalidentifier() const {
  return gnssSignalIdentifier_case() == kGlonassSignalIdentifier;
}
inline void PBDGnssMeasurement::set_has_glonasssignalidentifier() {
  _oneof_case_[0] = kGlonassSignalIdentifier;
}
inline void PBDGnssMeasurement::clear_glonasssignalidentifier() {
  if (has_glonasssignalidentifier()) {
    gnssSignalIdentifier_.glonasssignalidentifier_ = 0;
    clear_has_gnssSignalIdentifier();
  }
}
inline ::PBDGnssGlonassSignalIdentifier PBDGnssMeasurement::glonasssignalidentifier() const {
  // @@protoc_insertion_point(field_get:PBDGnssMeasurement.glonassSignalIdentifier)
  if (has_glonasssignalidentifier()) {
    return static_cast< ::PBDGnssGlonassSignalIdentifier >(gnssSignalIdentifier_.glonasssignalidentifier_);
  }
  return static_cast< ::PBDGnssGlonassSignalIdentifier >(0);
}
inline void PBDGnssMeasurement::set_glonasssignalidentifier(::PBDGnssGlonassSignalIdentifier value) {
  if (!has_glonasssignalidentifier()) {
    clear_gnssSignalIdentifier();
    set_has_glonasssignalidentifier();
  }
  gnssSignalIdentifier_.glonasssignalidentifier_ = value;
  // @@protoc_insertion_point(field_set:PBDGnssMeasurement.glonassSignalIdentifier)
}

// .PBDGnssGalileoSignalIdentifier galileoSignalIdentifier = 5;
inline bool PBDGnssMeasurement::has_galileosignalidentifier() const {
  return gnssSignalIdentifier_case() == kGalileoSignalIdentifier;
}
inline void PBDGnssMeasurement::set_has_galileosignalidentifier() {
  _oneof_case_[0] = kGalileoSignalIdentifier;
}
inline void PBDGnssMeasurement::clear_galileosignalidentifier() {
  if (has_galileosignalidentifier()) {
    gnssSignalIdentifier_.galileosignalidentifier_ = 0;
    clear_has_gnssSignalIdentifier();
  }
}
inline ::PBDGnssGalileoSignalIdentifier PBDGnssMeasurement::galileosignalidentifier() const {
  // @@protoc_insertion_point(field_get:PBDGnssMeasurement.galileoSignalIdentifier)
  if (has_galileosignalidentifier()) {
    return static_cast< ::PBDGnssGalileoSignalIdentifier >(gnssSignalIdentifier_.galileosignalidentifier_);
  }
  return static_cast< ::PBDGnssGalileoSignalIdentifier >(0);
}
inline void PBDGnssMeasurement::set_galileosignalidentifier(::PBDGnssGalileoSignalIdentifier value) {
  if (!has_galileosignalidentifier()) {
    clear_gnssSignalIdentifier();
    set_has_galileosignalidentifier();
  }
  gnssSignalIdentifier_.galileosignalidentifier_ = value;
  // @@protoc_insertion_point(field_set:PBDGnssMeasurement.galileoSignalIdentifier)
}

// .PBDGnssQzssSignalIdentifier qzssSignalIdentifier = 6;
inline bool PBDGnssMeasurement::has_qzsssignalidentifier() const {
  return gnssSignalIdentifier_case() == kQzssSignalIdentifier;
}
inline void PBDGnssMeasurement::set_has_qzsssignalidentifier() {
  _oneof_case_[0] = kQzssSignalIdentifier;
}
inline void PBDGnssMeasurement::clear_qzsssignalidentifier() {
  if (has_qzsssignalidentifier()) {
    gnssSignalIdentifier_.qzsssignalidentifier_ = 0;
    clear_has_gnssSignalIdentifier();
  }
}
inline ::PBDGnssQzssSignalIdentifier PBDGnssMeasurement::qzsssignalidentifier() const {
  // @@protoc_insertion_point(field_get:PBDGnssMeasurement.qzssSignalIdentifier)
  if (has_qzsssignalidentifier()) {
    return static_cast< ::PBDGnssQzssSignalIdentifier >(gnssSignalIdentifier_.qzsssignalidentifier_);
  }
  return static_cast< ::PBDGnssQzssSignalIdentifier >(0);
}
inline void PBDGnssMeasurement::set_qzsssignalidentifier(::PBDGnssQzssSignalIdentifier value) {
  if (!has_qzsssignalidentifier()) {
    clear_gnssSignalIdentifier();
    set_has_qzsssignalidentifier();
  }
  gnssSignalIdentifier_.qzsssignalidentifier_ = value;
  // @@protoc_insertion_point(field_set:PBDGnssMeasurement.qzssSignalIdentifier)
}

// .PBDGnssBdsSignalIdentifier bdsSignalIdentifier = 7;
inline bool PBDGnssMeasurement::has_bdssignalidentifier() const {
  return gnssSignalIdentifier_case() == kBdsSignalIdentifier;
}
inline void PBDGnssMeasurement::set_has_bdssignalidentifier() {
  _oneof_case_[0] = kBdsSignalIdentifier;
}
inline void PBDGnssMeasurement::clear_bdssignalidentifier() {
  if (has_bdssignalidentifier()) {
    gnssSignalIdentifier_.bdssignalidentifier_ = 0;
    clear_has_gnssSignalIdentifier();
  }
}
inline ::PBDGnssBdsSignalIdentifier PBDGnssMeasurement::bdssignalidentifier() const {
  // @@protoc_insertion_point(field_get:PBDGnssMeasurement.bdsSignalIdentifier)
  if (has_bdssignalidentifier()) {
    return static_cast< ::PBDGnssBdsSignalIdentifier >(gnssSignalIdentifier_.bdssignalidentifier_);
  }
  return static_cast< ::PBDGnssBdsSignalIdentifier >(0);
}
inline void PBDGnssMeasurement::set_bdssignalidentifier(::PBDGnssBdsSignalIdentifier value) {
  if (!has_bdssignalidentifier()) {
    clear_gnssSignalIdentifier();
    set_has_bdssignalidentifier();
  }
  gnssSignalIdentifier_.bdssignalidentifier_ = value;
  // @@protoc_insertion_point(field_set:PBDGnssMeasurement.bdsSignalIdentifier)
}

// .PBDGnssSbasSignalIdentifier sbasSignalIdentifier = 8;
inline bool PBDGnssMeasurement::has_sbassignalidentifier() const {
  return gnssSignalIdentifier_case() == kSbasSignalIdentifier;
}
inline void PBDGnssMeasurement::set_has_sbassignalidentifier() {
  _oneof_case_[0] = kSbasSignalIdentifier;
}
inline void PBDGnssMeasurement::clear_sbassignalidentifier() {
  if (has_sbassignalidentifier()) {
    gnssSignalIdentifier_.sbassignalidentifier_ = 0;
    clear_has_gnssSignalIdentifier();
  }
}
inline ::PBDGnssSbasSignalIdentifier PBDGnssMeasurement::sbassignalidentifier() const {
  // @@protoc_insertion_point(field_get:PBDGnssMeasurement.sbasSignalIdentifier)
  if (has_sbassignalidentifier()) {
    return static_cast< ::PBDGnssSbasSignalIdentifier >(gnssSignalIdentifier_.sbassignalidentifier_);
  }
  return static_cast< ::PBDGnssSbasSignalIdentifier >(0);
}
inline void PBDGnssMeasurement::set_sbassignalidentifier(::PBDGnssSbasSignalIdentifier value) {
  if (!has_sbassignalidentifier()) {
    clear_gnssSignalIdentifier();
    set_has_sbassignalidentifier();
  }
  gnssSignalIdentifier_.sbassignalidentifier_ = value;
  // @@protoc_insertion_point(field_set:PBDGnssMeasurement.sbasSignalIdentifier)
}

// uint32 signalObservationStatus = 9;
inline void PBDGnssMeasurement::clear_signalobservationstatus() {
  signalobservationstatus_ = 0u;
}
inline ::google::protobuf::uint32 PBDGnssMeasurement::signalobservationstatus() const {
  // @@protoc_insertion_point(field_get:PBDGnssMeasurement.signalObservationStatus)
  return signalobservationstatus_;
}
inline void PBDGnssMeasurement::set_signalobservationstatus(::google::protobuf::uint32 value) {
  
  signalobservationstatus_ = value;
  // @@protoc_insertion_point(field_set:PBDGnssMeasurement.signalObservationStatus)
}

// double pseudorange = 10;
inline void PBDGnssMeasurement::clear_pseudorange() {
  pseudorange_ = 0;
}
inline double PBDGnssMeasurement::pseudorange() const {
  // @@protoc_insertion_point(field_get:PBDGnssMeasurement.pseudorange)
  return pseudorange_;
}
inline void PBDGnssMeasurement::set_pseudorange(double value) {
  
  pseudorange_ = value;
  // @@protoc_insertion_point(field_set:PBDGnssMeasurement.pseudorange)
}

// double phaseRange = 11;
inline void PBDGnssMeasurement::clear_phaserange() {
  phaserange_ = 0;
}
inline double PBDGnssMeasurement::phaserange() const {
  // @@protoc_insertion_point(field_get:PBDGnssMeasurement.phaseRange)
  return phaserange_;
}
inline void PBDGnssMeasurement::set_phaserange(double value) {
  
  phaserange_ = value;
  // @@protoc_insertion_point(field_set:PBDGnssMeasurement.phaseRange)
}

// double phaseRangeRate = 12;
inline void PBDGnssMeasurement::clear_phaserangerate() {
  phaserangerate_ = 0;
}
inline double PBDGnssMeasurement::phaserangerate() const {
  // @@protoc_insertion_point(field_get:PBDGnssMeasurement.phaseRangeRate)
  return phaserangerate_;
}
inline void PBDGnssMeasurement::set_phaserangerate(double value) {
  
  phaserangerate_ = value;
  // @@protoc_insertion_point(field_set:PBDGnssMeasurement.phaseRangeRate)
}

// uint32 phaseRangeLockTimeIndicator = 13;
inline void PBDGnssMeasurement::clear_phaserangelocktimeindicator() {
  phaserangelocktimeindicator_ = 0u;
}
inline ::google::protobuf::uint32 PBDGnssMeasurement::phaserangelocktimeindicator() const {
  // @@protoc_insertion_point(field_get:PBDGnssMeasurement.phaseRangeLockTimeIndicator)
  return phaserangelocktimeindicator_;
}
inline void PBDGnssMeasurement::set_phaserangelocktimeindicator(::google::protobuf::uint32 value) {
  
  phaserangelocktimeindicator_ = value;
  // @@protoc_insertion_point(field_set:PBDGnssMeasurement.phaseRangeLockTimeIndicator)
}

// float signalCNR = 14;
inline void PBDGnssMeasurement::clear_signalcnr() {
  signalcnr_ = 0;
}
inline float PBDGnssMeasurement::signalcnr() const {
  // @@protoc_insertion_point(field_get:PBDGnssMeasurement.signalCNR)
  return signalcnr_;
}
inline void PBDGnssMeasurement::set_signalcnr(float value) {
  
  signalcnr_ = value;
  // @@protoc_insertion_point(field_set:PBDGnssMeasurement.signalCNR)
}

inline bool PBDGnssMeasurement::has_gnssSignalIdentifier() const {
  return gnssSignalIdentifier_case() != GNSSSIGNALIDENTIFIER_NOT_SET;
}
inline void PBDGnssMeasurement::clear_has_gnssSignalIdentifier() {
  _oneof_case_[0] = GNSSSIGNALIDENTIFIER_NOT_SET;
}
inline PBDGnssMeasurement::GnssSignalIdentifierCase PBDGnssMeasurement::gnssSignalIdentifier_case() const {
  return PBDGnssMeasurement::GnssSignalIdentifierCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// PBDGnssObservation

// uint32 stationID = 1;
inline void PBDGnssObservation::clear_stationid() {
  stationid_ = 0u;
}
inline ::google::protobuf::uint32 PBDGnssObservation::stationid() const {
  // @@protoc_insertion_point(field_get:PBDGnssObservation.stationID)
  return stationid_;
}
inline void PBDGnssObservation::set_stationid(::google::protobuf::uint32 value) {
  
  stationid_ = value;
  // @@protoc_insertion_point(field_set:PBDGnssObservation.stationID)
}

// .PBGnssEpochTime epochTime = 2;
inline bool PBDGnssObservation::has_epochtime() const {
  return this != internal_default_instance() && epochtime_ != NULL;
}
inline void PBDGnssObservation::clear_epochtime() {
  if (GetArenaNoVirtual() == NULL && epochtime_ != NULL) delete epochtime_;
  epochtime_ = NULL;
}
inline const ::PBGnssEpochTime& PBDGnssObservation::epochtime() const {
  // @@protoc_insertion_point(field_get:PBDGnssObservation.epochTime)
  return epochtime_ != NULL ? *epochtime_
                         : *::PBGnssEpochTime::internal_default_instance();
}
inline ::PBGnssEpochTime* PBDGnssObservation::mutable_epochtime() {
  
  if (epochtime_ == NULL) {
    epochtime_ = new ::PBGnssEpochTime;
  }
  // @@protoc_insertion_point(field_mutable:PBDGnssObservation.epochTime)
  return epochtime_;
}
inline ::PBGnssEpochTime* PBDGnssObservation::release_epochtime() {
  // @@protoc_insertion_point(field_release:PBDGnssObservation.epochTime)
  
  ::PBGnssEpochTime* temp = epochtime_;
  epochtime_ = NULL;
  return temp;
}
inline void PBDGnssObservation::set_allocated_epochtime(::PBGnssEpochTime* epochtime) {
  delete epochtime_;
  epochtime_ = epochtime;
  if (epochtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBDGnssObservation.epochTime)
}

// .PBDGnssObservationStatusFlags statusFlags = 3;
inline bool PBDGnssObservation::has_statusflags() const {
  return this != internal_default_instance() && statusflags_ != NULL;
}
inline void PBDGnssObservation::clear_statusflags() {
  if (GetArenaNoVirtual() == NULL && statusflags_ != NULL) delete statusflags_;
  statusflags_ = NULL;
}
inline const ::PBDGnssObservationStatusFlags& PBDGnssObservation::statusflags() const {
  // @@protoc_insertion_point(field_get:PBDGnssObservation.statusFlags)
  return statusflags_ != NULL ? *statusflags_
                         : *::PBDGnssObservationStatusFlags::internal_default_instance();
}
inline ::PBDGnssObservationStatusFlags* PBDGnssObservation::mutable_statusflags() {
  
  if (statusflags_ == NULL) {
    statusflags_ = new ::PBDGnssObservationStatusFlags;
  }
  // @@protoc_insertion_point(field_mutable:PBDGnssObservation.statusFlags)
  return statusflags_;
}
inline ::PBDGnssObservationStatusFlags* PBDGnssObservation::release_statusflags() {
  // @@protoc_insertion_point(field_release:PBDGnssObservation.statusFlags)
  
  ::PBDGnssObservationStatusFlags* temp = statusflags_;
  statusflags_ = NULL;
  return temp;
}
inline void PBDGnssObservation::set_allocated_statusflags(::PBDGnssObservationStatusFlags* statusflags) {
  delete statusflags_;
  statusflags_ = statusflags;
  if (statusflags) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBDGnssObservation.statusFlags)
}

// uint32 issueOfDataStation = 4;
inline void PBDGnssObservation::clear_issueofdatastation() {
  issueofdatastation_ = 0u;
}
inline ::google::protobuf::uint32 PBDGnssObservation::issueofdatastation() const {
  // @@protoc_insertion_point(field_get:PBDGnssObservation.issueOfDataStation)
  return issueofdatastation_;
}
inline void PBDGnssObservation::set_issueofdatastation(::google::protobuf::uint32 value) {
  
  issueofdatastation_ = value;
  // @@protoc_insertion_point(field_set:PBDGnssObservation.issueOfDataStation)
}

// .PBDGnssConstellationIdentifier constellationIdentifier = 5;
inline void PBDGnssObservation::clear_constellationidentifier() {
  constellationidentifier_ = 0;
}
inline ::PBDGnssConstellationIdentifier PBDGnssObservation::constellationidentifier() const {
  // @@protoc_insertion_point(field_get:PBDGnssObservation.constellationIdentifier)
  return static_cast< ::PBDGnssConstellationIdentifier >(constellationidentifier_);
}
inline void PBDGnssObservation::set_constellationidentifier(::PBDGnssConstellationIdentifier value) {
  
  constellationidentifier_ = value;
  // @@protoc_insertion_point(field_set:PBDGnssObservation.constellationIdentifier)
}

// uint32 numberOfMeasurements = 6;
inline void PBDGnssObservation::clear_numberofmeasurements() {
  numberofmeasurements_ = 0u;
}
inline ::google::protobuf::uint32 PBDGnssObservation::numberofmeasurements() const {
  // @@protoc_insertion_point(field_get:PBDGnssObservation.numberOfMeasurements)
  return numberofmeasurements_;
}
inline void PBDGnssObservation::set_numberofmeasurements(::google::protobuf::uint32 value) {
  
  numberofmeasurements_ = value;
  // @@protoc_insertion_point(field_set:PBDGnssObservation.numberOfMeasurements)
}

// repeated .PBDGnssMeasurement dGnssMeasurement = 7;
inline int PBDGnssObservation::dgnssmeasurement_size() const {
  return dgnssmeasurement_.size();
}
inline void PBDGnssObservation::clear_dgnssmeasurement() {
  dgnssmeasurement_.Clear();
}
inline const ::PBDGnssMeasurement& PBDGnssObservation::dgnssmeasurement(int index) const {
  // @@protoc_insertion_point(field_get:PBDGnssObservation.dGnssMeasurement)
  return dgnssmeasurement_.Get(index);
}
inline ::PBDGnssMeasurement* PBDGnssObservation::mutable_dgnssmeasurement(int index) {
  // @@protoc_insertion_point(field_mutable:PBDGnssObservation.dGnssMeasurement)
  return dgnssmeasurement_.Mutable(index);
}
inline ::PBDGnssMeasurement* PBDGnssObservation::add_dgnssmeasurement() {
  // @@protoc_insertion_point(field_add:PBDGnssObservation.dGnssMeasurement)
  return dgnssmeasurement_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PBDGnssMeasurement >*
PBDGnssObservation::mutable_dgnssmeasurement() {
  // @@protoc_insertion_point(field_mutable_list:PBDGnssObservation.dGnssMeasurement)
  return &dgnssmeasurement_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PBDGnssMeasurement >&
PBDGnssObservation::dgnssmeasurement() const {
  // @@protoc_insertion_point(field_list:PBDGnssObservation.dGnssMeasurement)
  return dgnssmeasurement_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::PBLocConst> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocConst>() {
  return ::PBLocConst_descriptor();
}
template <> struct is_proto_enum< ::PBLocPositionMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocPositionMode>() {
  return ::PBLocPositionMode_descriptor();
}
template <> struct is_proto_enum< ::PBLocGpsPositionRecurrence> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocGpsPositionRecurrence>() {
  return ::PBLocGpsPositionRecurrence_descriptor();
}
template <> struct is_proto_enum< ::PBLocSessionStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocSessionStatus>() {
  return ::PBLocSessionStatus_descriptor();
}
template <> struct is_proto_enum< ::PBLocPosTechMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocPosTechMask>() {
  return ::PBLocPosTechMask_descriptor();
}
template <> struct is_proto_enum< ::PBLocGpsSpoofMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocGpsSpoofMask>() {
  return ::PBLocGpsSpoofMask_descriptor();
}
template <> struct is_proto_enum< ::PBGpsLocationExtendedFlagsLower32> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGpsLocationExtendedFlagsLower32>() {
  return ::PBGpsLocationExtendedFlagsLower32_descriptor();
}
template <> struct is_proto_enum< ::PBGpsLocationExtendedFlagsUpper32> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGpsLocationExtendedFlagsUpper32>() {
  return ::PBGpsLocationExtendedFlagsUpper32_descriptor();
}
template <> struct is_proto_enum< ::PBLocGpsLocationFlags> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocGpsLocationFlags>() {
  return ::PBLocGpsLocationFlags_descriptor();
}
template <> struct is_proto_enum< ::PBGnssSvType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssSvType>() {
  return ::PBGnssSvType_descriptor();
}
template <> struct is_proto_enum< ::PBGnssSvOptionsMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssSvOptionsMask>() {
  return ::PBGnssSvOptionsMask_descriptor();
}
template <> struct is_proto_enum< ::PBGnssPowerMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssPowerMode>() {
  return ::PBGnssPowerMode_descriptor();
}
template <> struct is_proto_enum< ::PBPositioningEngineMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBPositioningEngineMask>() {
  return ::PBPositioningEngineMask_descriptor();
}
template <> struct is_proto_enum< ::PBLocReliability> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocReliability>() {
  return ::PBLocReliability_descriptor();
}
template <> struct is_proto_enum< ::PBGnssAidingDataSvMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssAidingDataSvMask>() {
  return ::PBGnssAidingDataSvMask_descriptor();
}
template <> struct is_proto_enum< ::PBGnssAidingDataSvTypeMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssAidingDataSvTypeMask>() {
  return ::PBGnssAidingDataSvTypeMask_descriptor();
}
template <> struct is_proto_enum< ::PBGnssAidingDataCommonMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssAidingDataCommonMask>() {
  return ::PBGnssAidingDataCommonMask_descriptor();
}
template <> struct is_proto_enum< ::PBGnss_LocSvSystemEnumType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnss_LocSvSystemEnumType>() {
  return ::PBGnss_LocSvSystemEnumType_descriptor();
}
template <> struct is_proto_enum< ::PBGnssSignalInfoMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssSignalInfoMask>() {
  return ::PBGnssSignalInfoMask_descriptor();
}
template <> struct is_proto_enum< ::PBGnssConstellationInfoMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssConstellationInfoMask>() {
  return ::PBGnssConstellationInfoMask_descriptor();
}
template <> struct is_proto_enum< ::PBDrCalibrationStatusMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBDrCalibrationStatusMask>() {
  return ::PBDrCalibrationStatusMask_descriptor();
}
template <> struct is_proto_enum< ::PBLocOutputEngineType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocOutputEngineType>() {
  return ::PBLocOutputEngineType_descriptor();
}
template <> struct is_proto_enum< ::PBGnssMeasUsageInfoValidityMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssMeasUsageInfoValidityMask>() {
  return ::PBGnssMeasUsageInfoValidityMask_descriptor();
}
template <> struct is_proto_enum< ::PBGnssMeasUsageStatusBitMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssMeasUsageStatusBitMask>() {
  return ::PBGnssMeasUsageStatusBitMask_descriptor();
}
template <> struct is_proto_enum< ::PBGpsSvMeasHeaderFlags> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGpsSvMeasHeaderFlags>() {
  return ::PBGpsSvMeasHeaderFlags_descriptor();
}
template <> struct is_proto_enum< ::PBGnssLocSvMeasStatusMaskType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssLocSvMeasStatusMaskType>() {
  return ::PBGnssLocSvMeasStatusMaskType_descriptor();
}
template <> struct is_proto_enum< ::PBCarrierPhaseAmbiguityType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBCarrierPhaseAmbiguityType>() {
  return ::PBCarrierPhaseAmbiguityType_descriptor();
}
template <> struct is_proto_enum< ::PBLocDgnssCorrectionSourceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocDgnssCorrectionSourceType>() {
  return ::PBLocDgnssCorrectionSourceType_descriptor();
}
template <> struct is_proto_enum< ::PBGnssLocationPosDataMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssLocationPosDataMask>() {
  return ::PBGnssLocationPosDataMask_descriptor();
}
template <> struct is_proto_enum< ::PBGnssSvPolyStatusMaskValidity> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssSvPolyStatusMaskValidity>() {
  return ::PBGnssSvPolyStatusMaskValidity_descriptor();
}
template <> struct is_proto_enum< ::PBGnssSvPolyStatusMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssSvPolyStatusMask>() {
  return ::PBGnssSvPolyStatusMask_descriptor();
}
template <> struct is_proto_enum< ::PBUlpGnssSvPolyValidFlags> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBUlpGnssSvPolyValidFlags>() {
  return ::PBUlpGnssSvPolyValidFlags_descriptor();
}
template <> struct is_proto_enum< ::PBUlpGnssSvMeasurementValidFlags> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBUlpGnssSvMeasurementValidFlags>() {
  return ::PBUlpGnssSvMeasurementValidFlags_descriptor();
}
template <> struct is_proto_enum< ::PBLocNavSolutionMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocNavSolutionMask>() {
  return ::PBLocNavSolutionMask_descriptor();
}
template <> struct is_proto_enum< ::PBLocSvInfoSource> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocSvInfoSource>() {
  return ::PBLocSvInfoSource_descriptor();
}
template <> struct is_proto_enum< ::PBGnssEphAction> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssEphAction>() {
  return ::PBGnssEphAction_descriptor();
}
template <> struct is_proto_enum< ::PBGalEphSignalSource> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGalEphSignalSource>() {
  return ::PBGalEphSignalSource_descriptor();
}
template <> struct is_proto_enum< ::PBGnssAdditionalSystemInfoMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssAdditionalSystemInfoMask>() {
  return ::PBGnssAdditionalSystemInfoMask_descriptor();
}
template <> struct is_proto_enum< ::PBLocSvDgnssMeasStatusMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocSvDgnssMeasStatusMask>() {
  return ::PBLocSvDgnssMeasStatusMask_descriptor();
}
template <> struct is_proto_enum< ::PBSvSearchStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBSvSearchStatus>() {
  return ::PBSvSearchStatus_descriptor();
}
template <> struct is_proto_enum< ::PBSvInfoMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBSvInfoMask>() {
  return ::PBSvInfoMask_descriptor();
}
template <> struct is_proto_enum< ::PBLocSourceofFreqEnumType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocSourceofFreqEnumType>() {
  return ::PBLocSourceofFreqEnumType_descriptor();
}
template <> struct is_proto_enum< ::PBLocInterSystemBiasValidMaskType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocInterSystemBiasValidMaskType>() {
  return ::PBLocInterSystemBiasValidMaskType_descriptor();
}
template <> struct is_proto_enum< ::PBGnssSystemTimeStructTypeFlags> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssSystemTimeStructTypeFlags>() {
  return ::PBGnssSystemTimeStructTypeFlags_descriptor();
}
template <> struct is_proto_enum< ::PBGnssGloTimeInfoBits> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssGloTimeInfoBits>() {
  return ::PBGnssGloTimeInfoBits_descriptor();
}
template <> struct is_proto_enum< ::PBLeverArmTypeMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLeverArmTypeMask>() {
  return ::PBLeverArmTypeMask_descriptor();
}
template <> struct is_proto_enum< ::PBQDgnssDataType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBQDgnssDataType>() {
  return ::PBQDgnssDataType_descriptor();
}
template <> struct is_proto_enum< ::PBDGnssConstellationIdentifier> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBDGnssConstellationIdentifier>() {
  return ::PBDGnssConstellationIdentifier_descriptor();
}
template <> struct is_proto_enum< ::PBDGnssConstellationBitMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBDGnssConstellationBitMask>() {
  return ::PBDGnssConstellationBitMask_descriptor();
}
template <> struct is_proto_enum< ::PBDGnssGpsSignalIdentifier> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBDGnssGpsSignalIdentifier>() {
  return ::PBDGnssGpsSignalIdentifier_descriptor();
}
template <> struct is_proto_enum< ::PBDGnssGpsSignalBitMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBDGnssGpsSignalBitMask>() {
  return ::PBDGnssGpsSignalBitMask_descriptor();
}
template <> struct is_proto_enum< ::PBDGnssGlonassSignalIdentifier> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBDGnssGlonassSignalIdentifier>() {
  return ::PBDGnssGlonassSignalIdentifier_descriptor();
}
template <> struct is_proto_enum< ::PBDGnssGlonassSignalBitMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBDGnssGlonassSignalBitMask>() {
  return ::PBDGnssGlonassSignalBitMask_descriptor();
}
template <> struct is_proto_enum< ::PBDGnssGalileoSignalIdentifier> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBDGnssGalileoSignalIdentifier>() {
  return ::PBDGnssGalileoSignalIdentifier_descriptor();
}
template <> struct is_proto_enum< ::PBDGnssGalileoSignalBitMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBDGnssGalileoSignalBitMask>() {
  return ::PBDGnssGalileoSignalBitMask_descriptor();
}
template <> struct is_proto_enum< ::PBDGnssQzssSignalIdentifier> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBDGnssQzssSignalIdentifier>() {
  return ::PBDGnssQzssSignalIdentifier_descriptor();
}
template <> struct is_proto_enum< ::PBDGnssQzssSignalBitMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBDGnssQzssSignalBitMask>() {
  return ::PBDGnssQzssSignalBitMask_descriptor();
}
template <> struct is_proto_enum< ::PBDGnssBdsSignalIdentifier> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBDGnssBdsSignalIdentifier>() {
  return ::PBDGnssBdsSignalIdentifier_descriptor();
}
template <> struct is_proto_enum< ::PBDGnssBdsSignalBitMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBDGnssBdsSignalBitMask>() {
  return ::PBDGnssBdsSignalBitMask_descriptor();
}
template <> struct is_proto_enum< ::PBDGnssSbasSignalIdentifier> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBDGnssSbasSignalIdentifier>() {
  return ::PBDGnssSbasSignalIdentifier_descriptor();
}
template <> struct is_proto_enum< ::PBDGnssSbasSignalBitMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBDGnssSbasSignalBitMask>() {
  return ::PBDGnssSbasSignalBitMask_descriptor();
}
template <> struct is_proto_enum< ::PBDGnssSignalStatusFlags> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBDGnssSignalStatusFlags>() {
  return ::PBDGnssSignalStatusFlags_descriptor();
}
template <> struct is_proto_enum< ::PBExtendedSatelliteInformation> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBExtendedSatelliteInformation>() {
  return ::PBExtendedSatelliteInformation_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_LocationDataTypes_2eproto__INCLUDED
